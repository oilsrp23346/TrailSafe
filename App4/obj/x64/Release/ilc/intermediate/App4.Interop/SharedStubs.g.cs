#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 64-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The 'McgInterop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace McgInterop
{
	internal unsafe static partial class ForwardComSharedStubs
	{
		// Signature, Windows.Foundation.IUriEscapeStatics.UnescapeComponent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__string__(
					global::System.__ComObject __this, 
					string toUnescape, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_toUnescape = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_toUnescape = toUnescape)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_toUnescape;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_toUnescape, toUnescape, &(hstring_header_toUnescape), &(unsafe_toUnescape));
					unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_toUnescape, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.Foundation.IUriRuntimeClassWithAbsoluteCanonicalUri.get_AbsoluteCanonicalUri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__Type__object__string__object__(
					global::System.__ComObject __this, 
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Type__Impl.UnsafeType unsafe_targetType;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.HSTRING unsafe_language = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				global::System.Runtime.InteropServices.HSTRING unsafe_targetType__HSTRING__Name;
				int unsafe_targetType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									targetType, 
									out unsafe_targetType__HSTRING__Name, 
									out unsafe_targetType__int__Kind
								);
				unsafe_targetType.Name = unsafe_targetType__HSTRING__Name;
				unsafe_targetType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_targetType__int__Kind;
				unsafe_parameter = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				fixed (char* pBuffer_language = language)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_language;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_language, language, &(hstring_header_language), &(unsafe_language));
					unsafe_returnValue__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										unsafe_targetType, 
										unsafe_parameter, 
										unsafe_language, 
										&(unsafe_returnValue__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				}
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_IntPtr__out_IntPtr__IntPtr__(
					global::System.__ComObject __this, 
					global::System.IntPtr outer, 
					out global::System.IntPtr inner, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_inner;
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								outer, 
								&(unsafe_inner), 
								&(unsafe_instance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			instance__retval = unsafe_instance__retval;
			inner = unsafe_inner;
			// Return
			return instance__retval;
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Application__Windows_UI_Xaml__Application *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Application Func_UI_Xaml_Application__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IApplication__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IApplication__Impl.Vtbl**);
			global::Windows.UI.Xaml.Application value__retval = default(global::Windows.UI.Xaml.Application);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Application)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IApplication).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Application).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.ApplicationInitializationCallback.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ApplicationInitializationCallbackParams__Windows_UI_Xaml__ApplicationInitializationCallbackParams *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_ApplicationInitializationCallbackParams__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ApplicationInitializationCallbackParams p, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl** unsafe_p = default(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_p = (global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									p, 
									typeof(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_p
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_p)));
				global::System.GC.KeepAlive(p);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.Start, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ApplicationInitializationCallback__Windows_UI_Xaml__ApplicationInitializationCallback *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_ApplicationInitializationCallback__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ApplicationInitializationCallback callback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl** unsafe_callback = default(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_callback = (global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									callback, 
									typeof(global::Windows.UI.Xaml.ApplicationInitializationCallback).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget0>(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_callback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_callback)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.LoadComponent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Primitives_ComponentResourceLocation__Windows_UI_Xaml_Controls_Primitives__ComponentResourceLocation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Uri__int(
					global::System.__ComObject __this, 
					object component, 
					global::System.Uri resourceLocator, 
					int componentResourceLocation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_component = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_resourceLocator = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_component = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(component);
				if (resourceLocator != null)
					unsafe_resourceLocator = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(resourceLocator);
				else
					unsafe_resourceLocator = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_component, 
									unsafe_resourceLocator, 
									componentResourceLocation
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_component)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceLocator)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.get_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ApplicationTheme__Windows_UI_Xaml__ApplicationTheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ApplicationTheme Func_UI_Xaml_ApplicationTheme__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationTheme unsafe_value__retval;
			global::Windows.UI.Xaml.ApplicationTheme value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IApplication.put_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ApplicationTheme__Windows_UI_Xaml__ApplicationTheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int(
					global::System.__ComObject __this, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.UnhandledExceptionEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UnhandledExceptionEventArgs__Windows_UI_Xaml__UnhandledExceptionEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_UnhandledExceptionEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.UnhandledExceptionEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_UnhandledException, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_UnhandledExceptionEventHandler__Windows_UI_Xaml__UnhandledExceptionEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_UnhandledExceptionEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UnhandledExceptionEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.UnhandledExceptionEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget1>(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.remove_UnhandledException, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.SuspendingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingEventArgs__Windows_ApplicationModel__SuspendingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__ApplicationModel_SuspendingEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.ApplicationModel.SuspendingEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.ApplicationModel.ISuspendingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_Suspending, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SuspendingEventHandler__Windows_UI_Xaml__SuspendingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_SuspendingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SuspendingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.SuspendingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_Resuming, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_object___Windows_Foundation__EventHandler_A_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_System_Object_V___Impl.Vtbl** unsafe_value = default(global::System.EventHandler_A_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.EventHandler_A_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::System.EventHandler<object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget3>(global::System.EventHandler_A_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IUnhandledExceptionEventArgs.get_Exception, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTHResultMarshaller] System_Exception__Windows_Foundation__HResult, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Exception Func_Exception__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Exception__Impl.UnsafeType unsafe_value__retval = default(global::System.Exception__Impl.UnsafeType);
			global::System.Exception value__retval = default(global::System.Exception);
			int unsafe___return__;
			// Marshalling
			unsafe_value__retval = default(global::System.Exception__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = global::System.Runtime.InteropServices.McgMarshal.GetExceptionForHR(
								unsafe_value__retval.Value, 
								true
							);
			// Return
			return value__retval;
		}

		// Signature, Windows.ApplicationModel.ISuspendingEventArgs.get_SuspendingOperation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingOperation__Windows_ApplicationModel__SuspendingOperation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.SuspendingOperation Func_ApplicationModel_SuspendingOperation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.ISuspendingOperation__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.ISuspendingOperation__Impl.Vtbl**);
			global::Windows.ApplicationModel.SuspendingOperation value__retval = default(global::Windows.ApplicationModel.SuspendingOperation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.SuspendingOperation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.ISuspendingOperation).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingOperation).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.ISuspendingOperation.GetDeferral, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingDeferral__Windows_ApplicationModel__SuspendingDeferral *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.SuspendingDeferral Func_ApplicationModel_SuspendingDeferral__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Vtbl** unsafe_deferral__retval = default(global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Vtbl**);
			global::Windows.ApplicationModel.SuspendingDeferral deferral__retval = default(global::Windows.ApplicationModel.SuspendingDeferral);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_deferral__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_deferral__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				deferral__retval = (global::Windows.ApplicationModel.SuspendingDeferral)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_deferral__retval), 
									typeof(global::Windows.ApplicationModel.ISuspendingDeferral).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingDeferral).TypeHandle
								);
				// Return
				return deferral__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_deferral__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.ISuspendingDeferral.Complete, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Activation_IActivatedEventArgs__Windows_ApplicationModel_Activation__IActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_IActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.IActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnLaunched, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_LaunchActivatedEventArgs__Windows_ApplicationModel_Activation__LaunchActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_LaunchActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileActivatedEventArgs__Windows_ApplicationModel_Activation__FileActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnSearchActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_SearchActivatedEventArgs__Windows_ApplicationModel_Activation__SearchActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_SearchActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnShareTargetActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_ShareTargetActivatedEventArgs__Windows_ApplicationModel_Activation__ShareTargetActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_ShareTargetActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileOpenPickerActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileOpenPickerActivatedEventArgs__Windows_ApplicationModel_Activation__FileOpenPickerActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileOpenPickerActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileSavePickerActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileSavePickerActivatedEventArgs__Windows_ApplicationModel_Activation__FileSavePickerActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileSavePickerActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnCachedFileUpdaterActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_CachedFileUpdaterActivatedEventArgs__Windows_ApplicationModel_Activation__CachedFileUpdaterActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_CachedFileUpdaterActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnWindowCreated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_WindowCreatedEventArgs__Windows_UI_Xaml__WindowCreatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_WindowCreatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowCreatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IWindowCreatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Activation.IActivatedEventArgs.get_PreviousExecutionState, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_ApplicationModel_Activation_ApplicationExecutionState__Windows_ApplicationModel_Activation__ApplicationExecutionState, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Activation.ApplicationExecutionState Func_ApplicationModel_Activation_ApplicationExecutionState__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState unsafe_value__retval;
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_RenderTransformOrigin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point Func__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe_value__retval;
			global::Windows.Foundation.Point value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_RenderTransformOrigin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Point__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Input.KeyEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_KeyRoutedEventArgs__Windows_UI_Xaml_Input__KeyRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_KeyRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_KeyUp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_KeyEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget4>(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.RoutedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_RoutedEventArgs__Windows_UI_Xaml__RoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_RoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.RoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_GotFocus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_RoutedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget5>(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.DragEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragEventArgs__Windows_UI_Xaml__DragEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_DragEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.DragEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDragEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DragEnter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_DragEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget6>(global::Windows.UI.Xaml.DragEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.PointerEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_PointerRoutedEventArgs__Windows_UI_Xaml_Input__PointerRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_PointerRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_PointerPressed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_PointerEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget7>(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.TappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_TappedRoutedEventArgs__Windows_UI_Xaml_Input__TappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_TappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_Tapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_TappedEventHandler__Windows_UI_Xaml_Input__TappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_TappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.TappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.TappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget8>(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.DoubleTappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_DoubleTappedRoutedEventArgs__Windows_UI_Xaml_Input__DoubleTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_DoubleTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DoubleTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_DoubleTappedEventHandler__Windows_UI_Xaml_Input__DoubleTappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_DoubleTappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.DoubleTappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget9>(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.HoldingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_HoldingRoutedEventArgs__Windows_UI_Xaml_Input__HoldingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_HoldingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_Holding, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_HoldingEventHandler__Windows_UI_Xaml_Input__HoldingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_HoldingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.HoldingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.HoldingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget10>(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.RightTappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_RightTappedRoutedEventArgs__Windows_UI_Xaml_Input__RightTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_RightTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_RightTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_RightTappedEventHandler__Windows_UI_Xaml_Input__RightTappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_RightTappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.RightTappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.RightTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget11>(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationStartingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartingEventHandler__Windows_UI_Xaml_Input__ManipulationStartingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationStartingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget12>(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationInertiaStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationInertiaStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__Windows_UI_Xaml_Input__ManipulationInertiaStartingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationInertiaStartingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget13>(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationStartedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationStartedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartedEventHandler__Windows_UI_Xaml_Input__ManipulationStartedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationStartedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget14>(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationDeltaEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationDeltaRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationDelta, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaEventHandler__Windows_UI_Xaml_Input__ManipulationDeltaEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationDeltaEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget15>(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationCompletedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationCompletedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedEventHandler__Windows_UI_Xaml_Input__ManipulationCompletedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationCompletedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget16>(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_Windows_Foundation_Point_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> Func__Point___Rect___IEnumerable_1__IEnumerable_1__Point__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> returnValue__retval = default(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									boundingRect, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_PatternInterface__Windows_UI_Xaml_Automation_Peers__PatternInterface, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_intobject__(
					global::System.__ComObject __this, 
					int patternInterface, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									patternInterface, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationControlTypeCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationControlType__Windows_UI_Xaml_Automation_Peers__AutomationControlType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationControlType Func_UI_Xaml_Automation_Peers_AutomationControlType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetBoundingRectangleCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func__Rect__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect unsafe_returnValue__retval;
			global::Windows.Foundation.Rect returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetChildrenCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__IList_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> returnValue__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetOrientationCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationOrientation__Windows_UI_Xaml_Automation_Peers__AutomationOrientation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation Func_UI_Xaml_Automation_Peers_AutomationOrientation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.HasKeyboardFocusCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_bool__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval != 0;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPeerFromPointCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func__Point__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point point, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLiveSettingCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationLiveSetting__Windows_UI_Xaml_Automation_Peers__AutomationLiveSetting, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting Func_UI_Xaml_Automation_Peers_AutomationLiveSetting__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_uint__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.get_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__IReadOnlyList_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_AutomationPeer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.RemoveAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_AutomationPeer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_AutomationPeer__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.PeerFromProvider, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Provider_IRawElementProviderSimple__Windows_UI_Xaml_Automation_Provider__IRawElementProviderSimple *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_UI_Xaml_Automation_Provider_IRawElementProviderSimple__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl** unsafe_provider = default(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_provider = (global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									provider, 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_provider, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_provider)));
				global::System.GC.KeepAlive(provider);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.ProviderFromPeer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Provider_IRawElementProviderSimple__Windows_UI_Xaml_Automation_Provider__IRawElementProviderSimple *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple Func_UI_Xaml_Automation_Peers_AutomationPeer__UI_Xaml_Automation_Provider_IRawElementProviderSimple__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_peer = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple returnValue__retval = default(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_peer = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									peer, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_peer, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_peer)));
				global::System.GC.KeepAlive(peer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetElementFromPointCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func__Point__object__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point pointInWindowCoordinates, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									pointInWindowCoordinates, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetFocusedElementCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetAnnotationsCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__IList_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> returnValue__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetPositionInSetCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe_returnValue__retval;
			int returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation Func_uint__UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__IReadOnlyList_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation Func_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLandmarkTypeCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationLandmarkType__Windows_UI_Xaml_Automation_Peers__AutomationLandmarkType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType Func_UI_Xaml_Automation_Peers_AutomationLandmarkType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Foundation.Point>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Point_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point> Func__Collections_IIterator_1__Point___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.Point>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__Point__uint__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Point* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Point* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Point*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IIterable_A_Windows_Foundation_Point_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> Func__Collections_IIterator_1__IEnumerable_1__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point> Func__IEnumerable_1__Point___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point> __value__retval = default(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IEnumerable_1__Point___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragStartingEventArgs__Windows_UI_Xaml__DragStartingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement sender, 
					global::Windows.UI.Xaml.DragStartingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDragStartingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement3.add_DragStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DragStartingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget17>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DropCompletedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DropCompletedEventArgs__Windows_UI_Xaml__DropCompletedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement sender, 
					global::Windows.UI.Xaml.DropCompletedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDropCompletedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement3.add_DropCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DropCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget18>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.Lookup, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__object__(
					global::System.__ComObject __this, 
					object key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe___value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object __value__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe___value__retval));
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.HasKey, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_object__bool__(
					global::System.__ComObject __this, 
					object key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_object__object___Windows_Foundation_Collections__IMapView_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<object, object> Func__IReadOnlyDictionary_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<object, object> __value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<object, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<object, object>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.Insert, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_object__object__bool__(
					global::System.__ComObject __this, 
					object key, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									unsafe_value, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.Remove, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__(
					global::System.__ComObject __this, 
					object key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>> Func__Collections_IIterator_1__KeyValuePair_2_object__object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<object, object> Func__KeyValuePair_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<object, object> __value__retval = default(global::System.Collections.Generic.KeyValuePair<object, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<object, object>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_object__object___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<object, object>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<object, object>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<System.Object,System.Object>.Split, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_object__object___Windows_Foundation_Collections__IMapView_A_object_j_object_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_object__object___Windows_Foundation_Collections__IMapView_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__IReadOnlyDictionary_2_object__object___out__IReadOnlyDictionary_2_object__object___(
					global::System.__ComObject __this, 
					out global::System.Collections.Generic.IReadOnlyDictionary<object, object> first, 
					out global::System.Collections.Generic.IReadOnlyDictionary<object, object> second, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe_first = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe_second = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_first = null;
				unsafe_second = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_first), 
									&(unsafe_second)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				second = (global::System.Collections.Generic.IReadOnlyDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_second), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<object, object>).TypeHandle
								);
				first = (global::System.Collections.Generic.IReadOnlyDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_first), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<object, object>).TypeHandle
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_first)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_second)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Resources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ResourceDictionary Func_UI_Xaml_ResourceDictionary__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			global::Windows.UI.Xaml.ResourceDictionary value__retval = default(global::Windows.UI.Xaml.ResourceDictionary);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.ResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle, 
									typeof(global::Windows.UI.Xaml.ResourceDictionary).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Resources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_ResourceDictionary__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ResourceDictionary value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Width, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static double Func_double__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			double unsafe_value__retval;
			double value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Width, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_double__(
					global::System.__ComObject __this, 
					double value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_HorizontalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_HorizontalAlignment__Windows_UI_Xaml__HorizontalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.HorizontalAlignment Func_UI_Xaml_HorizontalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.HorizontalAlignment unsafe_value__retval;
			global::Windows.UI.Xaml.HorizontalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_VerticalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_VerticalAlignment__Windows_UI_Xaml__VerticalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VerticalAlignment Func_UI_Xaml_VerticalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.VerticalAlignment unsafe_value__retval;
			global::Windows.UI.Xaml.VerticalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Margin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Thickness Func_UI_Xaml_Thickness__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Thickness unsafe_value__retval;
			global::Windows.UI.Xaml.Thickness value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Margin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Thickness__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Thickness value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Name, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__(
					global::System.__ComObject __this, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_value = value)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_BaseUri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Uri Func_Uri__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::System.Uri value__retval = default(global::System.Uri);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = global::McgInterop.McgHelpers.WindowsFoundationUri2SystemUri(((global::System.__ComObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_value__retval), 
											typeof(global::Windows.Foundation.IUriRuntimeClass).TypeHandle
										)));
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.SizeChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SizeChangedEventArgs__Windows_UI_Xaml__SizeChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_SizeChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.SizeChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.ISizeChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.add_SizeChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SizeChangedEventHandler__Windows_UI_Xaml__SizeChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_SizeChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SizeChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.SizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget19>(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size___Size__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Size availableSize, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_returnValue__retval;
			global::Windows.Foundation.Size returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								availableSize, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.DataContextChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataContextChangedEventArgs__Windows_UI_Xaml__DataContextChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement sender, 
					global::Windows.UI.Xaml.DataContextChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDataContextChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement2.add_DataContextChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml_DataContextChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget20>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__bool__bool__(
					global::System.__ComObject __this, 
					string stateName, 
					bool useTransitions, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_stateName = default(global::System.Runtime.InteropServices.HSTRING);
			sbyte unsafe_useTransitions;
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_stateName = stateName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_stateName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_stateName, stateName, &(hstring_header_stateName), &(unsafe_stateName));
				unsafe_useTransitions = (useTransitions ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_stateName, 
									unsafe_useTransitions, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = unsafe_returnValue__retval != 0;
			}
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement3.add_Loading, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget21>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FontFamily, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_FontFamily__Windows_UI_Xaml_Media__FontFamily *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.FontFamily Func_UI_Xaml_Media_FontFamily__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.FontFamily value__retval = default(global::Windows.UI.Xaml.Media.FontFamily);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.FontFamily)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IFontFamily).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.FontFamily).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_FontFamily, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_FontFamily__Windows_UI_Xaml_Media__FontFamily *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_FontFamily__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.FontFamily value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IFontFamily).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontWeight Func_UI_Text_FontWeight__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontWeight unsafe_value__retval;
			global::Windows.UI.Text.FontWeight value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_FontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Text_FontWeight__(
					global::System.__ComObject __this, 
					global::Windows.UI.Text.FontWeight value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_Foreground, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Brush__Windows_UI_Xaml_Media__Brush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Brush Func_UI_Xaml_Media_Brush__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Brush value__retval = default(global::Windows.UI.Xaml.Media.Brush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Brush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IBrush).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Brush).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_Foreground, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Brush__Windows_UI_Xaml_Media__Brush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Brush__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Brush value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_IsTabStop, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_bool__(
					global::System.__ComObject __this, 
					bool value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_value;
			int unsafe___return__;
			// Marshalling
			unsafe_value = (value ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.DependencyPropertyChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventArgs__Windows_UI_Xaml__DependencyPropertyChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_DependencyPropertyChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.add_IsEnabledChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventHandler__Windows_UI_Xaml__DependencyPropertyChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_DependencyPropertyChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget22>(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_PointerRoutedEventArgs__Windows_UI_Xaml_Input__PointerRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_PointerRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_TappedRoutedEventArgs__Windows_UI_Xaml_Input__TappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_TappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_DoubleTappedRoutedEventArgs__Windows_UI_Xaml_Input__DoubleTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_DoubleTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnHolding, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_HoldingRoutedEventArgs__Windows_UI_Xaml_Input__HoldingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_HoldingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_RightTappedRoutedEventArgs__Windows_UI_Xaml_Input__RightTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_RightTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationInertiaStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationDeltaRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationCompletedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_KeyRoutedEventArgs__Windows_UI_Xaml_Input__KeyRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_KeyRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_RoutedEventArgs__Windows_UI_Xaml__RoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_RoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragEventArgs__Windows_UI_Xaml__DragEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DragEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDragEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_string__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					string childName, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_childName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject returnValue__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_childName = childName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_childName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_childName, childName, &(hstring_header_childName), &(unsafe_childName));
					unsafe_returnValue__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_childName, 
										&(unsafe_returnValue__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					returnValue__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_returnValue__retval), 
										typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
										typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
									);
				}
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IUserControl.get_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UIElement Func_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.UIElement value__retval = default(global::Windows.UI.Xaml.UIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IUserControl.put_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPage.get_Frame, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Frame__Windows_UI_Xaml_Controls__Frame *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Frame Func_UI_Xaml_Controls_Frame__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Controls.IFrame__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Frame value__retval = default(global::Windows.UI.Xaml.Controls.Frame);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.Frame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IFrame).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Frame).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__object__(
					global::System.__ComObject __this, 
					object oldContent, 
					object newContent, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_oldContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_newContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(oldContent);
				unsafe_newContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(newContent);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContent, 
									unsafe_newContent
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContent)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContent)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DataTemplate__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_oldContentTemplate = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_newContentTemplate = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContentTemplate = (global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldContentTemplate, 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle
								);
				unsafe_newContentTemplate = (global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newContentTemplate, 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContentTemplate, 
									unsafe_newContentTemplate
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContentTemplate)));
				global::System.GC.KeepAlive(oldContentTemplate);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContentTemplate)));
				global::System.GC.KeepAlive(newContentTemplate);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateSelectorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DataTemplateSelector__Windows_UI_Xaml_Controls__DataTemplateSelector *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DataTemplateSelector__Windows_UI_Xaml_Controls__DataTemplateSelector *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_DataTemplateSelector__UI_Xaml_Controls_DataTemplateSelector__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl** unsafe_oldContentTemplateSelector = default(global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl** unsafe_newContentTemplateSelector = default(global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContentTemplateSelector = (global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldContentTemplateSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector).TypeHandle
								);
				unsafe_newContentTemplateSelector = (global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newContentTemplateSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContentTemplateSelector, 
									unsafe_newContentTemplateSelector
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContentTemplateSelector)));
				global::System.GC.KeepAlive(oldContentTemplateSelector);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContentTemplateSelector)));
				global::System.GC.KeepAlive(newContentTemplateSelector);
			}
		}

		// Signature, Windows.UI.Xaml.IDataTemplateStatics2.SetExtensionInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDataTemplateExtension__Windows_UI_Xaml__IDataTemplateExtension *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__UI_Xaml_IDataTemplateExtension__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					global::Windows.UI.Xaml.IDataTemplateExtension value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataTemplateExtension__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDataTemplateExtension__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				unsafe_value = (global::Windows.UI.Xaml.IDataTemplateExtension__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDataTemplateExtension).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs.get_ItemContainer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Primitives_SelectorItem__Windows_UI_Xaml_Controls_Primitives__SelectorItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Primitives.SelectorItem Func_UI_Xaml_Controls_Primitives_SelectorItem__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.ISelectorItem__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Controls.Primitives.ISelectorItem__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Primitives.SelectorItem value__retval = default(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.Primitives.SelectorItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Primitives.ISelectorItem).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DataTemplate Func_object__UI_Xaml_DependencyObject__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					object item, 
					global::Windows.UI.Xaml.DependencyObject container, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_container = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.DataTemplate returnValue__retval = default(global::Windows.UI.Xaml.DataTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_container = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									container, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									unsafe_container, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.DataTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_container)));
				global::System.GC.KeepAlive(container);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2.SelectTemplateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DataTemplate Func_object__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					object item, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.DataTemplate returnValue__retval = default(global::Windows.UI.Xaml.DataTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.DataTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigationEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_Navigated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatedEventHandler__Windows_UI_Xaml_Navigation__NavigatedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigatedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget23>(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventArgs__Windows_UI_Xaml_Navigation__NavigatingCancelEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigatingCancelEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_Navigating, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventHandler__Windows_UI_Xaml_Navigation__NavigatingCancelEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigatingCancelEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget24>(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigationFailedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventArgs__Windows_UI_Xaml_Navigation__NavigationFailedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigationFailedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigationFailedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_NavigationFailed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventHandler__Windows_UI_Xaml_Navigation__NavigationFailedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigationFailedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget25>(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_NavigationStopped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationStoppedEventHandler__Windows_UI_Xaml_Navigation__NavigationStoppedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigationStoppedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget23>(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.Navigate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Type__object__bool__(
					global::System.__ComObject __this, 
					global::System.Type sourcePageType, 
					object parameter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_sourcePageType;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				global::System.Runtime.InteropServices.HSTRING unsafe_sourcePageType__HSTRING__Name;
				int unsafe_sourcePageType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									sourcePageType, 
									out unsafe_sourcePageType__HSTRING__Name, 
									out unsafe_sourcePageType__int__Kind
								);
				unsafe_sourcePageType.Name = unsafe_sourcePageType__HSTRING__Name;
				unsafe_sourcePageType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_sourcePageType__int__Kind;
				unsafe_parameter = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sourcePageType, 
									unsafe_parameter, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = unsafe_returnValue__retval != 0;
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.INavigationFailedEventArgs.get_SourcePageType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Type Func_Type__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type value__retval;
			global::System.Type__Impl.UnsafeType unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
								unsafe_value__retval.Name, 
								((int)unsafe_value__retval.Kind)
							);
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.INavigate.Navigate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Type__bool__(
					global::System.__ComObject __this, 
					global::System.Type sourcePageType, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_sourcePageType;
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			// Marshalling
			global::System.Runtime.InteropServices.HSTRING unsafe_sourcePageType__HSTRING__Name;
			int unsafe_sourcePageType__int__Kind;
			global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
								sourcePageType, 
								out unsafe_sourcePageType__HSTRING__Name, 
								out unsafe_sourcePageType__int__Kind
							);
			unsafe_sourcePageType.Name = unsafe_sourcePageType__HSTRING__Name;
			unsafe_sourcePageType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_sourcePageType__int__Kind;
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_sourcePageType, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval != 0;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventArgs__Windows_UI_Xaml_Navigation__NavigatingCancelEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Navigation_NavigatingCancelEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGridStatics.GetRow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_UI_Xaml_FrameworkElement__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			int unsafe_value__retval;
			int value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGridStatics.SetRow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPanel.get_Children, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_UIElementCollection__Windows_UI_Xaml_Controls__UIElementCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.UIElementCollection Func_UI_Xaml_Controls_UIElementCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.UIElementCollection value__retval = default(global::Windows.UI.Xaml.Controls.UIElementCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.UIElementCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.UIElementCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UIElement Func_uint__UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.UIElement __value__retval = default(global::Windows.UI.Xaml.UIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_UIElement___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_UIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> Func__IReadOnlyList_1_UI_Xaml_UIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_UIElement__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.UIElement value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_UIElement__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
											typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.UIElement>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_UIElement___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_UIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement> Func__Collections_IIterator_1_UI_Xaml_UIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.UIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_UIElement__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
											typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGrid.get_RowDefinitions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinitionCollection__Windows_UI_Xaml_Controls__RowDefinitionCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.RowDefinitionCollection Func_UI_Xaml_Controls_RowDefinitionCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.RowDefinitionCollection value__retval = default(global::Windows.UI.Xaml.Controls.RowDefinitionCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.RowDefinitionCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.RowDefinitionCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGrid.get_ColumnDefinitions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinitionCollection__Windows_UI_Xaml_Controls__ColumnDefinitionCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection Func_UI_Xaml_Controls_ColumnDefinitionCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection value__retval = default(global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRowDefinition.get_Height, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridLength__Windows_UI_Xaml__GridLength, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.GridLength Func_UI_Xaml_GridLength__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.GridLength unsafe_value__retval;
			global::Windows.UI.Xaml.GridLength value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IRowDefinition.put_Height, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridLength__Windows_UI_Xaml__GridLength, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_GridLength__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.GridLength value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.RowDefinition Func_uint__UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.RowDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.RowDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.RowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.RowDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Controls_RowDefinition___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Controls_RowDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition> Func__IReadOnlyList_1_UI_Xaml_Controls_RowDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_RowDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.RowDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Controls.RowDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.RowDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_RowDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.RowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.RowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.RowDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.RowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.RowDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_RowDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_RowDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition> Func__Collections_IIterator_1_UI_Xaml_Controls_RowDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.RowDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.RowDefinition Func_UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.RowDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.RowDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.RowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.RowDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.RowDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_RowDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.RowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.RowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.RowDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ColumnDefinition Func_uint__UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ColumnDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.ColumnDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ColumnDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Controls_ColumnDefinition___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Controls_ColumnDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition> Func__IReadOnlyList_1_UI_Xaml_Controls_ColumnDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_ColumnDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_ColumnDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.ColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.ColumnDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.ColumnDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_ColumnDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_ColumnDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition> Func__Collections_IIterator_1_UI_Xaml_Controls_ColumnDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ColumnDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ColumnDefinition Func_UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ColumnDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.ColumnDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ColumnDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ColumnDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_ColumnDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.ColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.ColumnDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.DependencyObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_DependencyObject___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_DependencyObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject> Func__Collections_IIterator_1_UI_Xaml_DependencyObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.DependencyObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject __value__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.DependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_DependencyObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
											typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IDependencyObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IDependencyObject___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IDependencyObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject> Func__Collections_IIterator_1_UI_Xaml_IDependencyObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject Func_UI_Xaml_IDependencyObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject __value__retval = default(global::Windows.UI.Xaml.IDependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IDependencyObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IDependencyObject2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IDependencyObject2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IDependencyObject2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2> Func__Collections_IIterator_1_UI_Xaml_IDependencyObject2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject2 Func_UI_Xaml_IDependencyObject2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject2 __value__retval = default(global::Windows.UI.Xaml.IDependencyObject2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IDependencyObject2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement> Func__Collections_IIterator_1_UI_Xaml_IUIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement Func_UI_Xaml_IUIElement__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement __value__retval = default(global::Windows.UI.Xaml.IUIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElementOverrides>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElementOverrides___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides> Func__Collections_IIterator_1_UI_Xaml_IUIElementOverrides___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElementOverrides>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElementOverrides Func_UI_Xaml_IUIElementOverrides__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElementOverrides __value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElementOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElementOverrides__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElementOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2> Func__Collections_IIterator_1_UI_Xaml_IUIElement2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement2 Func_UI_Xaml_IUIElement2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement2 __value__retval = default(global::Windows.UI.Xaml.IUIElement2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3> Func__Collections_IIterator_1_UI_Xaml_IUIElement3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement3 Func_UI_Xaml_IUIElement3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement3 __value__retval = default(global::Windows.UI.Xaml.IUIElement3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_uint__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject __value__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_DependencyObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_DependencyObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.DependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
											typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject Func_uint__UI_Xaml_IDependencyObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject __value__retval = default(global::Windows.UI.Xaml.IDependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IDependencyObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IDependencyObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IDependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject2 Func_uint__UI_Xaml_IDependencyObject2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject2 __value__retval = default(global::Windows.UI.Xaml.IDependencyObject2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IDependencyObject2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IDependencyObject2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IDependencyObject2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement Func_uint__UI_Xaml_IUIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement __value__retval = default(global::Windows.UI.Xaml.IUIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElementOverrides Func_uint__UI_Xaml_IUIElementOverrides__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElementOverrides __value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElementOverrides__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElementOverrides value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElementOverrides__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElementOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement2 Func_uint__UI_Xaml_IUIElement2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement2 __value__retval = default(global::Windows.UI.Xaml.IUIElement2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement3 Func_uint__UI_Xaml_IUIElement3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement3 __value__retval = default(global::Windows.UI.Xaml.IUIElement3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.IRowDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_IRowDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_IRowDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition> Func__Collections_IIterator_1_UI_Xaml_Controls_IRowDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_IRowDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_IRowDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.IRowDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.IRowDefinition Func_UI_Xaml_Controls_IRowDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IRowDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.IRowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.IRowDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_IRowDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.IRowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.IRowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IRowDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.IRowDefinition Func_uint__UI_Xaml_Controls_IRowDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IRowDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.IRowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IRowDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_IRowDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.IRowDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IRowDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_IRowDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.IRowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.IRowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.IColumnDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_IColumnDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_IColumnDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition> Func__Collections_IIterator_1_UI_Xaml_Controls_IColumnDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_IColumnDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_IColumnDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.IColumnDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.IColumnDefinition Func_UI_Xaml_Controls_IColumnDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IColumnDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.IColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.IColumnDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_IColumnDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.IColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.IColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IColumnDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.IColumnDefinition Func_uint__UI_Xaml_Controls_IColumnDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IColumnDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.IColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IColumnDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_IColumnDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.IColumnDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IColumnDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_IColumnDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.IColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.IColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IStackPanel.get_Orientation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Orientation__Windows_UI_Xaml_Controls__Orientation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Orientation Func_UI_Xaml_Controls_Orientation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Orientation unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Orientation value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.get_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_ImageSource__Windows_UI_Xaml_Media__ImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.ImageSource Func_UI_Xaml_Media_ImageSource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.ImageSource value__retval = default(global::Windows.UI.Xaml.Media.ImageSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.ImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IImageSource).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.ImageSource).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.put_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_ImageSource__Windows_UI_Xaml_Media__ImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_ImageSource__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.ImageSource value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IImageSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.get_Stretch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Media_Stretch__Windows_UI_Xaml_Media__Stretch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Stretch Func_UI_Xaml_Media_Stretch__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Stretch unsafe_value__retval;
			global::Windows.UI.Xaml.Media.Stretch value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.ExceptionRoutedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ExceptionRoutedEventArgs__Windows_UI_Xaml__ExceptionRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_ExceptionRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.ExceptionRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IExceptionRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IExceptionRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IExceptionRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IExceptionRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.add_ImageFailed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ExceptionRoutedEventHandler__Windows_UI_Xaml__ExceptionRoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_ExceptionRoutedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ExceptionRoutedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ExceptionRoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget26>(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox.get_TextWrapping, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_TextWrapping__Windows_UI_Xaml__TextWrapping, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TextWrapping Func_UI_Xaml_TextWrapping__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.TextWrapping unsafe_value__retval;
			global::Windows.UI.Xaml.TextWrapping value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.TextChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextChangedEventArgs__Windows_UI_Xaml_Controls__TextChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_TextChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.TextChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.ITextChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.ITextChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.ITextChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.ITextChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox.add_TextChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_TextChangedEventHandler__Windows_UI_Xaml_Controls__TextChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_TextChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.TextChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget27>(global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContextMenuEventArgs__Windows_UI_Xaml_Controls__ContextMenuEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_ContextMenuEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.ContextMenuEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IContextMenuEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.IContextMenuEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.IContextMenuEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.IContextMenuEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox.add_ContextMenuOpening, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ContextMenuOpeningEventHandler__Windows_UI_Xaml_Controls__ContextMenuOpeningEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_ContextMenuOpeningEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget28>(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.TextControlPasteEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextControlPasteEventArgs__Windows_UI_Xaml_Controls__TextControlPasteEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_TextControlPasteEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.TextControlPasteEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox2.add_Paste, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_TextControlPasteEventHandler__Windows_UI_Xaml_Controls__TextControlPasteEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_TextControlPasteEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget29>(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs__Windows_UI_Xaml_Controls__TextCompositionStartedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionStartedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_TextCompositionStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionStartedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget30>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs__Windows_UI_Xaml_Controls__TextCompositionChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_TextCompositionChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget31>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs__Windows_UI_Xaml_Controls__TextCompositionEndedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionEndedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_TextCompositionEnded, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionEndedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget32>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs__Windows_UI_Xaml_Controls__CandidateWindowBoundsChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_CandidateWindowBoundsChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget33>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs__Windows_UI_Xaml_Controls__TextBoxTextChangingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextBoxTextChangingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_TextChanging, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextBoxTextChangingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget34>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ICanvasStatics.GetZIndex, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_UI_Xaml_UIElement__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe_value__retval;
			int value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ICanvasStatics.SetZIndex, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRelativePanelStatics.GetRightOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_UI_Xaml_UIElement__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object value__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value__retval));
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRelativePanelStatics.SetRightOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRelativePanelStatics.GetAlignLeftWithPanel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_UIElement__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			bool value__retval;
			sbyte unsafe_value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval != 0;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRelativePanelStatics.SetAlignLeftWithPanel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					bool value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			sbyte unsafe_value;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_value = (value ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ISplitView.get_DisplayMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_SplitViewDisplayMode__Windows_UI_Xaml_Controls__SplitViewDisplayMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.SplitViewDisplayMode Func_UI_Xaml_Controls_SplitViewDisplayMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SplitViewDisplayMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.SplitViewDisplayMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView,Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SplitView__Windows_UI_Xaml_Controls__SplitView *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs__Windows_UI_Xaml_Controls__SplitViewPaneClosingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_SplitView__UI_Xaml_Controls_SplitViewPaneClosingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.SplitView sender, 
					global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ISplitView).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ISplitView.add_PaneClosing, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__UI_Xaml_Controls_SplitViewPaneClosingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget35>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SplitView__Windows_UI_Xaml_Controls__SplitView *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_SplitView__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.SplitView sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ISplitView).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ISplitView.add_PaneClosed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget36>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.Collections.VectorChangedEventHandler<System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableVector_1_object___Windows_Foundation_Collections__IObservableVector_A_object_V_ *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IVectorChangedEventArgs__Windows_Foundation_Collections__IVectorChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Collections_IObservableVector_1_object__Collections_IVectorChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.IObservableVector<object> sender, 
					global::Windows.Foundation.Collections.IVectorChangedEventArgs @event, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableVector_A_System_Object_V___Impl.Vtbl** unsafe_sender = default(global::Windows.Foundation.Collections.IObservableVector_A_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IVectorChangedEventArgs__Impl.Vtbl** unsafe_event = default(global::Windows.Foundation.Collections.IVectorChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Foundation.Collections.IObservableVector_A_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Foundation.Collections.IObservableVector<object>).TypeHandle
								);
				unsafe_event = (global::Windows.Foundation.Collections.IVectorChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									@event, 
									typeof(global::Windows.Foundation.Collections.IVectorChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_event
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_event)));
				global::System.GC.KeepAlive(@event);
			}
		}

		// Signature, Windows.Foundation.Collections.IObservableVector<System.Object>.add_VectorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_Collections_VectorChangedEventHandler_1_object___Windows_Foundation_Collections__VectorChangedEventHandler_A_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__Collections_VectorChangedEventHandler_1_object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.VectorChangedEventHandler<object> vhnd, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.VectorChangedEventHandler_A_System_Object_V___Impl.Vtbl** unsafe_vhnd = default(global::Windows.Foundation.Collections.VectorChangedEventHandler_A_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_vhnd = (global::Windows.Foundation.Collections.VectorChangedEventHandler_A_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									vhnd, 
									typeof(global::Windows.Foundation.Collections.VectorChangedEventHandler<object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget37>(global::Windows.Foundation.Collections.VectorChangedEventHandler_A_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_vhnd, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_vhnd)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControl.get_Items, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ItemCollection__Windows_UI_Xaml_Controls__ItemCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ItemCollection Func_UI_Xaml_Controls_ItemCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableVector_A_System_Object_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.Collections.IObservableVector_A_System_Object_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ItemCollection value__retval = default(global::Windows.UI.Xaml.Controls.ItemCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.ItemCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.Collections.IObservableVector<object>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ItemCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControl.get_ItemTemplate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DataTemplate Func_UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.DataTemplate value__retval = default(global::Windows.UI.Xaml.DataTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.DataTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControl.put_ItemTemplate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DataTemplate value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControlOverrides.ClearContainerForItemOverride, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyObject__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					object item, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_item
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemContainerStyleChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Style__UI_Xaml_Style__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Style oldItemContainerStyle, 
					global::Windows.UI.Xaml.Style newItemContainerStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_oldItemContainerStyle = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_newItemContainerStyle = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldItemContainerStyle = (global::Windows.UI.Xaml.IStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldItemContainerStyle, 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle
								);
				unsafe_newItemContainerStyle = (global::Windows.UI.Xaml.IStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newItemContainerStyle, 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldItemContainerStyle, 
									unsafe_newItemContainerStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldItemContainerStyle)));
				global::System.GC.KeepAlive(oldItemContainerStyle);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newItemContainerStyle)));
				global::System.GC.KeepAlive(newItemContainerStyle);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemContainerStyleSelectorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_StyleSelector__Windows_UI_Xaml_Controls__StyleSelector *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_StyleSelector__Windows_UI_Xaml_Controls__StyleSelector *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_StyleSelector__UI_Xaml_Controls_StyleSelector__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, 
					global::Windows.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl** unsafe_oldItemContainerStyleSelector = default(global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl** unsafe_newItemContainerStyleSelector = default(global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldItemContainerStyleSelector = (global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldItemContainerStyleSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IStyleSelector).TypeHandle
								);
				unsafe_newItemContainerStyleSelector = (global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newItemContainerStyleSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IStyleSelector).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldItemContainerStyleSelector, 
									unsafe_newItemContainerStyleSelector
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldItemContainerStyleSelector)));
				global::System.GC.KeepAlive(oldItemContainerStyleSelector);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newItemContainerStyleSelector)));
				global::System.GC.KeepAlive(newItemContainerStyleSelector);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControlOverrides.OnGroupStyleSelectorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_GroupStyleSelector__Windows_UI_Xaml_Controls__GroupStyleSelector *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_GroupStyleSelector__Windows_UI_Xaml_Controls__GroupStyleSelector *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_GroupStyleSelector__UI_Xaml_Controls_GroupStyleSelector__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl** unsafe_oldGroupStyleSelector = default(global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl** unsafe_newGroupStyleSelector = default(global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldGroupStyleSelector = (global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldGroupStyleSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IGroupStyleSelector).TypeHandle
								);
				unsafe_newGroupStyleSelector = (global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newGroupStyleSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IGroupStyleSelector).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldGroupStyleSelector, 
									unsafe_newGroupStyleSelector
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldGroupStyleSelector)));
				global::System.GC.KeepAlive(oldGroupStyleSelector);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newGroupStyleSelector)));
				global::System.GC.KeepAlive(newGroupStyleSelector);
			}
		}

		// Signature, Windows.UI.Xaml.IStyleFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Type__IntPtr__(
					global::System.__ComObject __this, 
					global::System.Type targetType, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_targetType;
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			// Marshalling
			global::System.Runtime.InteropServices.HSTRING unsafe_targetType__HSTRING__Name;
			int unsafe_targetType__int__Kind;
			global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
								targetType, 
								out unsafe_targetType__HSTRING__Name, 
								out unsafe_targetType__int__Kind
							);
			unsafe_targetType.Name = unsafe_targetType__HSTRING__Name;
			unsafe_targetType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_targetType__int__Kind;
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_targetType, 
								&(unsafe_instance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			instance__retval = unsafe_instance__retval;
			// Return
			return instance__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IStyleSelectorOverrides.SelectStyleCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Style Func_object__UI_Xaml_DependencyObject__UI_Xaml_Style__(
					global::System.__ComObject __this, 
					object item, 
					global::Windows.UI.Xaml.DependencyObject container, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_container = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			global::Windows.UI.Xaml.Style returnValue__retval = default(global::Windows.UI.Xaml.Style);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_container = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									container, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									unsafe_container, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Style)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Style).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_container)));
				global::System.GC.KeepAlive(container);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides.SelectGroupStyleCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_GroupStyle__Windows_UI_Xaml_Controls__GroupStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.GroupStyle Func_object__uint__UI_Xaml_Controls_GroupStyle__(
					global::System.__ComObject __this, 
					object group, 
					uint level, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_group = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.GroupStyle returnValue__retval = default(global::Windows.UI.Xaml.Controls.GroupStyle);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_group = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(group);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_group, 
									level, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Controls.GroupStyle)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IGroupStyle).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.GroupStyle).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_group)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.SelectionChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SelectionChangedEventArgs__Windows_UI_Xaml_Controls__SelectionChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_SelectionChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.ISelector.add_SelectionChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_SelectionChangedEventHandler__Windows_UI_Xaml_Controls__SelectionChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_SelectionChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget38>(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListBox.get_SelectionMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_SelectionMode__Windows_UI_Xaml_Controls__SelectionMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.SelectionMode Func_UI_Xaml_Controls_SelectionMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SelectionMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.SelectionMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Bing.Maps.__ILocationFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_double__double__IntPtr__(
					global::System.__ComObject __this, 
					double latitude, 
					double longitude, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								latitude, 
								longitude, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__ILocationFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_Location__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location other, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_other = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_other = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									other, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_other, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_other)));
				global::System.GC.KeepAlive(other);
			}
		}

		// Signature, Bing.Maps.__ILocationStatics.NormalizeLongitude, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static double Func_double__double__(
					global::System.__ComObject __this, 
					double longitude, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			double unsafe___value__retval;
			double __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								longitude, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__ILocationRectFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_LocationRect__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRect other, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_other = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_other = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									other, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_other, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_other)));
				global::System.GC.KeepAlive(other);
			}
		}

		// Signature, Bing.Maps.__ILocationRectFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_Location__double__double__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location center, 
					double width, 
					double height, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_center = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_center = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									center, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_center, 
									width, 
									height, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_center)));
				global::System.GC.KeepAlive(center);
			}
		}

		// Signature, Bing.Maps.__ILocationRectFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_Location__Bing_Maps_Location__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location northWest, 
					global::Bing.Maps.Location southEast, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_northWest = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_southEast = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_northWest = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									northWest, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				unsafe_southEast = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									southEast, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_northWest, 
									unsafe_southEast, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_northWest)));
				global::System.GC.KeepAlive(northWest);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_southEast)));
				global::System.GC.KeepAlive(southEast);
			}
		}

		// Signature, Bing.Maps.__ILocationRectFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationCollection__Bing_Maps__LocationCollection *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_LocationCollection__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationCollection locations, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_locations = default(global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_locations = (global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									locations, 
									typeof(global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_locations, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_locations)));
				global::System.GC.KeepAlive(locations);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Location>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Location Func_uint__Bing_Maps_Location__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Location __value__retval = default(global::Bing.Maps.Location);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Location)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Location).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Location>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Location___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Location_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Location> Func__IReadOnlyList_1_Bing_Maps_Location___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Location_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Location_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Location> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Location>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Location>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Location>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Location>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Location__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Location>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Location__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Location value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Location>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Location__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Location>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Location__Bing_Maps__Location * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Location__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Location[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location * items
						items[mcgIdx] = (global::Bing.Maps.Location)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Location).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Location>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Location__Bing_Maps__Location * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Location__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Location>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Location___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Location_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Location> Func__Collections_IIterator_1_Bing_Maps_Location___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Location_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Location_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Location> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Location>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Location>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Location>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Location>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Location Func_Bing_Maps_Location__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Location __value__retval = default(global::Bing.Maps.Location);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Location)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Location).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Location>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Location__Bing_Maps__Location * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Location__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location * items
						items[mcgIdx] = (global::Bing.Maps.Location)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Location).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.__ILocationRectPublicNonVirtuals.Contains, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Location__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location location, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_location = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_location = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									location, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_location, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
				global::System.GC.KeepAlive(location);
			}
		}

		// Signature, Bing.Maps.__ILocationRectPublicNonVirtuals.Intersects, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_LocationRect__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRect other, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_other = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_other = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									other, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_other, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_other)));
				global::System.GC.KeepAlive(other);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals.get_WaypointPushpinOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsPushpinRenderOptions__Bing_Maps_Directions__DirectionsPushpinRenderOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DirectionsPushpinRenderOptions Func_Bing_Maps_Directions_DirectionsPushpinRenderOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.DirectionsPushpinRenderOptions __value__retval = default(global::Bing.Maps.Directions.DirectionsPushpinRenderOptions);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.DirectionsPushpinRenderOptions)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.DirectionsPushpinRenderOptions).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals.set_WaypointPushpinOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsPushpinRenderOptions__Bing_Maps_Directions__DirectionsPushpinRenderOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_DirectionsPushpinRenderOptions__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.DirectionsPushpinRenderOptions value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals.get_ActiveRoutePolylineOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsPolylineRenderOptions__Bing_Maps_Directions__DirectionsPolylineRenderOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DirectionsPolylineRenderOptions Func_Bing_Maps_Directions_DirectionsPolylineRenderOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.DirectionsPolylineRenderOptions __value__retval = default(global::Bing.Maps.Directions.DirectionsPolylineRenderOptions);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.DirectionsPolylineRenderOptions)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.DirectionsPolylineRenderOptions).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals.set_ActiveRoutePolylineOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsPolylineRenderOptions__Bing_Maps_Directions__DirectionsPolylineRenderOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_DirectionsPolylineRenderOptions__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.DirectionsPolylineRenderOptions value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals.GetPolylineRenderOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_RouteModeOption__Bing_Maps_Directions__RouteModeOption, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsPolylineRenderOptions__Bing_Maps_Directions__DirectionsPolylineRenderOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DirectionsPolylineRenderOptions Func_intBing_Maps_Directions_DirectionsPolylineRenderOptions__(
					global::System.__ComObject __this, 
					int routeMode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.DirectionsPolylineRenderOptions __value__retval = default(global::Bing.Maps.Directions.DirectionsPolylineRenderOptions);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									routeMode, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.DirectionsPolylineRenderOptions)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.DirectionsPolylineRenderOptions).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ControlTemplate__Windows_UI_Xaml_Controls__ControlTemplate *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_UI_Xaml_Controls_ControlTemplate__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ControlTemplate pushpinTemplate, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl** unsafe_pushpinTemplate = default(global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pushpinTemplate = (global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									pushpinTemplate, 
									typeof(global::Windows.UI.Xaml.Controls.IControlTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pushpinTemplate, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pushpinTemplate)));
				global::System.GC.KeepAlive(pushpinTemplate);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals.get_PushpinTemplate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ControlTemplate__Windows_UI_Xaml_Controls__ControlTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ControlTemplate Func_UI_Xaml_Controls_ControlTemplate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ControlTemplate __value__retval = default(global::Windows.UI.Xaml.Controls.ControlTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ControlTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IControlTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ControlTemplate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals.set_PushpinTemplate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ControlTemplate__Windows_UI_Xaml_Controls__ControlTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ControlTemplate__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ControlTemplate value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IControlTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsPushpinRenderOptionsPublicNonVirtuals.get_Offset, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_PushpinOffset__Bing_Maps__PushpinOffset, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.PushpinOffset Func_Bing_Maps_PushpinOffset__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.PushpinOffset unsafe___value__retval;
			global::Bing.Maps.PushpinOffset __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_UI_Color__double__bool__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color polylineColor, 
					double polylineWidth, 
					bool visible, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_visible;
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			// Marshalling
			unsafe_visible = (visible ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								polylineColor, 
								polylineWidth, 
								unsafe_visible, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals.get_LineColor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Color Func_UI_Color__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Color unsafe___value__retval;
			global::Windows.UI.Color __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsPolylineRenderOptionsPublicNonVirtuals.set_LineColor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Color__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.EventHandler<Bing.Maps.Directions.DirectionsInputEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsInputEventArgs__Bing_Maps_Directions__DirectionsInputEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_Directions_DirectionsInputEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.Directions.DirectionsInputEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.Directions.__IDirectionsInputEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.Directions.__IDirectionsInputEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.Directions.__IDirectionsInputEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.Directions.__IDirectionsInputEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsUIEventManagerPublicNonVirtuals.add_GetDirectionsTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_Directions_DirectionsInputEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_Directions_DirectionsInputEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.Directions.DirectionsInputEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.Directions.DirectionsInputEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget39>(global::System.EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsInputEventArgsPublicNonVirtuals.get_RequestOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsRequestOptions__Bing_Maps_Directions__DirectionsRequestOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DirectionsRequestOptions Func_Bing_Maps_Directions_DirectionsRequestOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.DirectionsRequestOptions __value__retval = default(global::Bing.Maps.Directions.DirectionsRequestOptions);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.DirectionsRequestOptions)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.DirectionsRequestOptions).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_DistanceUnitOption__Bing_Maps_Directions__DistanceUnitOption, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_MaxSolutionsOption__Bing_Maps_Directions__MaxSolutionsOption, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_AvoidOption__Bing_Maps_Directions__AvoidOption, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_RouteModeOption__Bing_Maps_Directions__RouteModeOption, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_OptimizeOption__Bing_Maps_Directions__OptimizeOption, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_TimeTypeOption__Bing_Maps_Directions__TimeTypeOption, [fwd] [in] [Mcg.CodeGen.WinRTDateTimeMarshaller] System_DateTimeOffset__Windows_Foundation__DateTime, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_intintintuint__intintintDateTimeOffset__bool__bool__IntPtr__(
					global::System.__ComObject __this, 
					int distanceUnitOption, 
					int maxSolutionsOption, 
					int avoidOption, 
					uint routeIndex, 
					int routeModeOption, 
					int optimizeOption, 
					int timeTypeOption, 
					global::System.DateTimeOffset transitTime, 
					bool metadataForAlternates, 
					bool formattedInstruction, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.DateTimeOffset__Impl.UnsafeType unsafe_transitTime;
			sbyte unsafe_metadataForAlternates;
			sbyte unsafe_formattedInstruction;
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			// Marshalling
			unsafe_transitTime.UniversalTime = transitTime.UtcTicks - 504911232000000000;
			unsafe_metadataForAlternates = (metadataForAlternates ? ((sbyte)1) : ((sbyte)0));
			unsafe_formattedInstruction = (formattedInstruction ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								distanceUnitOption, 
								maxSolutionsOption, 
								avoidOption, 
								routeIndex, 
								routeModeOption, 
								optimizeOption, 
								timeTypeOption, 
								unsafe_transitTime, 
								unsafe_metadataForAlternates, 
								unsafe_formattedInstruction, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals.get_DistanceUnit, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_DistanceUnitOption__Bing_Maps_Directions__DistanceUnitOption, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DistanceUnitOption Func_Bing_Maps_Directions_DistanceUnitOption__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.DistanceUnitOption unsafe___value__retval;
			global::Bing.Maps.Directions.DistanceUnitOption __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals.get_MaxSolutions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_MaxSolutionsOption__Bing_Maps_Directions__MaxSolutionsOption, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.MaxSolutionsOption Func_Bing_Maps_Directions_MaxSolutionsOption__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.MaxSolutionsOption unsafe___value__retval;
			global::Bing.Maps.Directions.MaxSolutionsOption __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals.get_Avoid, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_AvoidOption__Bing_Maps_Directions__AvoidOption, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.AvoidOption Func_Bing_Maps_Directions_AvoidOption__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.AvoidOption unsafe___value__retval;
			global::Bing.Maps.Directions.AvoidOption __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals.get_RouteMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_RouteModeOption__Bing_Maps_Directions__RouteModeOption, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RouteModeOption Func_Bing_Maps_Directions_RouteModeOption__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.RouteModeOption unsafe___value__retval;
			global::Bing.Maps.Directions.RouteModeOption __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals.get_Optimize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_OptimizeOption__Bing_Maps_Directions__OptimizeOption, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.OptimizeOption Func_Bing_Maps_Directions_OptimizeOption__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.OptimizeOption unsafe___value__retval;
			global::Bing.Maps.Directions.OptimizeOption __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals.get_TimeType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_TimeTypeOption__Bing_Maps_Directions__TimeTypeOption, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.TimeTypeOption Func_Bing_Maps_Directions_TimeTypeOption__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.TimeTypeOption unsafe___value__retval;
			global::Bing.Maps.Directions.TimeTypeOption __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals.get_TransitTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDateTimeMarshaller] System_DateTimeOffset__Windows_Foundation__DateTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.DateTimeOffset Func_DateTimeOffset__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.DateTimeOffset __value__retval;
			global::System.DateTimeOffset__Impl.UnsafeType unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = new global::System.DateTimeOffset((unsafe___value__retval.UniversalTime + 504911232000000000), global::System.TimeSpan.Zero).ToLocalTime();
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals.set_TransitTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDateTimeMarshaller] System_DateTimeOffset__Windows_Foundation__DateTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_DateTimeOffset__(
					global::System.__ComObject __this, 
					global::System.DateTimeOffset transitTime, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.DateTimeOffset__Impl.UnsafeType unsafe_transitTime;
			int unsafe___return__;
			// Marshalling
			unsafe_transitTime.UniversalTime = transitTime.UtcTicks - 504911232000000000;
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_transitTime
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Bing.Maps.__IMapShapeLayerPublicNonVirtuals.get_Shapes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeCollection__Bing_Maps__MapShapeCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapShapeCollection Func_Bing_Maps_MapShapeCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapeCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapShapeCollection __value__retval = default(global::Bing.Maps.MapShapeCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapShapeCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapeCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapShapeCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapShapeLayerPublicNonVirtuals.set_Shapes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeCollection__Bing_Maps__MapShapeCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_MapShapeCollection__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShapeCollection newShapes, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_newShapes = default(global::Bing.Maps.__IMapShapeCollectionProtectedNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_newShapes = (global::Bing.Maps.__IMapShapeCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newShapes, 
									typeof(global::Bing.Maps.__IMapShapeCollectionProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_newShapes
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newShapes)));
				global::System.GC.KeepAlive(newShapes);
			}
		}

		// Signature, Bing.Maps.__IMapShapeLayerPublicNonVirtuals.set_ZIndex, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__(
					global::System.__ComObject __this, 
					int newZIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								newZIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShape>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapShape Func_uint__Bing_Maps_MapShape__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapShape __value__retval = default(global::Bing.Maps.MapShape);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapShape)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapShape).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShape>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_MapShape___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_MapShape_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShape> Func__IReadOnlyList_1_Bing_Maps_MapShape___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_MapShape_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_MapShape_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShape> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShape>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShape>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShape>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShape>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_MapShape__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShape value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShape>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_MapShape__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.MapShape value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShape>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_MapShape__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShape value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShape>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapShape__Bing_Maps__MapShape * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_MapShape__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.MapShape[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape * items
						items[mcgIdx] = (global::Bing.Maps.MapShape)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.MapShape).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShape>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapShape__Bing_Maps__MapShape * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_MapShape__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShape[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.MapShape>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_MapShape___Windows_Foundation_Collections__IIterator_A_Bing_Maps_MapShape_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShape> Func__Collections_IIterator_1_Bing_Maps_MapShape___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_MapShape_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_MapShape_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShape> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShape>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShape>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShape>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.MapShape>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapShape Func_Bing_Maps_MapShape__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapShape __value__retval = default(global::Bing.Maps.MapShape);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapShape)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapShape).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.MapShape>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapShape__Bing_Maps__MapShape * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_MapShape__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShape[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape * items
						items[mcgIdx] = (global::Bing.Maps.MapShape)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.MapShape).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShape__Bing_Maps__MapShape * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShapeLayer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapShapeLayer Func_uint__Bing_Maps_MapShapeLayer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapShapeLayer __value__retval = default(global::Bing.Maps.MapShapeLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapShapeLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapShapeLayer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShapeLayer>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_MapShapeLayer___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_MapShapeLayer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShapeLayer> Func__IReadOnlyList_1_Bing_Maps_MapShapeLayer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_MapShapeLayer_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_MapShapeLayer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShapeLayer> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShapeLayer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShapeLayer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapShapeLayer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShapeLayer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_MapShapeLayer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShapeLayer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShapeLayer>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_MapShapeLayer__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.MapShapeLayer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShapeLayer>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_MapShapeLayer__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShapeLayer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShapeLayer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_MapShapeLayer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.MapShapeLayer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer * items
						items[mcgIdx] = (global::Bing.Maps.MapShapeLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.MapShapeLayer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapShapeLayer>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_MapShapeLayer__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShapeLayer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.MapShapeLayer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_MapShapeLayer___Windows_Foundation_Collections__IIterator_A_Bing_Maps_MapShapeLayer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShapeLayer> Func__Collections_IIterator_1_Bing_Maps_MapShapeLayer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_MapShapeLayer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_MapShapeLayer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShapeLayer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShapeLayer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShapeLayer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapShapeLayer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.MapShapeLayer>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapShapeLayer Func_Bing_Maps_MapShapeLayer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapShapeLayer __value__retval = default(global::Bing.Maps.MapShapeLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapShapeLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapShapeLayer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.MapShapeLayer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_MapShapeLayer__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapShapeLayer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer * items
						items[mcgIdx] = (global::Bing.Maps.MapShapeLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.MapShapeLayer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayer__Bing_Maps__MapShapeLayer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__IMapShapePublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___IMapShapePublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___IMapShapePublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapePublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___IMapShapePublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapShapePublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapShapePublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapePublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapePublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapePublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapePublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapShapePublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapShapePublicNonVirtuals Func_Bing_Maps___IMapShapePublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapShapePublicNonVirtuals __value__retval = default(global::Bing.Maps.__IMapShapePublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapShapePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapShapePublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___IMapShapePublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapShapePublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapShapePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__IMapShapeProtectedNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___IMapShapeProtectedNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___IMapShapeProtectedNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeProtectedNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___IMapShapeProtectedNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapShapeProtectedNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapShapeProtectedNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeProtectedNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeProtectedNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeProtectedNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeProtectedNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapShapeProtectedNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapShapeProtectedNonVirtuals Func_Bing_Maps___IMapShapeProtectedNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapShapeProtectedNonVirtuals __value__retval = default(global::Bing.Maps.__IMapShapeProtectedNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapShapeProtectedNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapeProtectedNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapShapeProtectedNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___IMapShapeProtectedNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapShapeProtectedNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapShapeProtectedNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapeProtectedNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapePublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapShapePublicNonVirtuals Func_uint__Bing_Maps___IMapShapePublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapShapePublicNonVirtuals __value__retval = default(global::Bing.Maps.__IMapShapePublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapShapePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapePublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___IMapShapePublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapShapePublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapePublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___IMapShapePublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__IMapShapePublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapShapePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapePublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapePublicNonVirtuals__Bing_Maps____IMapShapePublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapeProtectedNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapShapeProtectedNonVirtuals Func_uint__Bing_Maps___IMapShapeProtectedNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapShapeProtectedNonVirtuals __value__retval = default(global::Bing.Maps.__IMapShapeProtectedNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapShapeProtectedNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapeProtectedNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapeProtectedNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___IMapShapeProtectedNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapShapeProtectedNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapeProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapeProtectedNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___IMapShapeProtectedNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__IMapShapeProtectedNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapeProtectedNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapShapeProtectedNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapeProtectedNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeProtectedNonVirtuals__Bing_Maps____IMapShapeProtectedNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__IMapShapeLayerPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___IMapShapeLayerPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___IMapShapeLayerPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___IMapShapeLayerPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapShapeLayerPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapShapeLayerPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapShapeLayerPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals Func_Bing_Maps___IMapShapeLayerPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals __value__retval = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapShapeLayerPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___IMapShapeLayerPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapeLayerPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals Func_uint__Bing_Maps___IMapShapeLayerPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals __value__retval = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapeLayerPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___IMapShapeLayerPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapShapeLayerPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___IMapShapeLayerPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapShapeLayerPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapShapeLayerPublicNonVirtuals__Bing_Maps____IMapShapeLayerPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.__IMapTileLayerPublicNonVirtuals.get_Bounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRectCollection__Bing_Maps__LocationRectCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.LocationRectCollection Func_Bing_Maps_LocationRectCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationRectCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.LocationRectCollection __value__retval = default(global::Bing.Maps.LocationRectCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.LocationRectCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationRectCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.LocationRectCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapTileLayerPublicNonVirtuals.set_Bounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRectCollection__Bing_Maps__LocationRectCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_LocationRectCollection__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRectCollection newBounds, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_newBounds = default(global::Bing.Maps.__ILocationRectCollectionProtectedNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_newBounds = (global::Bing.Maps.__ILocationRectCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newBounds, 
									typeof(global::Bing.Maps.__ILocationRectCollectionProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_newBounds
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newBounds)));
				global::System.GC.KeepAlive(newBounds);
			}
		}

		// Signature, System.EventHandler<Bing.Maps.GetTileUriEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_GetTileUriEventArgs__Bing_Maps__GetTileUriEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_GetTileUriEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.GetTileUriEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__IGetTileUriEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__IGetTileUriEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__IGetTileUriEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__IGetTileUriEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapTileLayerPublicNonVirtuals.add_GetTileUri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_GetTileUriEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_GetTileUriEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_GetTileUriEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.GetTileUriEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_GetTileUriEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_GetTileUriEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_GetTileUriEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.GetTileUriEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget40>(global::System.EventHandler_A_Bing_Maps_GetTileUriEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.TileDownloadCompletedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TileDownloadCompletedEventArgs__Bing_Maps__TileDownloadCompletedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_TileDownloadCompletedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.TileDownloadCompletedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__ITileDownloadCompletedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__ITileDownloadCompletedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__ITileDownloadCompletedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__ITileDownloadCompletedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapTileLayerPublicNonVirtuals.add_TileDownloadCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_TileDownloadCompletedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_TileDownloadCompletedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.TileDownloadCompletedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.TileDownloadCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget41>(global::System.EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.LocationRect>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.LocationRect Func_uint__Bing_Maps_LocationRect__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.LocationRect __value__retval = default(global::Bing.Maps.LocationRect);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.LocationRect)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.LocationRect).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.LocationRect>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_LocationRect___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_LocationRect_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.LocationRect> Func__IReadOnlyList_1_Bing_Maps_LocationRect___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_LocationRect_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_LocationRect_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.LocationRect> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.LocationRect>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.LocationRect>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.LocationRect>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.LocationRect>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_LocationRect__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRect value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.LocationRect>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_LocationRect__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.LocationRect value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.LocationRect>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_LocationRect__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRect value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.LocationRect>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_LocationRect__Bing_Maps__LocationRect * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_LocationRect__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.LocationRect[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect * items
						items[mcgIdx] = (global::Bing.Maps.LocationRect)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.LocationRect).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.LocationRect>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_LocationRect__Bing_Maps__LocationRect * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_LocationRect__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRect[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.LocationRect>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_LocationRect___Windows_Foundation_Collections__IIterator_A_Bing_Maps_LocationRect_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.LocationRect> Func__Collections_IIterator_1_Bing_Maps_LocationRect___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_LocationRect_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_LocationRect_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.LocationRect> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.LocationRect>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.LocationRect>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.LocationRect>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.LocationRect>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.LocationRect Func_Bing_Maps_LocationRect__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.LocationRect __value__retval = default(global::Bing.Maps.LocationRect);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.LocationRect)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.LocationRect).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.LocationRect>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_LocationRect__Bing_Maps__LocationRect * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_LocationRect__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRect[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect * items
						items[mcgIdx] = (global::Bing.Maps.LocationRect)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.LocationRect).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.__IGetTileUriEventArgsPublicNonVirtuals.set_Uri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Uri__(
					global::System.__ComObject __this, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_uri
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapTileLayer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapTileLayer Func_uint__Bing_Maps_MapTileLayer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapTileLayer __value__retval = default(global::Bing.Maps.MapTileLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapTileLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapTileLayer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapTileLayer>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_MapTileLayer___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_MapTileLayer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapTileLayer> Func__IReadOnlyList_1_Bing_Maps_MapTileLayer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_MapTileLayer_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_MapTileLayer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapTileLayer> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapTileLayer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapTileLayer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.MapTileLayer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapTileLayer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_MapTileLayer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapTileLayer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapTileLayer>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_MapTileLayer__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.MapTileLayer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapTileLayer>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_MapTileLayer__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapTileLayer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapTileLayer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_MapTileLayer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.MapTileLayer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer * items
						items[mcgIdx] = (global::Bing.Maps.MapTileLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.MapTileLayer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.MapTileLayer>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_MapTileLayer__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapTileLayer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.MapTileLayer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_MapTileLayer___Windows_Foundation_Collections__IIterator_A_Bing_Maps_MapTileLayer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapTileLayer> Func__Collections_IIterator_1_Bing_Maps_MapTileLayer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_MapTileLayer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_MapTileLayer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapTileLayer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapTileLayer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapTileLayer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.MapTileLayer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.MapTileLayer>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapTileLayer Func_Bing_Maps_MapTileLayer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapTileLayer __value__retval = default(global::Bing.Maps.MapTileLayer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapTileLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapTileLayer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.MapTileLayer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_MapTileLayer__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.MapTileLayer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer * items
						items[mcgIdx] = (global::Bing.Maps.MapTileLayer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.MapTileLayer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayer__Bing_Maps__MapTileLayer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__ILocationRectPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___ILocationRectPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___ILocationRectPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationRectPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___ILocationRectPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___ILocationRectPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___ILocationRectPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationRectPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationRectPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationRectPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationRectPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__ILocationRectPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__ILocationRectPublicNonVirtuals Func_Bing_Maps___ILocationRectPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ILocationRectPublicNonVirtuals __value__retval = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__ILocationRectPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__ILocationRectPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___ILocationRectPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__ILocationRectPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__ILocationRectPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILocationRectPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__ILocationRectPublicNonVirtuals Func_uint__Bing_Maps___ILocationRectPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ILocationRectPublicNonVirtuals __value__retval = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__ILocationRectPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILocationRectPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___ILocationRectPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__ILocationRectPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILocationRectPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___ILocationRectPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__ILocationRectPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__ILocationRectPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationRectPublicNonVirtuals__Bing_Maps____ILocationRectPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__IMapTileLayerPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___IMapTileLayerPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___IMapTileLayerPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___IMapTileLayerPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapTileLayerPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapTileLayerPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapTileLayerPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapTileLayerPublicNonVirtuals Func_Bing_Maps___IMapTileLayerPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals __value__retval = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapTileLayerPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___IMapTileLayerPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapTileLayerPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__IMapTileLayerProtectedNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___IMapTileLayerProtectedNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___IMapTileLayerProtectedNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___IMapTileLayerProtectedNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapTileLayerProtectedNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___IMapTileLayerProtectedNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapTileLayerProtectedNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals Func_Bing_Maps___IMapTileLayerProtectedNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals __value__retval = default(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__IMapTileLayerProtectedNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___IMapTileLayerProtectedNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapTileLayerPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapTileLayerPublicNonVirtuals Func_uint__Bing_Maps___IMapTileLayerPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals __value__retval = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapTileLayerPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___IMapTileLayerPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapTileLayerPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapTileLayerPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___IMapTileLayerPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__IMapTileLayerPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapTileLayerPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapTileLayerPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerPublicNonVirtuals__Bing_Maps____IMapTileLayerPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapTileLayerProtectedNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals Func_uint__Bing_Maps___IMapTileLayerProtectedNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals __value__retval = default(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapTileLayerProtectedNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___IMapTileLayerProtectedNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__IMapTileLayerProtectedNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___IMapTileLayerProtectedNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__IMapTileLayerProtectedNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___IMapTileLayerProtectedNonVirtuals__Bing_Maps____IMapTileLayerProtectedNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.get_ActiveVenue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueMap__Bing_Maps_VenueMaps__VenueMap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueMap Func_Bing_Maps_VenueMaps_VenueMap__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueMap __value__retval = default(global::Bing.Maps.VenueMaps.VenueMap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueMap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueMap).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.set_ActiveVenue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueMap__Bing_Maps_VenueMaps__VenueMap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_VenueMaps_VenueMap__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueMap newActiveVenue, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals__Impl.Vtbl** unsafe_newActiveVenue = default(global::Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_newActiveVenue = (global::Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newActiveVenue, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_newActiveVenue
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newActiveVenue)));
				global::System.GC.KeepAlive(newActiveVenue);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.GetDirectoryPanel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueDirectoryPanel__Bing_Maps_VenueMaps__VenueDirectoryPanel *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueDirectoryPanel Func_Bing_Maps_VenueMaps_VenueDirectoryPanel__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueDirectoryPanelPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueDirectoryPanelPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueDirectoryPanel __value__retval = default(global::Bing.Maps.VenueMaps.VenueDirectoryPanel);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueDirectoryPanel)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueDirectoryPanelPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueDirectoryPanel).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.GetNearbyVenuesAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenueOptions__Bing_Maps_VenueMaps__NearbyVenueOptions *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_VenueMaps_NearbyVenueCollection___Windows_Foundation__IAsyncOperation_A_Bing_Maps_VenueMaps_NearbyVenueCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.NearbyVenueCollection> Func_Bing_Maps_VenueMaps_NearbyVenueOptions___IAsyncOperation_1_Bing_Maps_VenueMaps_NearbyVenueCollection___(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.NearbyVenueOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenueOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_options = default(global::Bing.Maps.VenueMaps.__INearbyVenueOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_NearbyVenueCollection_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_NearbyVenueCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.NearbyVenueCollection> __value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.NearbyVenueCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_options = (global::Bing.Maps.VenueMaps.__INearbyVenueOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									options, 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenueOptionsPublicNonVirtuals).TypeHandle
								);
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_options, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.NearbyVenueCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.NearbyVenueCollection>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_options)));
				global::System.GC.KeepAlive(options);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.CreateVenueMapAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_VenueMaps_VenueMap___Windows_Foundation__IAsyncOperation_A_Bing_Maps_VenueMaps_VenueMap_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueMap> Func_string___IAsyncOperation_1_Bing_Maps_VenueMaps_VenueMap___(
					global::System.__ComObject __this, 
					string mapId, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_mapId = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueMap_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueMap_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueMap> __value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueMap>);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_mapId = mapId)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_mapId;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_mapId, mapId, &(hstring_header_mapId), &(unsafe_mapId));
					unsafe___value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_mapId, 
										&(unsafe___value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					__value__retval = (global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueMap>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe___value__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueMap>).TypeHandle
									);
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.GetAllCountriesAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_VenueMaps_VenueCountryCollection___Windows_Foundation__IAsyncOperation_A_Bing_Maps_VenueMaps_VenueCountryCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueCountryCollection> Func__IAsyncOperation_1_Bing_Maps_VenueMaps_VenueCountryCollection___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueCountryCollection_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueCountryCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueCountryCollection> __value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueCountryCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueCountryCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueCountryCollection>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.GetAllVenuesByCountryAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountryOptions__Bing_Maps_VenueMaps__VenueByCountryOptions *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_VenueMaps_VenueByCountryCollection___Windows_Foundation__IAsyncOperation_A_Bing_Maps_VenueMaps_VenueByCountryCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueByCountryCollection> Func_Bing_Maps_VenueMaps_VenueByCountryOptions___IAsyncOperation_1_Bing_Maps_VenueMaps_VenueByCountryCollection___(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueByCountryOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_options = default(global::Bing.Maps.VenueMaps.__IVenueByCountryOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueByCountryCollection_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueByCountryCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueByCountryCollection> __value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueByCountryCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_options = (global::Bing.Maps.VenueMaps.__IVenueByCountryOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									options, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryOptionsPublicNonVirtuals).TypeHandle
								);
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_options, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueByCountryCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueByCountryCollection>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_options)));
				global::System.GC.KeepAlive(options);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.VenueMaps.VenueEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEventArgs__Bing_Maps_VenueMaps__VenueEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_VenueMaps_VenueEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.VenueMaps.VenueEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.VenueMaps.__IVenueEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.VenueMaps.__IVenueEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.VenueMaps.__IVenueEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.add_VenueTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_VenueMaps_VenueEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_VenueMaps_VenueEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget42>(global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs__Bing_Maps_VenueMaps__ActiveVenueChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.VenueMaps.__IActiveVenueChangedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.VenueMaps.__IActiveVenueChangedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.VenueMaps.__IActiveVenueChangedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.VenueMaps.__IActiveVenueChangedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.add_ActiveVenueChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget43>(global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.VenueMaps.VenueEntityEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntityEventArgs__Bing_Maps_VenueMaps__VenueEntityEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_VenueMaps_VenueEntityEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.VenueMaps.VenueEntityEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.VenueMaps.__IVenueEntityEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.VenueMaps.__IVenueEntityEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.VenueMaps.__IVenueEntityEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals.add_VenueEntityTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_VenueMaps_VenueEntityEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_VenueMaps_VenueEntityEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEntityEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEntityEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget44>(global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals.get_Address, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueAddress__Bing_Maps_VenueMaps__VenueAddress *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueAddress Func_Bing_Maps_VenueMaps_VenueAddress__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueAddressPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueAddressPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueAddress __value__retval = default(global::Bing.Maps.VenueMaps.VenueAddress);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueAddress)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueAddressPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueAddress).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals.get_Floors, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_FloorCollection__Bing_Maps_VenueMaps__FloorCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.FloorCollection Func_Bing_Maps_VenueMaps_FloorCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IFloorCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.FloorCollection __value__retval = default(global::Bing.Maps.VenueMaps.FloorCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.FloorCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IFloorCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.FloorCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals.get_Type, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_VenueMaps_VenueType__Bing_Maps_VenueMaps__VenueType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueType Func_Bing_Maps_VenueMaps_VenueType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.VenueType unsafe___value__retval;
			global::Bing.Maps.VenueMaps.VenueType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.EventHandler<Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs__Bing_Maps_VenueMaps__ActiveFloorChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.VenueMaps.__IActiveFloorChangedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.VenueMaps.__IActiveFloorChangedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.VenueMaps.__IActiveFloorChangedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.VenueMaps.__IActiveFloorChangedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueMapPublicNonVirtuals.add_ActiveFloorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget45>(global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals.get_VenueEntities, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntityCollection__Bing_Maps_VenueMaps__VenueEntityCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueEntityCollection Func_Bing_Maps_VenueMaps_VenueEntityCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueEntityCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueEntityCollection __value__retval = default(global::Bing.Maps.VenueMaps.VenueEntityCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueEntityCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueEntityCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals.get_Floor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.Floor Func_Bing_Maps_VenueMaps_Floor__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.Floor __value__retval = default(global::Bing.Maps.VenueMaps.Floor);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.Floor)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.Floor).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals.get_Outline, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationCollection__Bing_Maps__LocationCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.LocationCollection Func_Bing_Maps_LocationCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.LocationCollection __value__retval = default(global::Bing.Maps.LocationCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.LocationCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.LocationCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals.get_Type, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_VenueMaps_VenueEntityType__Bing_Maps_VenueMaps__VenueEntityType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueEntityType Func_Bing_Maps_VenueMaps_VenueEntityType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.VenueEntityType unsafe___value__retval;
			global::Bing.Maps.VenueMaps.VenueEntityType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueEntity>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueEntity Func_uint__Bing_Maps_VenueMaps_VenueEntity__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueEntity __value__retval = default(global::Bing.Maps.VenueMaps.VenueEntity);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueEntity)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueEntity).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueEntity>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_VenueMaps_VenueEntity___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_VenueMaps_VenueEntity_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueEntity> Func__IReadOnlyList_1_Bing_Maps_VenueMaps_VenueEntity___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_VenueEntity_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_VenueEntity_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueEntity> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueEntity>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueEntity>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueEntity>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueEntity>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps_VenueEntity__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueEntity value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueEntity>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_VenueMaps_VenueEntity__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.VenueMaps.VenueEntity value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueEntity>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_VenueMaps_VenueEntity__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueEntity value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueEntity>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps_VenueEntity__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.VenueEntity[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.VenueEntity)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.VenueEntity).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueEntity>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_VenueMaps_VenueEntity__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueEntity[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.VenueEntity>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps_VenueEntity___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps_VenueEntity_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueEntity> Func__Collections_IIterator_1_Bing_Maps_VenueMaps_VenueEntity___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_VenueEntity_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_VenueEntity_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueEntity> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueEntity>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueEntity>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueEntity>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.VenueEntity>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueEntity Func_Bing_Maps_VenueMaps_VenueEntity__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueEntity __value__retval = default(global::Bing.Maps.VenueMaps.VenueEntity);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueEntity)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueEntity).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.VenueEntity>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps_VenueEntity__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueEntity[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.VenueEntity)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.VenueEntity).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueEntity__Bing_Maps_VenueMaps__VenueEntity * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.Floor>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.Floor Func_uint__Bing_Maps_VenueMaps_Floor__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.Floor __value__retval = default(global::Bing.Maps.VenueMaps.Floor);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.Floor)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.Floor).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.Floor>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_VenueMaps_Floor___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_VenueMaps_Floor_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.Floor> Func__IReadOnlyList_1_Bing_Maps_VenueMaps_Floor___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_Floor_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_Floor_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.Floor> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.Floor>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.Floor>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.Floor>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.Floor>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps_Floor__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.Floor value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.Floor>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_VenueMaps_Floor__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.VenueMaps.Floor value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.Floor>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_VenueMaps_Floor__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.Floor value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.Floor>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps_Floor__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.Floor[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.Floor)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.Floor).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.Floor>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_VenueMaps_Floor__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.Floor[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.Floor>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps_Floor___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps_Floor_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.Floor> Func__Collections_IIterator_1_Bing_Maps_VenueMaps_Floor___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_Floor_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_Floor_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.Floor> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.Floor>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.Floor>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.Floor>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.Floor>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps_Floor__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.Floor[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.Floor)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.Floor).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Floor__Bing_Maps_VenueMaps__Floor * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.__IPanelBaseProtectedNonVirtuals.get_HeaderTextBlockContainer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_AccessibleContainer__Bing_Maps__AccessibleContainer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.AccessibleContainer Func_Bing_Maps_AccessibleContainer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IAccessibleContainerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IAccessibleContainerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.AccessibleContainer __value__retval = default(global::Bing.Maps.AccessibleContainer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.AccessibleContainer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IAccessibleContainerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.AccessibleContainer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__INearbyVenueOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_Location__double__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location center, 
					double radius, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_center = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_center = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									center, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_center, 
									radius, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_center)));
				global::System.GC.KeepAlive(center);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals.get_Metadata, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_Metadata__Bing_Maps_VenueMaps__Metadata *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.Metadata Func_Bing_Maps_VenueMaps_Metadata__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IMetadataPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IMetadataPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.Metadata __value__retval = default(global::Bing.Maps.VenueMaps.Metadata);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.Metadata)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IMetadataPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.Metadata).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.NearbyVenue>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.NearbyVenue Func_uint__Bing_Maps_VenueMaps_NearbyVenue__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.NearbyVenue __value__retval = default(global::Bing.Maps.VenueMaps.NearbyVenue);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.NearbyVenue)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.NearbyVenue).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.NearbyVenue>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_VenueMaps_NearbyVenue___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_VenueMaps_NearbyVenue_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.NearbyVenue> Func__IReadOnlyList_1_Bing_Maps_VenueMaps_NearbyVenue___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_NearbyVenue_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_NearbyVenue_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.NearbyVenue> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.NearbyVenue>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.NearbyVenue>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.NearbyVenue>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.NearbyVenue>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps_NearbyVenue__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.NearbyVenue value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.NearbyVenue>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_VenueMaps_NearbyVenue__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.VenueMaps.NearbyVenue value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.NearbyVenue>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_VenueMaps_NearbyVenue__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.NearbyVenue value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.NearbyVenue>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps_NearbyVenue__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.NearbyVenue[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.NearbyVenue)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.NearbyVenue).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.NearbyVenue>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_VenueMaps_NearbyVenue__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.NearbyVenue[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.NearbyVenue>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps_NearbyVenue___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps_NearbyVenue_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.NearbyVenue> Func__Collections_IIterator_1_Bing_Maps_VenueMaps_NearbyVenue___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_NearbyVenue_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_NearbyVenue_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.NearbyVenue> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.NearbyVenue>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.NearbyVenue>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.NearbyVenue>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.NearbyVenue>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.NearbyVenue Func_Bing_Maps_VenueMaps_NearbyVenue__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.NearbyVenue __value__retval = default(global::Bing.Maps.VenueMaps.NearbyVenue);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.NearbyVenue)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.NearbyVenue).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.NearbyVenue>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps_NearbyVenue__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.NearbyVenue[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.NearbyVenue)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.NearbyVenue).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_NearbyVenue__Bing_Maps_VenueMaps__NearbyVenue * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Bing.Maps.VenueMaps.NearbyVenueCollection>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_VenueMaps_NearbyVenueCollection___Windows_Foundation__IAsyncOperation_A_Bing_Maps_VenueMaps_NearbyVenueCollection_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Bing_Maps_VenueMaps_NearbyVenueCollection___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.NearbyVenueCollection> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_NearbyVenueCollection_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_NearbyVenueCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_NearbyVenueCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.NearbyVenueCollection>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Bing.Maps.VenueMaps.VenueMap>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_VenueMaps_VenueMap___Windows_Foundation__IAsyncOperation_A_Bing_Maps_VenueMaps_VenueMap_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Bing_Maps_VenueMaps_VenueMap___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueMap> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueMap_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueMap_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueMap_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueMap>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueCountry>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueCountry Func_uint__Bing_Maps_VenueMaps_VenueCountry__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueCountry __value__retval = default(global::Bing.Maps.VenueMaps.VenueCountry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueCountry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueCountry).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueCountry>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_VenueMaps_VenueCountry___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_VenueMaps_VenueCountry_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueCountry> Func__IReadOnlyList_1_Bing_Maps_VenueMaps_VenueCountry___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_VenueCountry_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_VenueCountry_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueCountry> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueCountry>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueCountry>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueCountry>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueCountry>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps_VenueCountry__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueCountry value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueCountry>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_VenueMaps_VenueCountry__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.VenueMaps.VenueCountry value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueCountry>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_VenueMaps_VenueCountry__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueCountry value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueCountry>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps_VenueCountry__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.VenueCountry[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.VenueCountry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.VenueCountry).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueCountry>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_VenueMaps_VenueCountry__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueCountry[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.VenueCountry>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps_VenueCountry___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps_VenueCountry_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueCountry> Func__Collections_IIterator_1_Bing_Maps_VenueMaps_VenueCountry___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_VenueCountry_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_VenueCountry_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueCountry> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueCountry>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueCountry>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueCountry>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.VenueCountry>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueCountry Func_Bing_Maps_VenueMaps_VenueCountry__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueCountry __value__retval = default(global::Bing.Maps.VenueMaps.VenueCountry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueCountry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueCountry).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.VenueCountry>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps_VenueCountry__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueCountry[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.VenueCountry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.VenueCountry).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueCountry__Bing_Maps_VenueMaps__VenueCountry * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Bing.Maps.VenueMaps.VenueCountryCollection>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_VenueMaps_VenueCountryCollection___Windows_Foundation__IAsyncOperation_A_Bing_Maps_VenueMaps_VenueCountryCollection_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Bing_Maps_VenueMaps_VenueCountryCollection___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueCountryCollection> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueCountryCollection_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueCountryCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueCountryCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueCountryCollection>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueByCountryOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__IntPtr__(
					global::System.__ComObject __this, 
					string countryRegionCodeUpperCase, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_countryRegionCodeUpperCase = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_countryRegionCodeUpperCase = countryRegionCodeUpperCase)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_countryRegionCodeUpperCase;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_countryRegionCodeUpperCase, countryRegionCodeUpperCase, &(hstring_header_countryRegionCodeUpperCase), &(unsafe_countryRegionCodeUpperCase));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_countryRegionCodeUpperCase, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueByCountryOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_VenueMaps_SortVenueBy__Bing_Maps_VenueMaps__SortVenueBy, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__intIntPtr__(
					global::System.__ComObject __this, 
					string countryRegionCodeUpperCase, 
					int sortOption, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_countryRegionCodeUpperCase = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_countryRegionCodeUpperCase = countryRegionCodeUpperCase)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_countryRegionCodeUpperCase;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_countryRegionCodeUpperCase, countryRegionCodeUpperCase, &(hstring_header_countryRegionCodeUpperCase), &(unsafe_countryRegionCodeUpperCase));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_countryRegionCodeUpperCase, 
									sortOption, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueByCountryOptionsPublicNonVirtuals.get_SortBy, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_VenueMaps_SortVenueBy__Bing_Maps_VenueMaps__SortVenueBy, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.SortVenueBy Func_Bing_Maps_VenueMaps_SortVenueBy__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.SortVenueBy unsafe___value__retval;
			global::Bing.Maps.VenueMaps.SortVenueBy __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueByCountry>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueByCountry Func_uint__Bing_Maps_VenueMaps_VenueByCountry__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueByCountry __value__retval = default(global::Bing.Maps.VenueMaps.VenueByCountry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueByCountry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueByCountry).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueByCountry>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_VenueMaps_VenueByCountry___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_VenueMaps_VenueByCountry_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueByCountry> Func__IReadOnlyList_1_Bing_Maps_VenueMaps_VenueByCountry___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_VenueByCountry_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_VenueMaps_VenueByCountry_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueByCountry> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueByCountry>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueByCountry>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.VenueMaps.VenueByCountry>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueByCountry>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps_VenueByCountry__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueByCountry value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueByCountry>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_VenueMaps_VenueByCountry__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.VenueMaps.VenueByCountry value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueByCountry>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_VenueMaps_VenueByCountry__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueByCountry value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueByCountry>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps_VenueByCountry__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.VenueByCountry[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.VenueByCountry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.VenueByCountry).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.VenueMaps.VenueByCountry>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_VenueMaps_VenueByCountry__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueByCountry[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.VenueByCountry>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps_VenueByCountry___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps_VenueByCountry_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueByCountry> Func__Collections_IIterator_1_Bing_Maps_VenueMaps_VenueByCountry___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_VenueByCountry_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps_VenueByCountry_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueByCountry> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueByCountry>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueByCountry>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.VenueByCountry>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.VenueByCountry>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueByCountry Func_Bing_Maps_VenueMaps_VenueByCountry__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueByCountry __value__retval = default(global::Bing.Maps.VenueMaps.VenueByCountry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueByCountry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueByCountry).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.VenueByCountry>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps_VenueByCountry__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.VenueByCountry[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.VenueByCountry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.VenueMaps.VenueByCountry).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueByCountry__Bing_Maps_VenueMaps__VenueByCountry * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Bing.Maps.VenueMaps.VenueByCountryCollection>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_VenueMaps_VenueByCountryCollection___Windows_Foundation__IAsyncOperation_A_Bing_Maps_VenueMaps_VenueByCountryCollection_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Bing_Maps_VenueMaps_VenueByCountryCollection___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueByCountryCollection> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueByCountryCollection_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueByCountryCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_VenueMaps_VenueByCountryCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.VenueMaps.VenueByCountryCollection>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueEventArgsPublicNonVirtuals.get_Venue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Venue__Bing_Maps__Venue *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Venue Func_Bing_Maps_Venue__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IVenuePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IVenuePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Venue __value__retval = default(global::Bing.Maps.Venue);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Venue)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IVenuePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Venue).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueEventArgsPublicNonVirtuals.get_PointerDeviceType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Input_PointerDeviceType__Windows_Devices_Input__PointerDeviceType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Input.PointerDeviceType Func_Devices_Input_PointerDeviceType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Input.PointerDeviceType unsafe___value__retval;
			global::Windows.Devices.Input.PointerDeviceType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__ILocationPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___ILocationPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___ILocationPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___ILocationPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___ILocationPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___ILocationPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILocationPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__ILocationPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__ILocationPublicNonVirtuals Func_Bing_Maps___ILocationPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ILocationPublicNonVirtuals __value__retval = default(global::Bing.Maps.__ILocationPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__ILocationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__ILocationPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___ILocationPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__ILocationPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__ILocationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILocationPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__ILocationPublicNonVirtuals Func_uint__Bing_Maps___ILocationPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ILocationPublicNonVirtuals __value__retval = default(global::Bing.Maps.__ILocationPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__ILocationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILocationPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___ILocationPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__ILocationPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILocationPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___ILocationPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__ILocationPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__ILocationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILocationPublicNonVirtuals__Bing_Maps____ILocationPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals Func_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals Func_uint__Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueEntityPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueEntityPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueEntityPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals Func_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals Func_uint__Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IFloorPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IFloorPublicNonVirtuals__Bing_Maps_VenueMaps____IFloorPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.GetMap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Map__Bing_Maps__Map *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Map Func_Bing_Maps_Map__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Map __value__retval = default(global::Bing.Maps.Map);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Map)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Map).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.CalculateDirectionsAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_Directions_RouteResponse___Windows_Foundation__IAsyncOperation_A_Bing_Maps_Directions_RouteResponse_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Directions.RouteResponse> Func__IAsyncOperation_1_Bing_Maps_Directions_RouteResponse___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Directions_RouteResponse_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Directions_RouteResponse_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Directions.RouteResponse> __value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Directions.RouteResponse>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Directions.RouteResponse>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Directions.RouteResponse>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.get_Waypoints, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_WaypointCollection__Bing_Maps_Directions__WaypointCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.WaypointCollection Func_Bing_Maps_Directions_WaypointCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWaypointCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.WaypointCollection __value__retval = default(global::Bing.Maps.Directions.WaypointCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.WaypointCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWaypointCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.WaypointCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.set_Waypoints, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_WaypointCollection__Bing_Maps_Directions__WaypointCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_WaypointCollection__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.WaypointCollection value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWaypointCollectionProtectedNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWaypointCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWaypointCollectionProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.get_RenderOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsRenderOptions__Bing_Maps_Directions__DirectionsRenderOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DirectionsRenderOptions Func_Bing_Maps_Directions_DirectionsRenderOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.DirectionsRenderOptions __value__retval = default(global::Bing.Maps.Directions.DirectionsRenderOptions);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.DirectionsRenderOptions)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.DirectionsRenderOptions).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.set_RenderOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsRenderOptions__Bing_Maps_Directions__DirectionsRenderOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_DirectionsRenderOptions__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.DirectionsRenderOptions value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IDirectionsRenderOptionsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.set_RequestOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsRequestOptions__Bing_Maps_Directions__DirectionsRequestOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_DirectionsRequestOptions__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.DirectionsRequestOptions value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IDirectionsRequestOptionsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.get_UIEventManager, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsUIEventManager__Bing_Maps_Directions__DirectionsUIEventManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DirectionsUIEventManager Func_Bing_Maps_Directions_DirectionsUIEventManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsUIEventManagerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IDirectionsUIEventManagerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.DirectionsUIEventManager __value__retval = default(global::Bing.Maps.Directions.DirectionsUIEventManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.DirectionsUIEventManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IDirectionsUIEventManagerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.DirectionsUIEventManager).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.set_UIEventManager, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsUIEventManager__Bing_Maps_Directions__DirectionsUIEventManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_DirectionsUIEventManager__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.DirectionsUIEventManager value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsUIEventManagerPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IDirectionsUIEventManagerPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IDirectionsUIEventManagerPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IDirectionsUIEventManagerPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.get_ActiveRoute, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Route Func_Bing_Maps_Directions_Route__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Route __value__retval = default(global::Bing.Maps.Directions.Route);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Route)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Route).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.set_ActiveRoute, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_Route__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Route value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.get_RouteResult, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteCollection__Bing_Maps_Directions__RouteCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RouteCollection Func_Bing_Maps_Directions_RouteCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRouteCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.RouteCollection __value__retval = default(global::Bing.Maps.Directions.RouteCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.RouteCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRouteCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.RouteCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.get_RouteSummaryView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteSummary__Bing_Maps_Directions__RouteSummary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RouteSummary Func_Bing_Maps_Directions_RouteSummary__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteSummaryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRouteSummaryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.RouteSummary __value__retval = default(global::Bing.Maps.Directions.RouteSummary);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.RouteSummary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRouteSummaryPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.RouteSummary).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.get_DirectionsInputView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsInput__Bing_Maps_Directions__DirectionsInput *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DirectionsInput Func_Bing_Maps_Directions_DirectionsInput__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsInputPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IDirectionsInputPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.DirectionsInput __value__retval = default(global::Bing.Maps.Directions.DirectionsInput);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.DirectionsInput)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IDirectionsInputPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.DirectionsInput).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.Directions.DirectionsEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsEventArgs__Bing_Maps_Directions__DirectionsEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_Directions_DirectionsEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.Directions.DirectionsEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.Directions.__IDirectionsEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.Directions.__IDirectionsEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.Directions.__IDirectionsEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.Directions.__IDirectionsEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.add_ActiveRouteChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_Directions_DirectionsEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_Directions_DirectionsEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.Directions.DirectionsEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.Directions.DirectionsEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget46>(global::System.EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.get_ActiveItineraryItem, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.ItineraryItem Func_Bing_Maps_Directions_ItineraryItem__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.ItineraryItem __value__retval = default(global::Bing.Maps.Directions.ItineraryItem);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.ItineraryItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.ItineraryItem).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals.set_ActiveItineraryItem, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_ItineraryItem__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItem value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_MapType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_MapType__Bing_Maps__MapType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapType Func_Bing_Maps_MapType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.MapType unsafe___value__retval;
			global::Bing.Maps.MapType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_ViewRestriction, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_MapViewRestriction__Bing_Maps__MapViewRestriction, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapViewRestriction Func_Bing_Maps_MapViewRestriction__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.MapViewRestriction unsafe___value__retval;
			global::Bing.Maps.MapViewRestriction __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_PreloadArea, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_PreloadArea__Bing_Maps__PreloadArea, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.PreloadArea Func_Bing_Maps_PreloadArea__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.PreloadArea unsafe___value__retval;
			global::Bing.Maps.PreloadArea __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.TryLocationToPixel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Location__out__Point__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location location, 
					out global::Windows.Foundation.Point point, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_location = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::Windows.Foundation.Point unsafe_point;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_location = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									location, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_location, 
									&(unsafe_point), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				point = unsafe_point;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
				global::System.GC.KeepAlive(location);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_TrafficIncidentPushpinOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncidentPushpinOptions__Bing_Maps_Traffic__TrafficIncidentPushpinOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Traffic.TrafficIncidentPushpinOptions Func_Bing_Maps_Traffic_TrafficIncidentPushpinOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPushpinOptionsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Traffic.__ITrafficIncidentPushpinOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Traffic.TrafficIncidentPushpinOptions __value__retval = default(global::Bing.Maps.Traffic.TrafficIncidentPushpinOptions);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Traffic.TrafficIncidentPushpinOptions)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPushpinOptionsPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Traffic.TrafficIncidentPushpinOptions).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.set_TrafficIncidentPushpinOptions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncidentPushpinOptions__Bing_Maps_Traffic__TrafficIncidentPushpinOptions *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Traffic_TrafficIncidentPushpinOptions__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.TrafficIncidentPushpinOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPushpinOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_options = default(global::Bing.Maps.Traffic.__ITrafficIncidentPushpinOptionsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_options = (global::Bing.Maps.Traffic.__ITrafficIncidentPushpinOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									options, 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPushpinOptionsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_options
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_options)));
				global::System.GC.KeepAlive(options);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.TryLocationsToPixels, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationCollection__Bing_Maps__LocationCollection *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_Foundation_Point___Windows_Foundation_Collections__IVector_A_Windows_Foundation_Point_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_LocationCollection___IList_1__Point___bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationCollection locationCollection, 
					global::System.Collections.Generic.IList<global::Windows.Foundation.Point> pointVector, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_locationCollection = default(global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::System.Collections.Generic.IList_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe_pointVector = default(global::System.Collections.Generic.IList_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_locationCollection = (global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									locationCollection, 
									typeof(global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals).TypeHandle
								);
				unsafe_pointVector = (global::System.Collections.Generic.IList_A_Windows_Foundation_Point_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									pointVector, 
									typeof(global::System.Collections.Generic.IList<global::Windows.Foundation.Point>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_locationCollection, 
									unsafe_pointVector, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_locationCollection)));
				global::System.GC.KeepAlive(locationCollection);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pointVector)));
				global::System.GC.KeepAlive(pointVector);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.TryPixelToLocation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__Point__out_Bing_Maps_Location__bool__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point point, 
					out global::Bing.Maps.Location location, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_location = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_location = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									&(unsafe_location), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				location = (global::Bing.Maps.Location)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_location), 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Location).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.SetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Location__TimeSpan__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location center, 
					global::System.TimeSpan animationDuration, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_center = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_center = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									center, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_center, 
									animationDuration
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_center)));
				global::System.GC.KeepAlive(center);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.SetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Location__double__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location center, 
					double zoomLevel, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_center = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_center = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									center, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_center, 
									zoomLevel
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_center)));
				global::System.GC.KeepAlive(center);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.SetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Location__double__TimeSpan__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location center, 
					double zoomLevel, 
					global::System.TimeSpan animationDuration, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_center = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_center = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									center, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_center, 
									zoomLevel, 
									animationDuration
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_center)));
				global::System.GC.KeepAlive(center);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.SetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Location__double__double__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location center, 
					double zoomLevel, 
					double heading, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_center = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_center = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									center, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_center, 
									zoomLevel, 
									heading
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_center)));
				global::System.GC.KeepAlive(center);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.SetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Location__double__double__TimeSpan__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Location center, 
					double zoomLevel, 
					double heading, 
					global::System.TimeSpan animationDuration, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_center = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_center = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									center, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_center, 
									zoomLevel, 
									heading, 
									animationDuration
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_center)));
				global::System.GC.KeepAlive(center);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.SetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_LocationRect__TimeSpan__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRect boundingRectangle, 
					global::System.TimeSpan animationDuration, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_boundingRectangle = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_boundingRectangle = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									boundingRectangle, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_boundingRectangle, 
									animationDuration
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_boundingRectangle)));
				global::System.GC.KeepAlive(boundingRectangle);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.SetZoomLevel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_double__TimeSpan__(
					global::System.__ComObject __this, 
					double newZoomLevel, 
					global::System.TimeSpan animationDuration, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								newZoomLevel, 
								animationDuration
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.SetZoomLevelAroundPoint, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_double___Point__TimeSpan__(
					global::System.__ComObject __this, 
					double newZoomLevel, 
					global::Windows.Foundation.Point point, 
					global::System.TimeSpan animationDuration, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								newZoomLevel, 
								point, 
								animationDuration
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_Children, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapUIElementCollection__Bing_Maps__MapUIElementCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapUIElementCollection Func_Bing_Maps_MapUIElementCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapUIElementCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapUIElementCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapUIElementCollection __value__retval = default(global::Bing.Maps.MapUIElementCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapUIElementCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapUIElementCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapUIElementCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_ShapeLayers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayerCollection__Bing_Maps__MapShapeLayerCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapShapeLayerCollection Func_Bing_Maps_MapShapeLayerCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapShapeLayerCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapShapeLayerCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapShapeLayerCollection __value__retval = default(global::Bing.Maps.MapShapeLayerCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapShapeLayerCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapShapeLayerCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapShapeLayerCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_TileLayers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapTileLayerCollection__Bing_Maps__MapTileLayerCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapTileLayerCollection Func_Bing_Maps_MapTileLayerCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapTileLayerCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__IMapTileLayerCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.MapTileLayerCollection __value__retval = default(global::Bing.Maps.MapTileLayerCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.MapTileLayerCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__IMapTileLayerCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.MapTileLayerCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_ScaleBarPosition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_MapForegroundPosition__Bing_Maps__MapForegroundPosition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.MapForegroundPosition Func_Bing_Maps_MapForegroundPosition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.MapForegroundPosition unsafe___value__retval;
			global::Bing.Maps.MapForegroundPosition __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_VenueManager, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_VenueMaps_VenueManager__Bing_Maps_VenueMaps__VenueManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.VenueManager Func_Bing_Maps_VenueMaps_VenueManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.VenueManager __value__retval = default(global::Bing.Maps.VenueMaps.VenueManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.VenueManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueManagerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.VenueMaps.VenueManager).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_DirectionsManager, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_DirectionsManager__Bing_Maps_Directions__DirectionsManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.DirectionsManager Func_Bing_Maps_Directions_DirectionsManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.DirectionsManager __value__retval = default(global::Bing.Maps.Directions.DirectionsManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.DirectionsManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IDirectionsManagerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.DirectionsManager).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_TrafficManager, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficManager__Bing_Maps_Traffic__TrafficManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Traffic.TrafficManager Func_Bing_Maps_Traffic_TrafficManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficManagerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Traffic.__ITrafficManagerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Traffic.TrafficManager __value__retval = default(global::Bing.Maps.Traffic.TrafficManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Traffic.TrafficManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Traffic.__ITrafficManagerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Traffic.TrafficManager).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.get_SearchManager, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_SearchManager__Bing_Maps_Search__SearchManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.SearchManager Func_Bing_Maps_Search_SearchManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__ISearchManagerPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__ISearchManagerPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.SearchManager __value__retval = default(global::Bing.Maps.Search.SearchManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.SearchManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__ISearchManagerPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Search.SearchManager).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.GetCopyrightAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_string___Windows_Foundation__IAsyncOperation_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<string> Func__IAsyncOperation_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<string> __value__retval = default(global::Windows.Foundation.IAsyncOperation<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IAsyncOperation<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<string>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.ViewChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_ViewChangedEventArgs__Bing_Maps__ViewChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_ViewChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.ViewChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__IViewChangedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__IViewChangedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__IViewChangedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__IViewChangedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.add_ViewChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_ViewChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_ViewChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_ViewChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.ViewChangedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_ViewChangedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_ViewChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_ViewChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.ViewChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget47>(global::System.EventHandler_A_Bing_Maps_ViewChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.ViewChangeStartedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_ViewChangeStartedEventArgs__Bing_Maps__ViewChangeStartedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_ViewChangeStartedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.ViewChangeStartedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__IViewChangeStartedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__IViewChangeStartedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__IViewChangeStartedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__IViewChangeStartedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.add_ViewChangeStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_ViewChangeStartedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_ViewChangeStartedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.ViewChangeStartedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.ViewChangeStartedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget48>(global::System.EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.ViewChangeEndedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_ViewChangeEndedEventArgs__Bing_Maps__ViewChangeEndedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_ViewChangeEndedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.ViewChangeEndedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__IViewChangeEndedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__IViewChangeEndedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__IViewChangeEndedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__IViewChangeEndedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.add_ViewChangeEnded, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_ViewChangeEndedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_ViewChangeEndedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.ViewChangeEndedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.ViewChangeEndedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget49>(global::System.EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.TargetViewChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TargetViewChangedEventArgs__Bing_Maps__TargetViewChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_TargetViewChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.TargetViewChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__ITargetViewChangedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__ITargetViewChangedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__ITargetViewChangedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__ITargetViewChangedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.add_TargetViewChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_TargetViewChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_TargetViewChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.TargetViewChangedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.TargetViewChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget50>(global::System.EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.CopyrightChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_CopyrightChangedEventArgs__Bing_Maps__CopyrightChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_CopyrightChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.CopyrightChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__ICopyrightChangedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__ICopyrightChangedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__ICopyrightChangedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__ICopyrightChangedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.add_CopyrightChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_CopyrightChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_CopyrightChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.CopyrightChangedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.CopyrightChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget51>(global::System.EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.MapStyleChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapStyleChangedEventArgs__Bing_Maps__MapStyleChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_MapStyleChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.MapStyleChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__IMapStyleChangedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__IMapStyleChangedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__IMapStyleChangedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__IMapStyleChangedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.add_MapStyleChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_MapStyleChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_MapStyleChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.MapStyleChangedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.MapStyleChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget52>(global::System.EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.TileServersAvailabilityChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TileServersAvailabilityChangedEventArgs__Bing_Maps__TileServersAvailabilityChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_TileServersAvailabilityChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.TileServersAvailabilityChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__ITileServersAvailabilityChangedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__ITileServersAvailabilityChangedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__ITileServersAvailabilityChangedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__ITileServersAvailabilityChangedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.add_TileServersAvailabilityChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_TileServersAvailabilityChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_TileServersAvailabilityChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.TileServersAvailabilityChangedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.TileServersAvailabilityChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget53>(global::System.EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, System.EventHandler<Bing.Maps.LandmarkTappedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LandmarkTappedEventArgs__Bing_Maps__LandmarkTappedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Bing_Maps_LandmarkTappedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Bing.Maps.LandmarkTappedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Bing.Maps.__ILandmarkTappedEventArgsPublicNonVirtuals__Impl.Vtbl** unsafe_args = default(global::Bing.Maps.__ILandmarkTappedEventArgsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Bing.Maps.__ILandmarkTappedEventArgsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Bing.Maps.__ILandmarkTappedEventArgsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Bing.Maps.__IMapPublicNonVirtuals.add_LandmarkTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_LandmarkTappedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_Bing_Maps_LandmarkTappedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Bing.Maps.LandmarkTappedEventArgs> __param0, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V___Impl.Vtbl** unsafe___param0 = default(global::System.EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___param0 = (global::System.EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									__param0, 
									typeof(global::System.EventHandler<global::Bing.Maps.LandmarkTappedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget54>(global::System.EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe___param0, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___param0)));
			}
		}

		// Signature, Bing.Maps.Traffic.__ITrafficManagerPublicNonVirtuals.GetTrafficIncidentsAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncidentRequestOptions__Bing_Maps_Traffic__TrafficIncidentRequestOptions *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_Traffic_TrafficIncidentResponse___Windows_Foundation__IAsyncOperation_A_Bing_Maps_Traffic_TrafficIncidentResponse_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Traffic.TrafficIncidentResponse> Func_Bing_Maps_Traffic_TrafficIncidentRequestOptions___IAsyncOperation_1_Bing_Maps_Traffic_TrafficIncidentResponse___(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.TrafficIncidentRequestOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentRequestOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_options = default(global::Bing.Maps.Traffic.__ITrafficIncidentRequestOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Traffic_TrafficIncidentResponse_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Traffic_TrafficIncidentResponse_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Traffic.TrafficIncidentResponse> __value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Traffic.TrafficIncidentResponse>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_options = (global::Bing.Maps.Traffic.__ITrafficIncidentRequestOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									options, 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentRequestOptionsPublicNonVirtuals).TypeHandle
								);
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_options, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Traffic.TrafficIncidentResponse>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Traffic.TrafficIncidentResponse>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_options)));
				global::System.GC.KeepAlive(options);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Traffic.__ITrafficManagerPublicNonVirtuals.ShowTrafficIncidents, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncidentCollection__Bing_Maps_Traffic__TrafficIncidentCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Traffic_TrafficIncidentCollection__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.TrafficIncidentCollection trafficIncidents, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_trafficIncidents = default(global::Bing.Maps.Traffic.__ITrafficIncidentCollectionProtectedNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_trafficIncidents = (global::Bing.Maps.Traffic.__ITrafficIncidentCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									trafficIncidents, 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentCollectionProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_trafficIncidents
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_trafficIncidents)));
				global::System.GC.KeepAlive(trafficIncidents);
			}
		}

		// Signature, Bing.Maps.Traffic.__ITrafficManagerPublicNonVirtuals.GetIncidentSymbol, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Traffic_IncidentType__Bing_Maps_Traffic__IncidentType, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_intstring__(
					global::System.__ComObject __this, 
					int incidentType, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe___value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string __value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									incidentType, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe___value__retval);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe___value__retval.handle);
			}
		}

		// Signature, Bing.Maps.Traffic.__ITrafficIncidentRequestOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Traffic_IncidentSeverity__Bing_Maps_Traffic__IncidentSeverity, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Traffic_IncidentType__Bing_Maps_Traffic__IncidentType, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_LocationRect__bool__intintIntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationRect bounds, 
					bool includeLocationCodes, 
					int severityFlags, 
					int typeFlags, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_bounds = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			sbyte unsafe_includeLocationCodes;
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bounds = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bounds, 
									typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
								);
				unsafe_includeLocationCodes = (includeLocationCodes ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bounds, 
									unsafe_includeLocationCodes, 
									severityFlags, 
									typeFlags, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bounds)));
				global::System.GC.KeepAlive(bounds);
			}
		}

		// Signature, Bing.Maps.Traffic.__ITrafficIncidentRequestOptionsPublicNonVirtuals.get_SeverityFlags, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Traffic_IncidentSeverity__Bing_Maps_Traffic__IncidentSeverity, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Traffic.IncidentSeverity Func_Bing_Maps_Traffic_IncidentSeverity__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.IncidentSeverity unsafe___value__retval;
			global::Bing.Maps.Traffic.IncidentSeverity __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Traffic.__ITrafficIncidentRequestOptionsPublicNonVirtuals.get_TypeFlags, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Traffic_IncidentType__Bing_Maps_Traffic__IncidentType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Traffic.IncidentType Func_Bing_Maps_Traffic_IncidentType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.IncidentType unsafe___value__retval;
			global::Bing.Maps.Traffic.IncidentType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals.get_LocationCodes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_string___Windows_Foundation_Collections__IVector_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<string> Func__IList_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_string_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IList_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<string> __value__retval = default(global::System.Collections.Generic.IList<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IList<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IList<string>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Traffic.TrafficIncident>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Traffic.TrafficIncident Func_uint__Bing_Maps_Traffic_TrafficIncident__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Traffic.TrafficIncident __value__retval = default(global::Bing.Maps.Traffic.TrafficIncident);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Traffic.TrafficIncident)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Traffic.TrafficIncident).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Traffic.TrafficIncident>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Traffic_TrafficIncident___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Traffic_TrafficIncident_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Traffic.TrafficIncident> Func__IReadOnlyList_1_Bing_Maps_Traffic_TrafficIncident___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Traffic_TrafficIncident_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Traffic_TrafficIncident_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Traffic.TrafficIncident> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Traffic.TrafficIncident>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Traffic.TrafficIncident>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Traffic.TrafficIncident>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Traffic.TrafficIncident>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Traffic_TrafficIncident__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.TrafficIncident value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Traffic.TrafficIncident>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Traffic_TrafficIncident__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Traffic.TrafficIncident value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Traffic.TrafficIncident>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Traffic_TrafficIncident__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.TrafficIncident value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Traffic.TrafficIncident>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Traffic_TrafficIncident__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Traffic.TrafficIncident[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident * items
						items[mcgIdx] = (global::Bing.Maps.Traffic.TrafficIncident)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Traffic.TrafficIncident).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Traffic.TrafficIncident>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Traffic_TrafficIncident__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.TrafficIncident[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Traffic.TrafficIncident>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Traffic_TrafficIncident___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Traffic_TrafficIncident_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.TrafficIncident> Func__Collections_IIterator_1_Bing_Maps_Traffic_TrafficIncident___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Traffic_TrafficIncident_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Traffic_TrafficIncident_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.TrafficIncident> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.TrafficIncident>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.TrafficIncident>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.TrafficIncident>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Traffic.TrafficIncident>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Traffic.TrafficIncident Func_Bing_Maps_Traffic_TrafficIncident__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Traffic.TrafficIncident __value__retval = default(global::Bing.Maps.Traffic.TrafficIncident);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Traffic.TrafficIncident)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Traffic.TrafficIncident).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Traffic.TrafficIncident>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Traffic_TrafficIncident__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.TrafficIncident[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident * items
						items[mcgIdx] = (global::Bing.Maps.Traffic.TrafficIncident)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Traffic.TrafficIncident).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Traffic_TrafficIncident__Bing_Maps_Traffic__TrafficIncident * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Bing.Maps.Traffic.TrafficIncidentResponse>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_Traffic_TrafficIncidentResponse___Windows_Foundation__IAsyncOperation_A_Bing_Maps_Traffic_TrafficIncidentResponse_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Bing_Maps_Traffic_TrafficIncidentResponse___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Traffic.TrafficIncidentResponse> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Traffic_TrafficIncidentResponse_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Traffic_TrafficIncidentResponse_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Traffic_TrafficIncidentResponse_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Traffic.TrafficIncidentResponse>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Bing.Maps.Search.__ISearchManagerPublicNonVirtuals.ReverseGeocodeAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_ReverseGeocodeRequestOptions__Bing_Maps_Search__ReverseGeocodeRequestOptions *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_Search_LocationDataResponse___Windows_Foundation__IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse> Func_Bing_Maps_Search_ReverseGeocodeRequestOptions___IAsyncOperation_1_Bing_Maps_Search_LocationDataResponse___(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.ReverseGeocodeRequestOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IReverseGeocodeRequestOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_options = default(global::Bing.Maps.Search.__IReverseGeocodeRequestOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse> __value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_options = (global::Bing.Maps.Search.__IReverseGeocodeRequestOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									options, 
									typeof(global::Bing.Maps.Search.__IReverseGeocodeRequestOptionsPublicNonVirtuals).TypeHandle
								);
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_options, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_options)));
				global::System.GC.KeepAlive(options);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Search.__ISearchManagerPublicNonVirtuals.GeocodeAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeRequestOptions__Bing_Maps_Search__GeocodeRequestOptions *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_Search_LocationDataResponse___Windows_Foundation__IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse> Func_Bing_Maps_Search_GeocodeRequestOptions___IAsyncOperation_1_Bing_Maps_Search_LocationDataResponse___(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodeRequestOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeRequestOptionsPublicNonVirtuals__Impl.Vtbl** unsafe_options = default(global::Bing.Maps.Search.__IGeocodeRequestOptionsPublicNonVirtuals__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse> __value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_options = (global::Bing.Maps.Search.__IGeocodeRequestOptionsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									options, 
									typeof(global::Bing.Maps.Search.__IGeocodeRequestOptionsPublicNonVirtuals).TypeHandle
								);
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_options, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_options)));
				global::System.GC.KeepAlive(options);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Search.__IReverseGeocodeRequestOptionsPublicNonVirtuals.get_IncludeEntityTypeFlags, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Search_ReverseGeocodeEntityType__Bing_Maps_Search__ReverseGeocodeEntityType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.ReverseGeocodeEntityType Func_Bing_Maps_Search_ReverseGeocodeEntityType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.ReverseGeocodeEntityType unsafe___value__retval;
			global::Bing.Maps.Search.ReverseGeocodeEntityType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals.get_GeocodeLocations, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePointCollection__Bing_Maps_Search__GeocodePointCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodePointCollection Func_Bing_Maps_Search_GeocodePointCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodePointCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.GeocodePointCollection __value__retval = default(global::Bing.Maps.Search.GeocodePointCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.GeocodePointCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodePointCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Search.GeocodePointCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals.get_Address, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeAddress__Bing_Maps_Search__GeocodeAddress *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodeAddress Func_Bing_Maps_Search_GeocodeAddress__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeAddressPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodeAddressPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.GeocodeAddress __value__retval = default(global::Bing.Maps.Search.GeocodeAddress);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.GeocodeAddress)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodeAddressPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Search.GeocodeAddress).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals.get_Confidence, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Search_GeocodeConfidence__Bing_Maps_Search__GeocodeConfidence, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodeConfidence Func_Bing_Maps_Search_GeocodeConfidence__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.GeocodeConfidence unsafe___value__retval;
			global::Bing.Maps.Search.GeocodeConfidence __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals.get_MatchCodes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Search_GeocodeMatchCode__Bing_Maps_Search__GeocodeMatchCode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodeMatchCode Func_Bing_Maps_Search_GeocodeMatchCode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.GeocodeMatchCode unsafe___value__retval;
			global::Bing.Maps.Search.GeocodeMatchCode __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals.get_QueryParseValues, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_string__string___Windows_Foundation_Collections__IMap_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IDictionary<string, string> Func__IDictionary_2_string__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IDictionary_A_string_j_string_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IDictionary_A_string_j_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IDictionary<string, string> __value__retval = default(global::System.Collections.Generic.IDictionary<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IDictionary<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IDictionary<string, string>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Search.__IGeocodePointPublicNonVirtuals.get_CalculationMethod, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Search_GeocodeLocationCalculationMethod__Bing_Maps_Search__GeocodeLocationCalculationMethod, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodeLocationCalculationMethod Func_Bing_Maps_Search_GeocodeLocationCalculationMethod__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.GeocodeLocationCalculationMethod unsafe___value__retval;
			global::Bing.Maps.Search.GeocodeLocationCalculationMethod __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Search.__IGeocodePointPublicNonVirtuals.get_UsageType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Search_GeocodeLocationUsageType__Bing_Maps_Search__GeocodeLocationUsageType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodeLocationUsageType Func_Bing_Maps_Search_GeocodeLocationUsageType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.GeocodeLocationUsageType unsafe___value__retval;
			global::Bing.Maps.Search.GeocodeLocationUsageType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodePoint>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodePoint Func_uint__Bing_Maps_Search_GeocodePoint__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.GeocodePoint __value__retval = default(global::Bing.Maps.Search.GeocodePoint);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.GeocodePoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Search.GeocodePoint).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodePoint>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Search_GeocodePoint___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Search_GeocodePoint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodePoint> Func__IReadOnlyList_1_Bing_Maps_Search_GeocodePoint___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Search_GeocodePoint_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Search_GeocodePoint_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodePoint> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodePoint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodePoint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodePoint>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodePoint>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Search_GeocodePoint__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodePoint value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodePoint>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Search_GeocodePoint__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Search.GeocodePoint value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodePoint>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Search_GeocodePoint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodePoint value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodePoint>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Search_GeocodePoint__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Search.GeocodePoint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint * items
						items[mcgIdx] = (global::Bing.Maps.Search.GeocodePoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Search.GeocodePoint).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodePoint>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Search_GeocodePoint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodePoint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Search.GeocodePoint>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Search_GeocodePoint___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Search_GeocodePoint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodePoint> Func__Collections_IIterator_1_Bing_Maps_Search_GeocodePoint___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Search_GeocodePoint_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Search_GeocodePoint_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodePoint> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodePoint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodePoint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodePoint>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Search.GeocodePoint>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodePoint Func_Bing_Maps_Search_GeocodePoint__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.GeocodePoint __value__retval = default(global::Bing.Maps.Search.GeocodePoint);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.GeocodePoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Search.GeocodePoint).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Search.GeocodePoint>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Search_GeocodePoint__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodePoint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint * items
						items[mcgIdx] = (global::Bing.Maps.Search.GeocodePoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Search.GeocodePoint).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodePoint__Bing_Maps_Search__GeocodePoint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodeLocation>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodeLocation Func_uint__Bing_Maps_Search_GeocodeLocation__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.GeocodeLocation __value__retval = default(global::Bing.Maps.Search.GeocodeLocation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.GeocodeLocation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Search.GeocodeLocation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodeLocation>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Search_GeocodeLocation___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Search_GeocodeLocation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodeLocation> Func__IReadOnlyList_1_Bing_Maps_Search_GeocodeLocation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Search_GeocodeLocation_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Search_GeocodeLocation_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodeLocation> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodeLocation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodeLocation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Search.GeocodeLocation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodeLocation>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Search_GeocodeLocation__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodeLocation value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodeLocation>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Search_GeocodeLocation__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Search.GeocodeLocation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodeLocation>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Search_GeocodeLocation__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodeLocation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodeLocation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Search_GeocodeLocation__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Search.GeocodeLocation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation * items
						items[mcgIdx] = (global::Bing.Maps.Search.GeocodeLocation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Search.GeocodeLocation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Search.GeocodeLocation>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Search_GeocodeLocation__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodeLocation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Search.GeocodeLocation>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Search_GeocodeLocation___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Search_GeocodeLocation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodeLocation> Func__Collections_IIterator_1_Bing_Maps_Search_GeocodeLocation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Search_GeocodeLocation_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Search_GeocodeLocation_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodeLocation> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodeLocation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodeLocation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.GeocodeLocation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Search.GeocodeLocation>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodeLocation Func_Bing_Maps_Search_GeocodeLocation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.GeocodeLocation __value__retval = default(global::Bing.Maps.Search.GeocodeLocation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.GeocodeLocation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Search.GeocodeLocation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Search.GeocodeLocation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Search_GeocodeLocation__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.GeocodeLocation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation * items
						items[mcgIdx] = (global::Bing.Maps.Search.GeocodeLocation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Search.GeocodeLocation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocation__Bing_Maps_Search__GeocodeLocation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Bing.Maps.Search.LocationDataResponse>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_Search_LocationDataResponse___Windows_Foundation__IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Bing_Maps_Search_LocationDataResponse___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Search_LocationDataResponse_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Search.LocationDataResponse>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Bing.Maps.Search.__IGeocodeRequestOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__bool__bool__uint__IntPtr__(
					global::System.__ComObject __this, 
					string queryString, 
					bool includeNeighborhood, 
					bool includeQueryParse, 
					uint maxResults, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_queryString = default(global::System.Runtime.InteropServices.HSTRING);
			sbyte unsafe_includeNeighborhood;
			sbyte unsafe_includeQueryParse;
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_queryString = queryString)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_queryString;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_queryString, queryString, &(hstring_header_queryString), &(unsafe_queryString));
				unsafe_includeNeighborhood = (includeNeighborhood ? ((sbyte)1) : ((sbyte)0));
				unsafe_includeQueryParse = (includeQueryParse ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_queryString, 
									unsafe_includeNeighborhood, 
									unsafe_includeQueryParse, 
									maxResults, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Search.__IGeocodeRequestOptionsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationRect__Bing_Maps__LocationRect *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__bool__bool__uint__Bing_Maps_LocationRect__IntPtr__(
					global::System.__ComObject __this, 
					string queryString, 
					bool includeNeighborhood, 
					bool includeQueryParse, 
					uint maxResults, 
					global::Bing.Maps.LocationRect bounds, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_queryString = default(global::System.Runtime.InteropServices.HSTRING);
			sbyte unsafe_includeNeighborhood;
			sbyte unsafe_includeQueryParse;
			global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl** unsafe_bounds = default(global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_queryString = queryString)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_queryString;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_queryString, queryString, &(hstring_header_queryString), &(unsafe_queryString));
					unsafe_includeNeighborhood = (includeNeighborhood ? ((sbyte)1) : ((sbyte)0));
					unsafe_includeQueryParse = (includeQueryParse ? ((sbyte)1) : ((sbyte)0));
					unsafe_bounds = (global::Bing.Maps.__ILocationRectPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										bounds, 
										typeof(global::Bing.Maps.__ILocationRectPublicNonVirtuals).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_queryString, 
										unsafe_includeNeighborhood, 
										unsafe_includeQueryParse, 
										maxResults, 
										unsafe_bounds, 
										&(unsafe___value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					__value__retval = unsafe___value__retval;
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bounds)));
				global::System.GC.KeepAlive(bounds);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<string>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_string___Windows_Foundation__IAsyncOperation_A_string_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_string___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<string> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Bing.Maps.__ITileServersAvailabilityChangedEventArgsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_bool__IntPtr__(
					global::System.__ComObject __this, 
					bool ServersAvailable, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_ServersAvailable;
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			// Marshalling
			unsafe_ServersAvailable = (ServersAvailable ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_ServersAvailable, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__ILandmarkTappedEventArgsFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LandmarkCollection__Bing_Maps__LandmarkCollection *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_LandmarkCollection__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LandmarkCollection landmarks, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_landmarks = default(global::Bing.Maps.__ILandmarkCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_landmarks = (global::Bing.Maps.__ILandmarkCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									landmarks, 
									typeof(global::Bing.Maps.__ILandmarkCollectionProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_landmarks, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_landmarks)));
				global::System.GC.KeepAlive(landmarks);
			}
		}

		// Signature, Bing.Maps.__ILandmarkPublicNonVirtuals.get_Type, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_LandmarkType__Bing_Maps__LandmarkType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.LandmarkType Func_Bing_Maps_LandmarkType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.LandmarkType unsafe___value__retval;
			global::Bing.Maps.LandmarkType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__ILandmarkPublicNonVirtuals.get_TransitData, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitData__Bing_Maps__TransitData *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.TransitData Func_Bing_Maps_TransitData__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitDataPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ITransitDataPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.TransitData __value__retval = default(global::Bing.Maps.TransitData);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.TransitData)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ITransitDataPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.TransitData).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__ILandmarkPublicNonVirtuals.get_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_LandmarkSource__Bing_Maps__LandmarkSource, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.LandmarkSource Func_Bing_Maps_LandmarkSource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.LandmarkSource unsafe___value__retval;
			global::Bing.Maps.LandmarkSource __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__ITransitDataPublicNonVirtuals.get_Routes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteCollection__Bing_Maps__TransitRouteCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.TransitRouteCollection Func_Bing_Maps_TransitRouteCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ITransitRouteCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.TransitRouteCollection __value__retval = default(global::Bing.Maps.TransitRouteCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.TransitRouteCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ITransitRouteCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.TransitRouteCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.TransitRouteData>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.TransitRouteData Func_uint__Bing_Maps_TransitRouteData__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.TransitRouteData __value__retval = default(global::Bing.Maps.TransitRouteData);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.TransitRouteData)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.TransitRouteData).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.TransitRouteData>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_TransitRouteData___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_TransitRouteData_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.TransitRouteData> Func__IReadOnlyList_1_Bing_Maps_TransitRouteData___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_TransitRouteData_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_TransitRouteData_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.TransitRouteData> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.TransitRouteData>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.TransitRouteData>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.TransitRouteData>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.TransitRouteData>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_TransitRouteData__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.TransitRouteData value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.TransitRouteData>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_TransitRouteData__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.TransitRouteData value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.TransitRouteData>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_TransitRouteData__(
					global::System.__ComObject __this, 
					global::Bing.Maps.TransitRouteData value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.TransitRouteData>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_TransitRouteData__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.TransitRouteData[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData * items
						items[mcgIdx] = (global::Bing.Maps.TransitRouteData)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.TransitRouteData).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.TransitRouteData>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_TransitRouteData__(
					global::System.__ComObject __this, 
					global::Bing.Maps.TransitRouteData[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.TransitRouteData>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_TransitRouteData___Windows_Foundation_Collections__IIterator_A_Bing_Maps_TransitRouteData_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.TransitRouteData> Func__Collections_IIterator_1_Bing_Maps_TransitRouteData___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_TransitRouteData_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_TransitRouteData_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.TransitRouteData> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.TransitRouteData>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.TransitRouteData>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.TransitRouteData>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.TransitRouteData>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.TransitRouteData Func_Bing_Maps_TransitRouteData__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.TransitRouteData __value__retval = default(global::Bing.Maps.TransitRouteData);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.TransitRouteData)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.TransitRouteData).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.TransitRouteData>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_TransitRouteData__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.TransitRouteData[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData * items
						items[mcgIdx] = (global::Bing.Maps.TransitRouteData)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.TransitRouteData).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_TransitRouteData__Bing_Maps__TransitRouteData * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Landmark>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Landmark Func_uint__Bing_Maps_Landmark__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Landmark __value__retval = default(global::Bing.Maps.Landmark);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Landmark)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Landmark).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Landmark>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Landmark___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Landmark_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Landmark> Func__IReadOnlyList_1_Bing_Maps_Landmark___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Landmark_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Landmark_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Landmark> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Landmark>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Landmark>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Landmark>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Landmark>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Landmark__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Landmark value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Landmark>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Landmark__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Landmark value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Landmark>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Landmark__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Landmark value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Landmark>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Landmark__Bing_Maps__Landmark * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Landmark__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Landmark[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark * items
						items[mcgIdx] = (global::Bing.Maps.Landmark)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Landmark).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Landmark>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Landmark__Bing_Maps__Landmark * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Landmark__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Landmark[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Landmark>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Landmark___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Landmark_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Landmark> Func__Collections_IIterator_1_Bing_Maps_Landmark___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Landmark_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Landmark_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Landmark> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Landmark>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Landmark>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Landmark>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Landmark>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Landmark Func_Bing_Maps_Landmark__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Landmark __value__retval = default(global::Bing.Maps.Landmark);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Landmark)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Landmark).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Landmark>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Landmark__Bing_Maps__Landmark * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Landmark__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Landmark[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark * items
						items[mcgIdx] = (global::Bing.Maps.Landmark)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Landmark).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Landmark__Bing_Maps__Landmark * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.__ILandmarkTappedEventArgsPublicNonVirtuals.get_Landmarks, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LandmarkCollection__Bing_Maps__LandmarkCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.LandmarkCollection Func_Bing_Maps_LandmarkCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILandmarkCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.LandmarkCollection __value__retval = default(global::Bing.Maps.LandmarkCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.LandmarkCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILandmarkCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.LandmarkCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IRoutePublicNonVirtuals.get_RouteLegs, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLegCollection__Bing_Maps_Directions__RouteLegCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RouteLegCollection Func_Bing_Maps_Directions_RouteLegCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRouteLegCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.RouteLegCollection __value__retval = default(global::Bing.Maps.Directions.RouteLegCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.RouteLegCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRouteLegCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.RouteLegCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IRoutePublicNonVirtuals.get_RoutePath, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RoutePath__Bing_Maps_Directions__RoutePath *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RoutePath Func_Bing_Maps_Directions_RoutePath__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePathPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRoutePathPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.RoutePath __value__retval = default(global::Bing.Maps.Directions.RoutePath);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.RoutePath)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRoutePathPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.RoutePath).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IRouteLegPublicNonVirtuals.get_AlternateVias, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Search_GeocodeLocationCollection__Bing_Maps_Search__GeocodeLocationCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.GeocodeLocationCollection Func_Bing_Maps_Search_GeocodeLocationCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodeLocationCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.GeocodeLocationCollection __value__retval = default(global::Bing.Maps.Search.GeocodeLocationCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.GeocodeLocationCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Search.GeocodeLocationCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IRouteLegPublicNonVirtuals.get_ItineraryItems, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemCollection__Bing_Maps_Directions__ItineraryItemCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.ItineraryItemCollection Func_Bing_Maps_Directions_ItineraryItemCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.ItineraryItemCollection __value__retval = default(global::Bing.Maps.Directions.ItineraryItemCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.ItineraryItemCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.ItineraryItemCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals.get_ItineraryItemDetails, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetailsCollection__Bing_Maps_Directions__ItineraryItemDetailsCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.ItineraryItemDetailsCollection Func_Bing_Maps_Directions_ItineraryItemDetailsCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemDetailsCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.ItineraryItemDetailsCollection __value__retval = default(global::Bing.Maps.Directions.ItineraryItemDetailsCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.ItineraryItemDetailsCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.ItineraryItemDetailsCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals.get_Hints, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_HintCollection__Bing_Maps_Directions__HintCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.HintCollection Func_Bing_Maps_Directions_HintCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IHintCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.HintCollection __value__retval = default(global::Bing.Maps.Directions.HintCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.HintCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IHintCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.HintCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals.get_IconType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_ItineraryItemIconType__Bing_Maps_Directions__ItineraryItemIconType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.ItineraryItemIconType Func_Bing_Maps_Directions_ItineraryItemIconType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.ItineraryItemIconType unsafe___value__retval;
			global::Bing.Maps.Directions.ItineraryItemIconType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals.get_Instruction, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Instruction__Bing_Maps_Directions__Instruction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Instruction Func_Bing_Maps_Directions_Instruction__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IInstructionPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IInstructionPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Instruction __value__retval = default(global::Bing.Maps.Directions.Instruction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Instruction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IInstructionPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Instruction).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals.get_SideOfStreet, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_ItineraryItemSideOfStreet__Bing_Maps_Directions__ItineraryItemSideOfStreet, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.ItineraryItemSideOfStreet Func_Bing_Maps_Directions_ItineraryItemSideOfStreet__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.ItineraryItemSideOfStreet unsafe___value__retval;
			global::Bing.Maps.Directions.ItineraryItemSideOfStreet __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals.get_Signs, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_SignCollection__Bing_Maps_Directions__SignCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.SignCollection Func_Bing_Maps_Directions_SignCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ISignCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ISignCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.SignCollection __value__retval = default(global::Bing.Maps.Directions.SignCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.SignCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ISignCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.SignCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals.get_TransitLines, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLineCollection__Bing_Maps_Directions__TransitLineCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.TransitLineCollection Func_Bing_Maps_Directions_TransitLineCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLineCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ITransitLineCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.TransitLineCollection __value__retval = default(global::Bing.Maps.Directions.TransitLineCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.TransitLineCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ITransitLineCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.TransitLineCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals.get_Warnings, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_WarningCollection__Bing_Maps_Directions__WarningCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.WarningCollection Func_Bing_Maps_Directions_WarningCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWarningCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.WarningCollection __value__retval = default(global::Bing.Maps.Directions.WarningCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.WarningCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWarningCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.WarningCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals.get_Names, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_NamesCollection__Bing_Maps_Directions__NamesCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.NamesCollection Func_Bing_Maps_Directions_NamesCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__INamesCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__INamesCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.NamesCollection __value__retval = default(global::Bing.Maps.Directions.NamesCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.NamesCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__INamesCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.NamesCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItemDetails>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.ItineraryItemDetails Func_uint__Bing_Maps_Directions_ItineraryItemDetails__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.ItineraryItemDetails __value__retval = default(global::Bing.Maps.Directions.ItineraryItemDetails);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.ItineraryItemDetails)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.ItineraryItemDetails).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItemDetails>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_ItineraryItemDetails___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_ItineraryItemDetails_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItemDetails> Func__IReadOnlyList_1_Bing_Maps_Directions_ItineraryItemDetails___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_ItineraryItemDetails_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_ItineraryItemDetails_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItemDetails> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItemDetails>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItemDetails>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItemDetails>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItemDetails>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_ItineraryItemDetails__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItemDetails value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItemDetails>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_ItineraryItemDetails__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.ItineraryItemDetails value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItemDetails>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_ItineraryItemDetails__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItemDetails value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItemDetails>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_ItineraryItemDetails__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.ItineraryItemDetails[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails * items
						items[mcgIdx] = (global::Bing.Maps.Directions.ItineraryItemDetails)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.ItineraryItemDetails).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItemDetails>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_ItineraryItemDetails__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItemDetails[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.ItineraryItemDetails>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_ItineraryItemDetails___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_ItineraryItemDetails_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItemDetails> Func__Collections_IIterator_1_Bing_Maps_Directions_ItineraryItemDetails___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_ItineraryItemDetails_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_ItineraryItemDetails_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItemDetails> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItemDetails>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItemDetails>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItemDetails>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.ItineraryItemDetails>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.ItineraryItemDetails Func_Bing_Maps_Directions_ItineraryItemDetails__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.ItineraryItemDetails __value__retval = default(global::Bing.Maps.Directions.ItineraryItemDetails);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.ItineraryItemDetails)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.ItineraryItemDetails).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.ItineraryItemDetails>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_ItineraryItemDetails__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItemDetails[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails * items
						items[mcgIdx] = (global::Bing.Maps.Directions.ItineraryItemDetails)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.ItineraryItemDetails).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItemDetails__Bing_Maps_Directions__ItineraryItemDetails * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Hint>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Hint Func_uint__Bing_Maps_Directions_Hint__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Hint __value__retval = default(global::Bing.Maps.Directions.Hint);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Hint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Hint).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Hint>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_Hint___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_Hint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Hint> Func__IReadOnlyList_1_Bing_Maps_Directions_Hint___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_Hint_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_Hint_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Hint> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Hint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Hint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Hint>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Hint>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_Hint__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Hint value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Hint>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_Hint__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.Hint value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Hint>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_Hint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Hint value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Hint>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_Hint__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.Hint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint * items
						items[mcgIdx] = (global::Bing.Maps.Directions.Hint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.Hint).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Hint>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_Hint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Hint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.Hint>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_Hint___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_Hint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Hint> Func__Collections_IIterator_1_Bing_Maps_Directions_Hint___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_Hint_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_Hint_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Hint> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Hint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Hint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Hint>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.Hint>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Hint Func_Bing_Maps_Directions_Hint__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Hint __value__retval = default(global::Bing.Maps.Directions.Hint);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Hint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Hint).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.Hint>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_Hint__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Hint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint * items
						items[mcgIdx] = (global::Bing.Maps.Directions.Hint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.Hint).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Hint__Bing_Maps_Directions__Hint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.TransitLine>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.TransitLine Func_uint__Bing_Maps_Directions_TransitLine__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.TransitLine __value__retval = default(global::Bing.Maps.Directions.TransitLine);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.TransitLine)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.TransitLine).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.TransitLine>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_TransitLine___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_TransitLine_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.TransitLine> Func__IReadOnlyList_1_Bing_Maps_Directions_TransitLine___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_TransitLine_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_TransitLine_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.TransitLine> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.TransitLine>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.TransitLine>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.TransitLine>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.TransitLine>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_TransitLine__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.TransitLine value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.TransitLine>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_TransitLine__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.TransitLine value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.TransitLine>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_TransitLine__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.TransitLine value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.TransitLine>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_TransitLine__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.TransitLine[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine * items
						items[mcgIdx] = (global::Bing.Maps.Directions.TransitLine)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.TransitLine).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.TransitLine>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_TransitLine__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.TransitLine[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.TransitLine>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_TransitLine___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_TransitLine_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.TransitLine> Func__Collections_IIterator_1_Bing_Maps_Directions_TransitLine___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_TransitLine_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_TransitLine_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.TransitLine> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.TransitLine>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.TransitLine>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.TransitLine>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.TransitLine>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.TransitLine Func_Bing_Maps_Directions_TransitLine__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.TransitLine __value__retval = default(global::Bing.Maps.Directions.TransitLine);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.TransitLine)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.TransitLine).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.TransitLine>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_TransitLine__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.TransitLine[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine * items
						items[mcgIdx] = (global::Bing.Maps.Directions.TransitLine)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.TransitLine).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_TransitLine__Bing_Maps_Directions__TransitLine * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.Directions.__IWarningPublicNonVirtuals.get_Severity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_WarningSeverity__Bing_Maps_Directions__WarningSeverity, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.WarningSeverity Func_Bing_Maps_Directions_WarningSeverity__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.WarningSeverity unsafe___value__retval;
			global::Bing.Maps.Directions.WarningSeverity __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IWarningPublicNonVirtuals.get_Type, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_WarningType__Bing_Maps_Directions__WarningType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.WarningType Func_Bing_Maps_Directions_WarningType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.WarningType unsafe___value__retval;
			global::Bing.Maps.Directions.WarningType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Warning>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Warning Func_uint__Bing_Maps_Directions_Warning__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Warning __value__retval = default(global::Bing.Maps.Directions.Warning);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Warning)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Warning).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Warning>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_Warning___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_Warning_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Warning> Func__IReadOnlyList_1_Bing_Maps_Directions_Warning___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_Warning_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_Warning_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Warning> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Warning>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Warning>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Warning>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Warning>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_Warning__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Warning value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Warning>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_Warning__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.Warning value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Warning>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_Warning__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Warning value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Warning>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_Warning__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.Warning[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning * items
						items[mcgIdx] = (global::Bing.Maps.Directions.Warning)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.Warning).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Warning>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_Warning__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Warning[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.Warning>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_Warning___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_Warning_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Warning> Func__Collections_IIterator_1_Bing_Maps_Directions_Warning___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_Warning_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_Warning_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Warning> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Warning>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Warning>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Warning>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.Warning>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Warning Func_Bing_Maps_Directions_Warning__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Warning __value__retval = default(global::Bing.Maps.Directions.Warning);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Warning)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Warning).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.Warning>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_Warning__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Warning[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning * items
						items[mcgIdx] = (global::Bing.Maps.Directions.Warning)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.Warning).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Warning__Bing_Maps_Directions__Warning * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItem>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.ItineraryItem Func_uint__Bing_Maps_Directions_ItineraryItem__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.ItineraryItem __value__retval = default(global::Bing.Maps.Directions.ItineraryItem);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.ItineraryItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.ItineraryItem).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItem>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_ItineraryItem___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_ItineraryItem_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItem> Func__IReadOnlyList_1_Bing_Maps_Directions_ItineraryItem___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_ItineraryItem_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_ItineraryItem_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItem> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItem>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItem>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.ItineraryItem>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItem>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_ItineraryItem__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItem value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItem>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_ItineraryItem__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.ItineraryItem value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItem>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_ItineraryItem__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.ItineraryItem[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem * items
						items[mcgIdx] = (global::Bing.Maps.Directions.ItineraryItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.ItineraryItem).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.ItineraryItem>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_ItineraryItem__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItem[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.ItineraryItem>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_ItineraryItem___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_ItineraryItem_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItem> Func__Collections_IIterator_1_Bing_Maps_Directions_ItineraryItem___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_ItineraryItem_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_ItineraryItem_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItem> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItem>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItem>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.ItineraryItem>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.ItineraryItem>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_ItineraryItem__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItem[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem * items
						items[mcgIdx] = (global::Bing.Maps.Directions.ItineraryItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.ItineraryItem).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.RouteLeg>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RouteLeg Func_uint__Bing_Maps_Directions_RouteLeg__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.RouteLeg __value__retval = default(global::Bing.Maps.Directions.RouteLeg);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.RouteLeg)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.RouteLeg).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.RouteLeg>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_RouteLeg___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_RouteLeg_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.RouteLeg> Func__IReadOnlyList_1_Bing_Maps_Directions_RouteLeg___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_RouteLeg_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_RouteLeg_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.RouteLeg> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.RouteLeg>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.RouteLeg>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.RouteLeg>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.RouteLeg>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_RouteLeg__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.RouteLeg value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.RouteLeg>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_RouteLeg__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.RouteLeg value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.RouteLeg>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_RouteLeg__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.RouteLeg value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.RouteLeg>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_RouteLeg__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.RouteLeg[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg * items
						items[mcgIdx] = (global::Bing.Maps.Directions.RouteLeg)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.RouteLeg).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.RouteLeg>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_RouteLeg__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.RouteLeg[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.RouteLeg>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_RouteLeg___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_RouteLeg_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.RouteLeg> Func__Collections_IIterator_1_Bing_Maps_Directions_RouteLeg___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_RouteLeg_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_RouteLeg_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.RouteLeg> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.RouteLeg>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.RouteLeg>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.RouteLeg>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.RouteLeg>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RouteLeg Func_Bing_Maps_Directions_RouteLeg__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.RouteLeg __value__retval = default(global::Bing.Maps.Directions.RouteLeg);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.RouteLeg)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.RouteLeg).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.RouteLeg>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_RouteLeg__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.RouteLeg[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg * items
						items[mcgIdx] = (global::Bing.Maps.Directions.RouteLeg)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.RouteLeg).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_RouteLeg__Bing_Maps_Directions__RouteLeg * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Route>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Route Func_uint__Bing_Maps_Directions_Route__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Route __value__retval = default(global::Bing.Maps.Directions.Route);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Route)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Route).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Route>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_Route___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_Route_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Route> Func__IReadOnlyList_1_Bing_Maps_Directions_Route___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_Route_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_Route_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Route> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Route>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Route>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Route>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Route>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_Route__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Route value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Route>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_Route__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.Route value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Route>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Route__Bing_Maps_Directions__Route * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_Route__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.Route[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route * items
						items[mcgIdx] = (global::Bing.Maps.Directions.Route)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.Route).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Route>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Route__Bing_Maps_Directions__Route * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_Route__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Route[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.Route>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_Route___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_Route_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Route> Func__Collections_IIterator_1_Bing_Maps_Directions_Route___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_Route_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_Route_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Route> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Route>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Route>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Route>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.Route>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Route__Bing_Maps_Directions__Route * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_Route__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Route[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route * items
						items[mcgIdx] = (global::Bing.Maps.Directions.Route)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.Route).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Route__Bing_Maps_Directions__Route * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Bing.Maps.Directions.RouteResponse>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Bing_Maps_Directions_RouteResponse___Windows_Foundation__IAsyncOperation_A_Bing_Maps_Directions_RouteResponse_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Bing_Maps_Directions_RouteResponse___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Directions.RouteResponse> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Directions_RouteResponse_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Directions_RouteResponse_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Bing_Maps_Directions_RouteResponse_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Bing.Maps.Directions.RouteResponse>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Bing.Maps.Directions.__IWaypointPublicNonVirtuals.get_Type, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_WaypointType__Bing_Maps_Directions__WaypointType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.WaypointType Func_Bing_Maps_Directions_WaypointType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.WaypointType unsafe___value__retval;
			global::Bing.Maps.Directions.WaypointType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IWaypointPublicNonVirtuals.get_DisambiguationResult, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguationCollection__Bing_Maps_Directions__LocationDisambiguationCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.LocationDisambiguationCollection Func_Bing_Maps_Directions_LocationDisambiguationCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ILocationDisambiguationCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.LocationDisambiguationCollection __value__retval = default(global::Bing.Maps.Directions.LocationDisambiguationCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.LocationDisambiguationCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationCollectionProtectedNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.LocationDisambiguationCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals.get_Waypoint, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Waypoint Func_Bing_Maps_Directions_Waypoint__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Waypoint __value__retval = default(global::Bing.Maps.Directions.Waypoint);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Waypoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Waypoint).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.LocationDisambiguation>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.LocationDisambiguation Func_uint__Bing_Maps_Directions_LocationDisambiguation__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.LocationDisambiguation __value__retval = default(global::Bing.Maps.Directions.LocationDisambiguation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.LocationDisambiguation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.LocationDisambiguation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.LocationDisambiguation>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_LocationDisambiguation___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_LocationDisambiguation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.LocationDisambiguation> Func__IReadOnlyList_1_Bing_Maps_Directions_LocationDisambiguation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_LocationDisambiguation_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_LocationDisambiguation_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.LocationDisambiguation> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.LocationDisambiguation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.LocationDisambiguation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.LocationDisambiguation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.LocationDisambiguation>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_LocationDisambiguation__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.LocationDisambiguation value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.LocationDisambiguation>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_LocationDisambiguation__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.LocationDisambiguation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.LocationDisambiguation>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_LocationDisambiguation__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.LocationDisambiguation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.LocationDisambiguation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_LocationDisambiguation__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.LocationDisambiguation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation * items
						items[mcgIdx] = (global::Bing.Maps.Directions.LocationDisambiguation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.LocationDisambiguation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.LocationDisambiguation>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_LocationDisambiguation__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.LocationDisambiguation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.LocationDisambiguation>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_LocationDisambiguation___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_LocationDisambiguation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.LocationDisambiguation> Func__Collections_IIterator_1_Bing_Maps_Directions_LocationDisambiguation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_LocationDisambiguation_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_LocationDisambiguation_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.LocationDisambiguation> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.LocationDisambiguation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.LocationDisambiguation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.LocationDisambiguation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.LocationDisambiguation>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.LocationDisambiguation Func_Bing_Maps_Directions_LocationDisambiguation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.LocationDisambiguation __value__retval = default(global::Bing.Maps.Directions.LocationDisambiguation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.LocationDisambiguation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.LocationDisambiguation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.LocationDisambiguation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_LocationDisambiguation__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.LocationDisambiguation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation * items
						items[mcgIdx] = (global::Bing.Maps.Directions.LocationDisambiguation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.LocationDisambiguation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_LocationDisambiguation__Bing_Maps_Directions__LocationDisambiguation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Waypoint>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.Waypoint Func_uint__Bing_Maps_Directions_Waypoint__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.Waypoint __value__retval = default(global::Bing.Maps.Directions.Waypoint);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.Waypoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Directions.Waypoint).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Waypoint>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Bing_Maps_Directions_Waypoint___Windows_Foundation_Collections__IVectorView_A_Bing_Maps_Directions_Waypoint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Waypoint> Func__IReadOnlyList_1_Bing_Maps_Directions_Waypoint___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_Waypoint_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Bing_Maps_Directions_Waypoint_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Waypoint> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Waypoint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Waypoint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Bing.Maps.Directions.Waypoint>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Waypoint>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions_Waypoint__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Waypoint value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Waypoint>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__Bing_Maps_Directions_Waypoint__(
					global::System.__ComObject __this, 
					uint index, 
					global::Bing.Maps.Directions.Waypoint value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Waypoint>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_Directions_Waypoint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Waypoint value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Waypoint>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions_Waypoint__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.Waypoint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint * items
						items[mcgIdx] = (global::Bing.Maps.Directions.Waypoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.Waypoint).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Bing.Maps.Directions.Waypoint>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_Bing_Maps_Directions_Waypoint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Waypoint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.Waypoint>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions_Waypoint___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions_Waypoint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Waypoint> Func__Collections_IIterator_1_Bing_Maps_Directions_Waypoint___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_Waypoint_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions_Waypoint_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Waypoint> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Waypoint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Waypoint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.Waypoint>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.Waypoint>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions_Waypoint__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.Waypoint[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint * items
						items[mcgIdx] = (global::Bing.Maps.Directions.Waypoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle, 
											typeof(global::Bing.Maps.Directions.Waypoint).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_Waypoint__Bing_Maps_Directions__Waypoint * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals Func_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals Func_uint__Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__ILocationDisambiguationPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ILocationDisambiguationPublicNonVirtuals__Bing_Maps_Directions____ILocationDisambiguationPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__IWaypointPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___IWaypointPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___IWaypointPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___IWaypointPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IWaypointPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IWaypointPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IWaypointPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals Func_Bing_Maps_Directions___IWaypointPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IWaypointPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___IWaypointPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IWaypointPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals Func_uint__Bing_Maps_Directions___IWaypointPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IWaypointPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___IWaypointPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IWaypointPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___IWaypointPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IWaypointPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWaypointPublicNonVirtuals__Bing_Maps_Directions____IWaypointPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Search___IGeocodePointPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Search___IGeocodePointPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Search___IGeocodePointPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Search___IGeocodePointPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Search___IGeocodePointPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals Func_Bing_Maps_Search___IGeocodePointPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals __value__retval = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Search___IGeocodePointPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals Func_uint__Bing_Maps_Search___IGeocodePointPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals __value__retval = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Search___IGeocodePointPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Search.__IGeocodePointPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Search___IGeocodePointPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Search.__IGeocodePointPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodePointPublicNonVirtuals__Bing_Maps_Search____IGeocodePointPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals Func_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals __value__retval = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals Func_uint__Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals __value__retval = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Search.__IGeocodeLocationPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Search___IGeocodeLocationPublicNonVirtuals__Bing_Maps_Search____IGeocodeLocationPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals Func_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals Func_uint__Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IItineraryItemDetailsPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemDetailsPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemDetailsPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__IHintPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___IHintPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___IHintPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IHintPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___IHintPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IHintPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IHintPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IHintPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IHintPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IHintPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IHintPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IHintPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IHintPublicNonVirtuals Func_Bing_Maps_Directions___IHintPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IHintPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___IHintPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IHintPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IHintPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IHintPublicNonVirtuals Func_uint__Bing_Maps_Directions___IHintPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IHintPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___IHintPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IHintPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IHintPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___IHintPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__IHintPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IHintPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IHintPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IHintPublicNonVirtuals__Bing_Maps_Directions____IHintPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___ITransitLinePublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___ITransitLinePublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___ITransitLinePublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___ITransitLinePublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___ITransitLinePublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals Func_Bing_Maps_Directions___ITransitLinePublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___ITransitLinePublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals Func_uint__Bing_Maps_Directions___ITransitLinePublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___ITransitLinePublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__ITransitLinePublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___ITransitLinePublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__ITransitLinePublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___ITransitLinePublicNonVirtuals__Bing_Maps_Directions____ITransitLinePublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__IWarningPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___IWarningPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___IWarningPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWarningPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___IWarningPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IWarningPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IWarningPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWarningPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWarningPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWarningPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IWarningPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IWarningPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IWarningPublicNonVirtuals Func_Bing_Maps_Directions___IWarningPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IWarningPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___IWarningPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IWarningPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IWarningPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IWarningPublicNonVirtuals Func_uint__Bing_Maps_Directions___IWarningPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IWarningPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___IWarningPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IWarningPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IWarningPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___IWarningPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__IWarningPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IWarningPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IWarningPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IWarningPublicNonVirtuals__Bing_Maps_Directions____IWarningPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals Func_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals Func_uint__Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IItineraryItemPublicNonVirtuals__Bing_Maps_Directions____IItineraryItemPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___IRouteLegPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___IRouteLegPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___IRouteLegPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IRouteLegPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IRouteLegPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals Func_Bing_Maps_Directions___IRouteLegPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___IRouteLegPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals Func_uint__Bing_Maps_Directions___IRouteLegPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___IRouteLegPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IRouteLegPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___IRouteLegPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IRouteLegPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRouteLegPublicNonVirtuals__Bing_Maps_Directions____IRouteLegPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Directions.__IRoutePublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Directions___IRoutePublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Directions___IRoutePublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRoutePublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Directions___IRoutePublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IRoutePublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Directions___IRoutePublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRoutePublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRoutePublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRoutePublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Directions.__IRoutePublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IRoutePublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IRoutePublicNonVirtuals Func_Bing_Maps_Directions___IRoutePublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Directions.__IRoutePublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Directions___IRoutePublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IRoutePublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IRoutePublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.__IRoutePublicNonVirtuals Func_uint__Bing_Maps_Directions___IRoutePublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals __value__retval = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IRoutePublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Directions___IRoutePublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.__IRoutePublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Directions.__IRoutePublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Directions___IRoutePublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Directions.__IRoutePublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Directions.__IRoutePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Directions.__IRoutePublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Directions___IRoutePublicNonVirtuals__Bing_Maps_Directions____IRoutePublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.__IMapLayerStatics.get_PositionProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyProperty__Windows_UI_Xaml__DependencyProperty *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyProperty Func_UI_Xaml_DependencyProperty__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyProperty__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyProperty__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyProperty __value__retval = default(global::Windows.UI.Xaml.DependencyProperty);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyProperty)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyProperty).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyProperty).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapLayerStatics.GetPosition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Location Func_UI_Xaml_DependencyObject__Bing_Maps_Location__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject dependencyObject, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_dependencyObject = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Location __value__retval = default(global::Bing.Maps.Location);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_dependencyObject = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									dependencyObject, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_dependencyObject, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Location)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle, 
									typeof(global::Bing.Maps.Location).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_dependencyObject)));
				global::System.GC.KeepAlive(dependencyObject);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.__IMapLayerStatics.SetPosition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Location__Bing_Maps__Location *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyObject__Bing_Maps_Location__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject dependencyObject, 
					global::Bing.Maps.Location location, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_dependencyObject = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl** unsafe_location = default(global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_dependencyObject = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									dependencyObject, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_location = (global::Bing.Maps.__ILocationPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									location, 
									typeof(global::Bing.Maps.__ILocationPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_dependencyObject, 
									unsafe_location
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_dependencyObject)));
				global::System.GC.KeepAlive(dependencyObject);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
				global::System.GC.KeepAlive(location);
			}
		}

		// Signature, Bing.Maps.__IMapLayerStatics.GetPositionAnchor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point Func_UI_Xaml_DependencyObject___Point__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject dependencyObject, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_dependencyObject = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.Foundation.Point unsafe___value__retval;
			global::Windows.Foundation.Point __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_dependencyObject = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									dependencyObject, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_dependencyObject, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_dependencyObject)));
				global::System.GC.KeepAlive(dependencyObject);
			}
		}

		// Signature, Bing.Maps.__IMapLayerStatics.SetPositionAnchor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyObject___Point__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject dependencyObject, 
					global::Windows.Foundation.Point positionAnchor, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_dependencyObject = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_dependencyObject = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									dependencyObject, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_dependencyObject, 
									positionAnchor
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_dependencyObject)));
				global::System.GC.KeepAlive(dependencyObject);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ItemClickEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ItemClickEventArgs__Windows_UI_Xaml_Controls__ItemClickEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_ItemClickEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.ItemClickEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IItemClickEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.IItemClickEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.IItemClickEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.IItemClickEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase.add_ItemClick, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ItemClickEventHandler__Windows_UI_Xaml_Controls__ItemClickEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_ItemClickEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ItemClickEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.ItemClickEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget55>(global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.DragItemsStartingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DragItemsStartingEventArgs__Windows_UI_Xaml_Controls__DragItemsStartingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_DragItemsStartingEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.DragItemsStartingEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase.add_DragItemsStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_DragItemsStartingEventHandler__Windows_UI_Xaml_Controls__DragItemsStartingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_DragItemsStartingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget56>(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls__ListViewBase *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs__Windows_UI_Xaml_Controls__ContainerContentChangingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ContainerContentChangingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ListViewBase sender, 
					global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IListViewBase).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase2.add_ContainerContentChanging, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ContainerContentChangingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget57>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls__ListViewBase *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs__Windows_UI_Xaml_Controls__DragItemsCompletedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_DragItemsCompletedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ListViewBase sender, 
					global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IListViewBase).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase4.add_DragItemsCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_DragItemsCompletedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget58>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls__ListViewBase *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs__Windows_UI_Xaml_Controls__ChoosingItemContainerEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingItemContainerEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ListViewBase sender, 
					global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IListViewBase).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase4.add_ChoosingItemContainer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingItemContainerEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget59>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls__ListViewBase *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs__Windows_UI_Xaml_Controls__ChoosingGroupHeaderContainerEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ListViewBase sender, 
					global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IListViewBase).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase4.add_ChoosingGroupHeaderContainer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget60>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXamlType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlType__Windows_UI_Xaml_Markup__IXamlType *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlType Func_Type__UI_Xaml_Markup_IXamlType__(
					global::System.__ComObject __this, 
					global::System.Type type, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_type;
			global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl** unsafe_xamlType__retval = default(global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlType xamlType__retval = default(global::Windows.UI.Xaml.Markup.IXamlType);
			int unsafe___return__;
			try
			{
				// Marshalling
				global::System.Runtime.InteropServices.HSTRING unsafe_type__HSTRING__Name;
				int unsafe_type__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									type, 
									out unsafe_type__HSTRING__Name, 
									out unsafe_type__int__Kind
								);
				unsafe_type.Name = unsafe_type__HSTRING__Name;
				unsafe_type.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_type__int__Kind;
				unsafe_xamlType__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_type, 
									&(unsafe_xamlType__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				xamlType__retval = (global::Windows.UI.Xaml.Markup.IXamlType)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_xamlType__retval), 
									typeof(global::Windows.UI.Xaml.Markup.IXamlType).TypeHandle
								);
				// Return
				return xamlType__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_xamlType__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXamlType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlType__Windows_UI_Xaml_Markup__IXamlType *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlType Func_string__UI_Xaml_Markup_IXamlType__(
					global::System.__ComObject __this, 
					string fullName, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_fullName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl** unsafe_xamlType__retval = default(global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlType xamlType__retval = default(global::Windows.UI.Xaml.Markup.IXamlType);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_fullName = fullName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_fullName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_fullName, fullName, &(hstring_header_fullName), &(unsafe_fullName));
					unsafe_xamlType__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_fullName, 
										&(unsafe_xamlType__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					xamlType__retval = (global::Windows.UI.Xaml.Markup.IXamlType)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_xamlType__retval), 
										typeof(global::Windows.UI.Xaml.Markup.IXamlType).TypeHandle
									);
				}
				// Return
				return xamlType__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_xamlType__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXmlnsDefinitions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.XmlnsDefinition[] Func_rg_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType* unsafe_definitions__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*);
			global::Windows.UI.Xaml.Markup.XmlnsDefinition[] definitions__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition[]);
			uint unsafe_definitions__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_definitions__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_definitions__retval_mcgLength), 
									&(unsafe_definitions__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_definitions__retval == null)
					definitions__retval = null;
				else
				{
					definitions__retval = new global::Windows.UI.Xaml.Markup.XmlnsDefinition[unsafe_definitions__retval_mcgLength];
					if (definitions__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_definitions__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition definitions__retval
							global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
												ref unsafe_definitions__retval[mcgIdx], 
												out definitions__retval[mcgIdx]
											);
						}
				}
				// Return
				return definitions__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_definitions__retval);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_BaseType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlType__Windows_UI_Xaml_Markup__IXamlType *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlType Func_UI_Xaml_Markup_IXamlType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlType value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Markup.IXamlType)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Markup.IXamlType).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_ContentProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlMember__Windows_UI_Xaml_Markup__IXamlMember *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlMember Func_UI_Xaml_Markup_IXamlMember__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlMember value__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Markup.IXamlMember)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Markup.IXamlMember).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.CreateFromString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_string__object__(
					global::System.__ComObject __this, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object instance__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					unsafe_instance__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										&(unsafe_instance__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					instance__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance__retval));
				}
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_instance__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.GetMember, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlMember__Windows_UI_Xaml_Markup__IXamlMember *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlMember Func_string__UI_Xaml_Markup_IXamlMember__(
					global::System.__ComObject __this, 
					string name, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl** unsafe_xamlMember__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlMember xamlMember__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_name = name)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
					unsafe_xamlMember__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_name, 
										&(unsafe_xamlMember__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					xamlMember__retval = (global::Windows.UI.Xaml.Markup.IXamlMember)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_xamlMember__retval), 
										typeof(global::Windows.UI.Xaml.Markup.IXamlMember).TypeHandle
									);
				}
				// Return
				return xamlMember__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_xamlMember__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToMap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__object__object__(
					global::System.__ComObject __this, 
					object instance, 
					object key, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_instance = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(instance);
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_instance, 
									unsafe_key, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_instance)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationView.get_CoreWindow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindow__Windows_UI_Core__CoreWindow *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreWindow Func_UI_Core_CoreWindow__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ICoreWindow__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**);
			global::Windows.UI.Core.CoreWindow value__retval = default(global::Windows.UI.Core.CoreWindow);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Core.CoreWindow)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Core.ICoreWindow).TypeHandle, 
									typeof(global::Windows.UI.Core.CoreWindow).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Core.CoreApplicationView,Windows.ApplicationModel.Activation.IActivatedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Activation_IActivatedEventArgs__Windows_ApplicationModel_Activation__IActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView sender, 
					global::Windows.ApplicationModel.Activation.IActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_sender = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				unsafe_args = (global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationView.add_Activated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Activation_IActivatedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget61>(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Core.ICoreWindow.get_Dispatcher, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreDispatcher__Windows_UI_Core__CoreDispatcher *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreDispatcher Func_UI_Core_CoreDispatcher__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ICoreDispatcher__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Core.ICoreDispatcher__Impl.Vtbl**);
			global::Windows.UI.Core.CoreDispatcher value__retval = default(global::Windows.UI.Core.CoreDispatcher);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Core.CoreDispatcher)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Core.ICoreDispatcher).TypeHandle, 
									typeof(global::Windows.UI.Core.CoreDispatcher).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Core.ICoreDispatcher.RunAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreDispatcherPriority__Windows_UI_Core__CoreDispatcherPriority, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Core_DispatchedHandler__Windows_UI_Core__DispatchedHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_intUI_Core_DispatchedHandler___IAsyncAction__(
					global::System.__ComObject __this, 
					int priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl** unsafe_agileCallback = default(global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_agileCallback = (global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									agileCallback, 
									typeof(global::Windows.UI.Core.DispatchedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget62>(global::Windows.UI.Core.DispatchedHandler__Impl.Invoke)
								);
				unsafe_asyncAction__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									priority, 
									unsafe_agileCallback, 
									&(unsafe_asyncAction__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncAction__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_agileCallback)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication3.CreateNewView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_IFrameworkViewSource__Windows_ApplicationModel_Core__IFrameworkViewSource *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_ApplicationModel_Core_IFrameworkViewSource__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl** unsafe_viewSource = default(global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_view__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView view__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_viewSource = (global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									viewSource, 
									typeof(global::Windows.ApplicationModel.Core.IFrameworkViewSource).TypeHandle
								);
				unsafe_view__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_viewSource, 
									&(unsafe_view__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				view__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_view__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return view__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_viewSource)));
				global::System.GC.KeepAlive(viewSource);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_view__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication2.CreateNewView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_view__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView view__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_view__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_view__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				view__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_view__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return view__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_view__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication.get_Views, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_ApplicationModel_Core_CoreApplicationView___Windows_Foundation_Collections__IVectorView_A_Windows_ApplicationModel_Core_CoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> Func__IReadOnlyList_1_ApplicationModel_Core_CoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication.CreateNewView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_string__string__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					string runtimeType, 
					string entryPoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_runtimeType = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_entryPoint = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_view__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView view__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_runtimeType = runtimeType)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_runtimeType;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_runtimeType, runtimeType, &(hstring_header_runtimeType), &(unsafe_runtimeType));
					fixed (char* pBuffer_entryPoint = entryPoint)
					{
						global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_entryPoint;
						global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_entryPoint, entryPoint, &(hstring_header_entryPoint), &(unsafe_entryPoint));
						unsafe_view__retval = null;
						// Call to native method
						unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
											__this, 
											__typeHnd, 
											__targetIndex, 
											unsafe_runtimeType, 
											unsafe_entryPoint, 
											&(unsafe_view__retval)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						view__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_view__retval), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				}
				// Return
				return view__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_view__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_uint__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_CoreApplicationView__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_CoreApplicationView__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.CoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.CoreApplicationView>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_CoreApplicationView___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView> Func__Collections_IIterator_1_ApplicationModel_Core_CoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.CoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_CoreApplicationView__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.add_Suspending, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_SuspendingEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_ApplicationModel_SuspendingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IPropertySet__Windows_Foundation_Collections__IPropertySet *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IPropertySet Func__Collections_IPropertySet__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IPropertySet__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.Collections.IPropertySet__Impl.Vtbl**);
			global::Windows.Foundation.Collections.IPropertySet value__retval = default(global::Windows.Foundation.Collections.IPropertySet);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.Collections.IPropertySet)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.Collections.IPropertySet).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.Run, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_IFrameworkViewSource__Windows_ApplicationModel_Core__IFrameworkViewSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Core_IFrameworkViewSource__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl** unsafe_viewSource = default(global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_viewSource = (global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									viewSource, 
									typeof(global::Windows.ApplicationModel.Core.IFrameworkViewSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_viewSource
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_viewSource)));
				global::System.GC.KeepAlive(viewSource);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.RunWithActivationFactories, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IGetActivationFactory__Windows_Foundation__IGetActivationFactory *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IGetActivationFactory__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IGetActivationFactory activationFactoryCallback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl** unsafe_activationFactoryCallback = default(global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_activationFactoryCallback = (global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									activationFactoryCallback, 
									typeof(global::Windows.Foundation.IGetActivationFactory).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_activationFactoryCallback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_activationFactoryCallback)));
				global::System.GC.KeepAlive(activationFactoryCallback);
			}
		}

		// Signature, Windows.Foundation.Collections.MapChangedEventHandler<string,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__object___Windows_Foundation_Collections__IObservableMap_A_string_j_object_V_ *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IMapChangedEventArgs_1_string___Windows_Foundation_Collections__IMapChangedEventArgs_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Collections_IObservableMap_2_string__object__Collections_IMapChangedEventArgs_1_string___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.IObservableMap<string, object> sender, 
					global::Windows.Foundation.Collections.IMapChangedEventArgs<string> @event, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl** unsafe_sender = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl** unsafe_event = default(global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, object>).TypeHandle
								);
				unsafe_event = (global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									@event, 
									typeof(global::Windows.Foundation.Collections.IMapChangedEventArgs<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_event
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_event)));
				global::System.GC.KeepAlive(@event);
			}
		}

		// Signature, System.EventHandler<Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs__Windows_ApplicationModel_Core__UnhandledErrorDetectedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__ApplicationModel_Core_UnhandledErrorDetectedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationUnhandledError.add_UnhandledErrorDetected, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_ApplicationModel_Core_UnhandledErrorDetectedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget63>(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView Func_ApplicationModel_Core_ICoreApplicationView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView2___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView2 Func_ApplicationModel_Core_ICoreApplicationView2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView2 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView2__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView3___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView3 Func_ApplicationModel_Core_ICoreApplicationView3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView3 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView3__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView Func_uint__ApplicationModel_Core_ICoreApplicationView__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView2 Func_uint__ApplicationModel_Core_ICoreApplicationView2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView2 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView3 Func_uint__ApplicationModel_Core_ICoreApplicationView3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView3 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__ITransitRouteDataPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___ITransitRouteDataPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___ITransitRouteDataPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___ITransitRouteDataPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___ITransitRouteDataPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___ITransitRouteDataPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__ITransitRouteDataPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals Func_Bing_Maps___ITransitRouteDataPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals __value__retval = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__ITransitRouteDataPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___ITransitRouteDataPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ITransitRouteDataPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals Func_uint__Bing_Maps___ITransitRouteDataPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals __value__retval = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ITransitRouteDataPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___ITransitRouteDataPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ITransitRouteDataPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___ITransitRouteDataPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ITransitRouteDataPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ITransitRouteDataPublicNonVirtuals__Bing_Maps____ITransitRouteDataPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.__ILandmarkPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps___ILandmarkPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps___ILandmarkPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILandmarkPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps___ILandmarkPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___ILandmarkPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps___ILandmarkPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILandmarkPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILandmarkPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILandmarkPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.__ILandmarkPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__ILandmarkPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__ILandmarkPublicNonVirtuals Func_Bing_Maps___ILandmarkPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ILandmarkPublicNonVirtuals __value__retval = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__ILandmarkPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.__ILandmarkPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps___ILandmarkPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__ILandmarkPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__ILandmarkPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILandmarkPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.__ILandmarkPublicNonVirtuals Func_uint__Bing_Maps___ILandmarkPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__ILandmarkPublicNonVirtuals __value__retval = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.__ILandmarkPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILandmarkPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps___ILandmarkPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.__ILandmarkPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.__ILandmarkPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps___ILandmarkPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.__ILandmarkPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.__ILandmarkPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.__ILandmarkPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps___ILandmarkPublicNonVirtuals__Bing_Maps____ILandmarkPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.VenueMaps.__IVenueFloorDataSourcePublicNonVirtuals.get_Items, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableVector_1_object___Windows_Foundation_Collections__IObservableVector_A_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IObservableVector<object> Func__Collections_IObservableVector_1_object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableVector_A_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IObservableVector_A_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IObservableVector<object> __value__retval = default(global::Windows.Foundation.Collections.IObservableVector<object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IObservableVector<object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IObservableVector<object>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemDataSourceFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Directions_ItineraryItem__Bing_Maps_Directions__ItineraryItem *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_Directions_ItineraryItem__bool__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Directions.ItineraryItem item, 
					bool isWaypoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl** unsafe_item = default(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**);
			sbyte unsafe_isWaypoint;
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									item, 
									typeof(global::Bing.Maps.Directions.__IItineraryItemPublicNonVirtuals).TypeHandle
								);
				unsafe_isWaypoint = (isWaypoint ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									unsafe_isWaypoint, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.GC.KeepAlive(item);
			}
		}

		// Signature, Bing.Maps.Directions.__IItineraryItemDataSourceFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_bool__bool__bool__IntPtr__(
					global::System.__ComObject __this, 
					bool isWaypoint, 
					bool isTransitType, 
					bool isWalkType, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_isWaypoint;
			sbyte unsafe_isTransitType;
			sbyte unsafe_isWalkType;
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			// Marshalling
			unsafe_isWaypoint = (isWaypoint ? ((sbyte)1) : ((sbyte)0));
			unsafe_isTransitType = (isTransitType ? ((sbyte)1) : ((sbyte)0));
			unsafe_isWalkType = (isWalkType ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_isWaypoint, 
								unsafe_isTransitType, 
								unsafe_isWalkType, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.Directions.__IDirectionsContainerSelectorPublicNonVirtuals.get_SelectableStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Style Func_UI_Xaml_Style__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			global::Windows.UI.Xaml.Style __value__retval = default(global::Windows.UI.Xaml.Style);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Style)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Style).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Bing.Maps.Directions.__IDirectionsContainerSelectorPublicNonVirtuals.set_SelectableStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Style__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Style style, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_style = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_style = (global::Windows.UI.Xaml.IStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									style, 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_style
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_style)));
				global::System.GC.KeepAlive(style);
			}
		}

		// Signature, Bing.Maps.__IMapAnimationDurationStatics.get_Default, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.TimeSpan Func_TimeSpan__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.TimeSpan unsafe___value__retval;
			global::System.TimeSpan __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Bing.Maps.__IMapMultiPointPublicNonVirtuals.set_Locations, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_LocationCollection__Bing_Maps__LocationCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Bing_Maps_LocationCollection__(
					global::System.__ComObject __this, 
					global::Bing.Maps.LocationCollection newLocations, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_newLocations = default(global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_newLocations = (global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newLocations, 
									typeof(global::Bing.Maps.__ILocationCollectionProtectedNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_newLocations
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newLocations)));
				global::System.GC.KeepAlive(newLocations);
			}
		}

		// Signature, Bing.Maps.__IMapAutomationPeerFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Map__Bing_Maps__Map *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_MapShapeLayerCollection__Bing_Maps__MapShapeLayerCollection *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_UIElement___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_UIElement_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_Map__Bing_Maps_MapShapeLayerCollection___IList_1_UI_Xaml_UIElement___IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Map mapControl, 
					global::Bing.Maps.MapShapeLayerCollection mapShapeLayerCollection, 
					global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement> staticElements, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IMapPublicNonVirtuals__Impl.Vtbl** unsafe_mapControl = default(global::Bing.Maps.__IMapPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.__IMapShapeLayerCollectionProtectedNonVirtuals__Impl.Vtbl** unsafe_mapShapeLayerCollection = default(global::Bing.Maps.__IMapShapeLayerCollectionProtectedNonVirtuals__Impl.Vtbl**);
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe_staticElements = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_mapControl = (global::Bing.Maps.__IMapPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									mapControl, 
									typeof(global::Bing.Maps.__IMapPublicNonVirtuals).TypeHandle
								);
				unsafe_mapShapeLayerCollection = (global::Bing.Maps.__IMapShapeLayerCollectionProtectedNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									mapShapeLayerCollection, 
									typeof(global::Bing.Maps.__IMapShapeLayerCollectionProtectedNonVirtuals).TypeHandle
								);
				unsafe_staticElements = (global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									staticElements, 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_mapControl, 
									unsafe_mapShapeLayerCollection, 
									unsafe_staticElements, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_mapControl)));
				global::System.GC.KeepAlive(mapControl);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_mapShapeLayerCollection)));
				global::System.GC.KeepAlive(mapShapeLayerCollection);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_staticElements)));
				global::System.GC.KeepAlive(staticElements);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer Func_UI_Xaml_Automation_Peers_IAutomationPeer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerProtected___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected Func_UI_Xaml_Automation_Peers_IAutomationPeerProtected__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerProtected__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 Func_UI_Xaml_Automation_Peers_IAutomationPeer2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 Func_UI_Xaml_Automation_Peers_IAutomationPeer3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer4___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 Func_UI_Xaml_Automation_Peers_IAutomationPeer4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer4__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals Func_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals __value__retval = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals Func_uint__Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals __value__retval = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.Traffic.__ITrafficIncidentPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_Traffic___ITrafficIncidentPublicNonVirtuals__Bing_Maps_Traffic____ITrafficIncidentPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals Func_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals Func_uint__Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__INearbyVenuePublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___INearbyVenuePublicNonVirtuals__Bing_Maps_VenueMaps____INearbyVenuePublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals Func_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals Func_uint__Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueCountryPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueCountryPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals___Windows_Foundation_Collections__IIterator_A_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals> Func__Collections_IIterator_1_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals Func_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals Func_uint__Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl** unsafe___value__retval = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**);
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals __value__retval = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl** unsafe_value = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl*** unsafe_items = default(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals * items
						items[mcgIdx] = (global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Bing.Maps.VenueMaps.__IVenueByCountryPublicNonVirtuals).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Bing_Maps_VenueMaps___IVenueByCountryPublicNonVirtuals__Bing_Maps_VenueMaps____IVenueByCountryPublicNonVirtuals * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Bing.Maps.__IPushpinAutomationPeerFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Bing_Maps_Pushpin__Bing_Maps__Pushpin *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Bing_Maps_Pushpin__IntPtr__(
					global::System.__ComObject __this, 
					global::Bing.Maps.Pushpin pushpin, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.__IPushpinPublicNonVirtuals__Impl.Vtbl** unsafe_pushpin = default(global::Bing.Maps.__IPushpinPublicNonVirtuals__Impl.Vtbl**);
			global::System.IntPtr unsafe___value__retval;
			global::System.IntPtr __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pushpin = (global::Bing.Maps.__IPushpinPublicNonVirtuals__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									pushpin, 
									typeof(global::Bing.Maps.__IPushpinPublicNonVirtuals).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pushpin, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pushpin)));
				global::System.GC.KeepAlive(pushpin);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Markup.XmlnsDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Markup_XmlnsDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Markup_XmlnsDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Markup.XmlnsDefinition> Func__Collections_IIterator_1_UI_Xaml_Markup_XmlnsDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Markup_XmlnsDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Markup_XmlnsDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Markup.XmlnsDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Markup.XmlnsDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Markup.XmlnsDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Markup.XmlnsDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Markup.XmlnsDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.XmlnsDefinition Func_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			global::Windows.UI.Xaml.Markup.XmlnsDefinition __value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Markup.XmlnsDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Markup_XmlnsDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType* unsafe_items = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition items
						global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
											ref unsafe_items[mcgIdx], 
											out items[mcgIdx]
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Markup.XmlnsDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.XmlnsDefinition Func_uint__UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			global::Windows.UI.Xaml.Markup.XmlnsDefinition __value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Markup.XmlnsDefinition>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Markup_XmlnsDefinition___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Markup_XmlnsDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Markup.XmlnsDefinition> Func__IReadOnlyList_1_UI_Xaml_Markup_XmlnsDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Markup_XmlnsDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Markup_XmlnsDefinition_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Markup.XmlnsDefinition> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Markup.XmlnsDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Markup.XmlnsDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Markup.XmlnsDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Markup.XmlnsDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Markup_XmlnsDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType unsafe_value = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Markup.XmlnsDefinition>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType unsafe_value = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			int unsafe___return__;
			// Marshalling
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Markup.XmlnsDefinition>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType unsafe_value = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			int unsafe___return__;
			// Marshalling
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__SafeToUnsafe(
								ref value, 
								out unsafe_value
							);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Markup.XmlnsDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Markup_XmlnsDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType* unsafe_items = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition items
						global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
											ref unsafe_items[mcgIdx], 
											out items[mcgIdx]
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Markup.XmlnsDefinition>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType* unsafe_items = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*);
			uint unsafe_items_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items == null)
					unsafe_items = null;
				else
				{
					if (items != null)
						unsafe_items_mcgLength = (uint)items.Length;
					if (items != null)
						unsafe_items = (global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType))));
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition items
						global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__SafeToUnsafe(
											ref items[mcgIdx], 
											out unsafe_items[mcgIdx]
										);
					}
				}
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerProtected__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerProtected__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerProtected__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer4__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer4__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer4__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Nullable<System.AttributeTargets>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_AttributeTargets__Windows_Foundation_Metadata__AttributeTargets, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.AttributeTargets Func_AttributeTargets__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.AttributeTargets unsafe___value__retval;
			global::System.AttributeTargets __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Size>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe___value__retval;
			global::Windows.Foundation.Size __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.CornerRadius>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_CornerRadius__Windows_UI_Xaml__CornerRadius, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.CornerRadius Func_UI_Xaml_CornerRadius__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.CornerRadius unsafe___value__retval;
			global::Windows.UI.Xaml.CornerRadius __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Duration>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Duration__Windows_UI_Xaml__Duration, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Duration Func_UI_Xaml_Duration__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Duration unsafe___value__retval;
			global::Windows.UI.Xaml.Duration __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DurationType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_DurationType__Windows_UI_Xaml__DurationType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DurationType Func_UI_Xaml_DurationType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DurationType unsafe___value__retval;
			global::Windows.UI.Xaml.DurationType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.GridUnitType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridUnitType__Windows_UI_Xaml__GridUnitType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.GridUnitType Func_UI_Xaml_GridUnitType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.GridUnitType unsafe___value__retval;
			global::Windows.UI.Xaml.GridUnitType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.Primitives.GeneratorPosition>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Controls_Primitives_GeneratorPosition__Windows_UI_Xaml_Controls_Primitives__GeneratorPosition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition Func_UI_Xaml_Controls_Primitives_GeneratorPosition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition unsafe___value__retval;
			global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Matrix>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Matrix__Windows_UI_Xaml_Media__Matrix, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Matrix Func_UI_Xaml_Media_Matrix__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Matrix unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Matrix __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Animation.KeyTime>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_KeyTime__Windows_UI_Xaml_Media_Animation__KeyTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.KeyTime Func_UI_Xaml_Media_Animation_KeyTime__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.KeyTime unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Animation.KeyTime __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Animation.RepeatBehavior>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_RepeatBehavior__Windows_UI_Xaml_Media_Animation__RepeatBehavior, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.RepeatBehavior Func_UI_Xaml_Media_Animation_RepeatBehavior__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.RepeatBehavior unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Animation.RepeatBehavior __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Animation.RepeatBehaviorType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_RepeatBehaviorType__Windows_UI_Xaml_Media_Animation__RepeatBehaviorType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType Func_UI_Xaml_Media_Animation_RepeatBehaviorType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Media3D.Matrix3D>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Media3D_Matrix3D__Windows_UI_Xaml_Media_Media3D__Matrix3D, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Media3D.Matrix3D Func_UI_Xaml_Media_Media3D_Matrix3D__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Media3D.Matrix3D unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Media3D.Matrix3D __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Vector2>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2 Func_Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector2 unsafe___value__retval;
			global::System.Numerics.Vector2 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Vector3>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector3__Windows_Foundation_Numerics__Vector3, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector3 Func_Numerics_Vector3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector3 unsafe___value__retval;
			global::System.Numerics.Vector3 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Vector4>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector4 Func_Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector4 unsafe___value__retval;
			global::System.Numerics.Vector4 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Matrix3x2>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Matrix3x2 Func_Numerics_Matrix3x2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Matrix3x2 unsafe___value__retval;
			global::System.Numerics.Matrix3x2 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Matrix4x4>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix4x4__Windows_Foundation_Numerics__Matrix4x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Matrix4x4 Func_Numerics_Matrix4x4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Matrix4x4 unsafe___value__retval;
			global::System.Numerics.Matrix4x4 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Plane>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Plane__Windows_Foundation_Numerics__Plane, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Plane Func_Numerics_Plane__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Plane unsafe___value__retval;
			global::System.Numerics.Plane __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Quaternion>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Quaternion__Windows_Foundation_Numerics__Quaternion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Quaternion Func_Numerics_Quaternion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Quaternion unsafe___value__retval;
			global::System.Numerics.Quaternion __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Bing.Maps.Directions.RoutePathOutputOption>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_RoutePathOutputOption__Bing_Maps_Directions__RoutePathOutputOption, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RoutePathOutputOption Func_Bing_Maps_Directions_RoutePathOutputOption__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.RoutePathOutputOption unsafe___value__retval;
			global::Bing.Maps.Directions.RoutePathOutputOption __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Bing.Maps.Directions.RouteResponseCode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Bing_Maps_Directions_RouteResponseCode__Bing_Maps_Directions__RouteResponseCode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Bing.Maps.Directions.RouteResponseCode Func_Bing_Maps_Directions_RouteResponseCode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Bing.Maps.Directions.RouteResponseCode unsafe___value__retval;
			global::Bing.Maps.Directions.RouteResponseCode __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Foundation.Point>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point[] Func_rg__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point* unsafe___value__retval = default(global::Windows.Foundation.Point*);
			global::Windows.Foundation.Point[] __value__retval = default(global::Windows.Foundation.Point[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Foundation.Point[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Foundation.Size>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Size__Windows_Foundation__Size *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size[] Func_rg__Size__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size* unsafe___value__retval = default(global::Windows.Foundation.Size*);
			global::Windows.Foundation.Size[] __value__retval = default(global::Windows.Foundation.Size[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Foundation.Size[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Foundation.Rect>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect[] Func_rg__Rect__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect* unsafe___value__retval = default(global::Windows.Foundation.Rect*);
			global::Windows.Foundation.Rect[] __value__retval = default(global::Windows.Foundation.Rect[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Foundation.Rect[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.RoutedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.RoutedEventHandler Func_UI_Xaml_RoutedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.RoutedEventHandler __value__retval = default(global::Windows.UI.Xaml.RoutedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.RoutedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget5>(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.TextChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_TextChangedEventHandler__Windows_UI_Xaml_Controls__TextChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.TextChangedEventHandler Func_UI_Xaml_Controls_TextChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.TextChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.TextChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.TextChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.TextChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget27>(global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.SelectionChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_SelectionChangedEventHandler__Windows_UI_Xaml_Controls__SelectionChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler Func_UI_Xaml_Controls_SelectionChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget38>(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.TappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_TappedEventHandler__Windows_UI_Xaml_Input__TappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.TappedEventHandler Func_UI_Xaml_Input_TappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.TappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.TappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.TappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.TappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget8>(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.ItemClickEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ItemClickEventHandler__Windows_UI_Xaml_Controls__ItemClickEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ItemClickEventHandler Func_UI_Xaml_Controls_ItemClickEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ItemClickEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.ItemClickEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ItemClickEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.ItemClickEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget55>(global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Devices.Enumeration.Pnp.IPnpObjectStatics.FindAllAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectType__Windows_Devices_Enumeration_Pnp__PnpObjectType, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_string___Windows_Foundation_Collections__IIterable_A_string_V_ *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> Func_int_IEnumerable_1_string___string___IAsyncOperation_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					int type, 
					global::System.Collections.Generic.IEnumerable<string> requestedProperties, 
					string aqsFilter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl** unsafe_requestedProperties = default(global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_aqsFilter = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_asyncOp__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> asyncOp__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_requestedProperties = (global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									requestedProperties, 
									typeof(global::System.Collections.Generic.IEnumerable<string>).TypeHandle
								);
				fixed (char* pBuffer_aqsFilter = aqsFilter)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_aqsFilter;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_aqsFilter, aqsFilter, &(hstring_header_aqsFilter), &(unsafe_aqsFilter));
					unsafe_asyncOp__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										type, 
										unsafe_requestedProperties, 
										unsafe_aqsFilter, 
										&(unsafe_asyncOp__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					asyncOp__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_asyncOp__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle
									);
				}
				// Return
				return asyncOp__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_requestedProperties)));
				global::System.GC.KeepAlive(requestedProperties);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncOp__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObject Func_uint__Devices_Enumeration_Pnp_PnpObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObject __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Devices_Enumeration_Pnp_PnpObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe_value = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Devices_Enumeration_Pnp_PnpObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl*** unsafe_items = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						items[mcgIdx] = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
											typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Devices.Enumeration.Pnp.PnpObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Devices_Enumeration_Pnp_PnpObject___Windows_Foundation_Collections__IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject> Func__Collections_IIterator_1_Devices_Enumeration_Pnp_PnpObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Devices.Enumeration.Pnp.PnpObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObject Func_Devices_Enumeration_Pnp_PnpObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObject __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Devices.Enumeration.Pnp.PnpObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Devices_Enumeration_Pnp_PnpObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl*** unsafe_items = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						items[mcgIdx] = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
											typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Devices_Enumeration_Pnp_PnpObjectCollection___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget64>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectCollection__Windows_Devices_Enumeration_Pnp__PnpObjectCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection Func_Devices_Enumeration_Pnp_PnpObjectCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Devices.Enumeration.Pnp.IPnpObject.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__object___Windows_Foundation_Collections__IMapView_A_string_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<string, object> Func__IReadOnlyDictionary_2_string__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_System_Object_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<string, object> value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<string, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyDictionary<string, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, object>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> Func_EventHandler_1_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget63>(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.ApplicationModel.SuspendingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_SuspendingEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> Func_EventHandler_1_ApplicationModel_SuspendingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.PointerEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.PointerEventHandler Func_UI_Xaml_Input_PointerEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.PointerEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.PointerEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.PointerEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget7>(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.GetTileUriEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_GetTileUriEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_GetTileUriEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.GetTileUriEventArgs> Func_EventHandler_1_Bing_Maps_GetTileUriEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_GetTileUriEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_GetTileUriEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.GetTileUriEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.GetTileUriEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.GetTileUriEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.GetTileUriEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget40>(global::System.EventHandler_A_Bing_Maps_GetTileUriEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.TileDownloadCompletedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_TileDownloadCompletedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.TileDownloadCompletedEventArgs> Func_EventHandler_1_Bing_Maps_TileDownloadCompletedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.TileDownloadCompletedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.TileDownloadCompletedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.TileDownloadCompletedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.TileDownloadCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget41>(global::System.EventHandler_A_Bing_Maps_TileDownloadCompletedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.Directions.DirectionsInputEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_Directions_DirectionsInputEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.Directions.DirectionsInputEventArgs> Func_EventHandler_1_Bing_Maps_Directions_DirectionsInputEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.Directions.DirectionsInputEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.Directions.DirectionsInputEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.Directions.DirectionsInputEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.Directions.DirectionsInputEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget39>(global::System.EventHandler_A_Bing_Maps_Directions_DirectionsInputEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.VenueMaps.VenueEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_VenueMaps_VenueEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEventArgs> Func_EventHandler_1_Bing_Maps_VenueMaps_VenueEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget42>(global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs> Func_EventHandler_1_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveVenueChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget43>(global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveVenueChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.VenueMaps.VenueEntityEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_VenueMaps_VenueEntityEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEntityEventArgs> Func_EventHandler_1_Bing_Maps_VenueMaps_VenueEntityEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEntityEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEntityEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEntityEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.VenueMaps.VenueEntityEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget44>(global::System.EventHandler_A_Bing_Maps_VenueMaps_VenueEntityEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.Directions.DirectionsEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_Directions_DirectionsEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.Directions.DirectionsEventArgs> Func_EventHandler_1_Bing_Maps_Directions_DirectionsEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.Directions.DirectionsEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.Directions.DirectionsEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.Directions.DirectionsEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.Directions.DirectionsEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget46>(global::System.EventHandler_A_Bing_Maps_Directions_DirectionsEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.ViewChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_ViewChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_ViewChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.ViewChangedEventArgs> Func_EventHandler_1_Bing_Maps_ViewChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_ViewChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_ViewChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.ViewChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.ViewChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.ViewChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.ViewChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget47>(global::System.EventHandler_A_Bing_Maps_ViewChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.ViewChangeStartedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_ViewChangeStartedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.ViewChangeStartedEventArgs> Func_EventHandler_1_Bing_Maps_ViewChangeStartedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.ViewChangeStartedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.ViewChangeStartedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.ViewChangeStartedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.ViewChangeStartedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget48>(global::System.EventHandler_A_Bing_Maps_ViewChangeStartedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.ViewChangeEndedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_ViewChangeEndedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.ViewChangeEndedEventArgs> Func_EventHandler_1_Bing_Maps_ViewChangeEndedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.ViewChangeEndedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.ViewChangeEndedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.ViewChangeEndedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.ViewChangeEndedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget49>(global::System.EventHandler_A_Bing_Maps_ViewChangeEndedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.TargetViewChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_TargetViewChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.TargetViewChangedEventArgs> Func_EventHandler_1_Bing_Maps_TargetViewChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.TargetViewChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.TargetViewChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.TargetViewChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.TargetViewChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget50>(global::System.EventHandler_A_Bing_Maps_TargetViewChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.CopyrightChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_CopyrightChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.CopyrightChangedEventArgs> Func_EventHandler_1_Bing_Maps_CopyrightChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.CopyrightChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.CopyrightChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.CopyrightChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.CopyrightChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget51>(global::System.EventHandler_A_Bing_Maps_CopyrightChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.MapStyleChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_MapStyleChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.MapStyleChangedEventArgs> Func_EventHandler_1_Bing_Maps_MapStyleChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.MapStyleChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.MapStyleChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.MapStyleChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.MapStyleChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget52>(global::System.EventHandler_A_Bing_Maps_MapStyleChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.TileServersAvailabilityChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_TileServersAvailabilityChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.TileServersAvailabilityChangedEventArgs> Func_EventHandler_1_Bing_Maps_TileServersAvailabilityChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.TileServersAvailabilityChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.TileServersAvailabilityChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.TileServersAvailabilityChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.TileServersAvailabilityChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget53>(global::System.EventHandler_A_Bing_Maps_TileServersAvailabilityChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.LandmarkTappedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_LandmarkTappedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.LandmarkTappedEventArgs> Func_EventHandler_1_Bing_Maps_LandmarkTappedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.LandmarkTappedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.LandmarkTappedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.LandmarkTappedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.LandmarkTappedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget54>(global::System.EventHandler_A_Bing_Maps_LandmarkTappedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.DoubleTappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_DoubleTappedEventHandler__Windows_UI_Xaml_Input__DoubleTappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.DoubleTappedEventHandler Func_UI_Xaml_Input_DoubleTappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.DoubleTappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget9>(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.KeyEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.KeyEventHandler Func_UI_Xaml_Input_KeyEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.KeyEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.KeyEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.KeyEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget4>(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation Func_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Nullable<System.EventHandler<Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs___Windows_Foundation__EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs> Func_EventHandler_1_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Bing.Maps.VenueMaps.ActiveFloorChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget45>(global::System.EventHandler_A_Bing_Maps_VenueMaps_ActiveFloorChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<object, object>[] Func_rg__KeyValuePair_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<object, object>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<object, object>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<object, object>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<object, object>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.FoundationContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Foundation_FoundationContract__Windows_Foundation__FoundationContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.FoundationContract Func__FoundationContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.FoundationContract unsafe___value__retval;
			global::Windows.Foundation.FoundationContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.UniversalApiContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Foundation_UniversalApiContract__Windows_Foundation__UniversalApiContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.UniversalApiContract Func__UniversalApiContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.UniversalApiContract unsafe___value__retval;
			global::Windows.Foundation.UniversalApiContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.SizeChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SizeChangedEventHandler__Windows_UI_Xaml__SizeChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SizeChangedEventHandler Func_UI_Xaml_SizeChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.SizeChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.SizeChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.SizeChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.SizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget19>(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.DataContextChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml_DataContextChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget20>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget21>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DragEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DragEventHandler Func_UI_Xaml_DragEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.DragEventHandler __value__retval = default(global::Windows.UI.Xaml.DragEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DragEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget6>(global::Windows.UI.Xaml.DragEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.HoldingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_HoldingEventHandler__Windows_UI_Xaml_Input__HoldingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.HoldingEventHandler Func_UI_Xaml_Input_HoldingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.HoldingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.HoldingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.HoldingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.HoldingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget10>(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationCompletedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedEventHandler__Windows_UI_Xaml_Input__ManipulationCompletedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler Func_UI_Xaml_Input_ManipulationCompletedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget16>(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationDeltaEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaEventHandler__Windows_UI_Xaml_Input__ManipulationDeltaEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler Func_UI_Xaml_Input_ManipulationDeltaEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget15>(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__Windows_UI_Xaml_Input__ManipulationInertiaStartingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler Func_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget13>(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationStartedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartedEventHandler__Windows_UI_Xaml_Input__ManipulationStartedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler Func_UI_Xaml_Input_ManipulationStartedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget14>(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationStartingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartingEventHandler__Windows_UI_Xaml_Input__ManipulationStartingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler Func_UI_Xaml_Input_ManipulationStartingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget12>(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.RightTappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_RightTappedEventHandler__Windows_UI_Xaml_Input__RightTappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.RightTappedEventHandler Func_UI_Xaml_Input_RightTappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.RightTappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.RightTappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.RightTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget11>(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DragStartingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget17>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DropCompletedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DropCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget18>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.SuspendingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SuspendingEventHandler__Windows_UI_Xaml__SuspendingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SuspendingEventHandler Func_UI_Xaml_SuspendingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.SuspendingEventHandler __value__retval = default(global::Windows.UI.Xaml.SuspendingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.SuspendingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.SuspendingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.UnhandledExceptionEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_UnhandledExceptionEventHandler__Windows_UI_Xaml__UnhandledExceptionEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UnhandledExceptionEventHandler Func_UI_Xaml_UnhandledExceptionEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler __value__retval = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.UnhandledExceptionEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.UnhandledExceptionEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget1>(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DependencyPropertyChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventHandler__Windows_UI_Xaml__DependencyPropertyChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler Func_UI_Xaml_DependencyPropertyChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget22>(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.ExceptionRoutedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ExceptionRoutedEventHandler__Windows_UI_Xaml__ExceptionRoutedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ExceptionRoutedEventHandler Func_UI_Xaml_ExceptionRoutedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.ExceptionRoutedEventHandler __value__retval = default(global::Windows.UI.Xaml.ExceptionRoutedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ExceptionRoutedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ExceptionRoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget26>(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ContextMenuOpeningEventHandler__Windows_UI_Xaml_Controls__ContextMenuOpeningEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler Func_UI_Xaml_Controls_ContextMenuOpeningEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget28>(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.TextControlPasteEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_TextControlPasteEventHandler__Windows_UI_Xaml_Controls__TextControlPasteEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler Func_UI_Xaml_Controls_TextControlPasteEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget29>(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget33>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextBoxTextChangingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget34>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget31>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionEndedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget32>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionStartedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget30>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object> Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget36>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView,Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__UI_Xaml_Controls_SplitViewPaneClosingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget35>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.Collections.VectorChangedEventHandler<System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_Collections_VectorChangedEventHandler_1_object___Windows_Foundation_Collections__VectorChangedEventHandler_A_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.VectorChangedEventHandler<object> Func__Collections_VectorChangedEventHandler_1_object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.VectorChangedEventHandler_A_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.VectorChangedEventHandler_A_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.VectorChangedEventHandler<object> __value__retval = default(global::Windows.Foundation.Collections.VectorChangedEventHandler<object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.VectorChangedEventHandler<object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.VectorChangedEventHandler<object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget37>(global::Windows.Foundation.Collections.VectorChangedEventHandler_A_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigatedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatedEventHandler__Windows_UI_Xaml_Navigation__NavigatedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigatedEventHandler Func_UI_Xaml_Navigation_NavigatedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigatedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget23>(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventHandler__Windows_UI_Xaml_Navigation__NavigatingCancelEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler Func_UI_Xaml_Navigation_NavigatingCancelEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget24>(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigationFailedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventHandler__Windows_UI_Xaml_Navigation__NavigationFailedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler Func_UI_Xaml_Navigation_NavigationFailedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget25>(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationStoppedEventHandler__Windows_UI_Xaml_Navigation__NavigationStoppedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler Func_UI_Xaml_Navigation_NavigationStoppedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget23>(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.DragItemsStartingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_DragItemsStartingEventHandler__Windows_UI_Xaml_Controls__DragItemsStartingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler Func_UI_Xaml_Controls_DragItemsStartingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget56>(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ContainerContentChangingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget57>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget60>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingItemContainerEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget59>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_DragItemsCompletedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget58>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Globalization.ICalendar.EraAsString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_int__string__(
					global::System.__ComObject __this, 
					int idealLength, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_result__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string result__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_result__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									idealLength, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_result__retval);
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_result__retval.handle);
			}
		}

		// Signature, Windows.Foundation.Collections.MapChangedEventHandler<string,string>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__string___Windows_Foundation_Collections__IObservableMap_A_string_j_string_V_ *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IMapChangedEventArgs_1_string___Windows_Foundation_Collections__IMapChangedEventArgs_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Collections_IObservableMap_2_string__string__Collections_IMapChangedEventArgs_1_string___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.IObservableMap<string, string> sender, 
					global::Windows.Foundation.Collections.IMapChangedEventArgs<string> @event, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl** unsafe_sender = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl** unsafe_event = default(global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, string>).TypeHandle
								);
				unsafe_event = (global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									@event, 
									typeof(global::Windows.Foundation.Collections.IMapChangedEventArgs<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_event
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_event)));
				global::System.GC.KeepAlive(@event);
			}
		}

		// Signature, Windows.Foundation.Collections.IObservableMap<string,string>.add_MapChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_Collections_MapChangedEventHandler_2_string__string___Windows_Foundation_Collections__MapChangedEventHandler_A_string_j_string_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__Collections_MapChangedEventHandler_2_string__string__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> vhnd, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl** unsafe_vhnd = default(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_vhnd = (global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									vhnd, 
									typeof(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget65>(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_vhnd, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_vhnd)));
			}
		}

		// Signature, Windows.System.Threading.WorkItemHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncAction operation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_operation = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_operation = (global::Windows.Foundation.IAsyncAction__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									operation, 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_operation
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation)));
				global::System.GC.KeepAlive(operation);
			}
		}

		// Signature, Windows.System.Threading.TimerElapsedHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Threading_ThreadPoolTimer__Windows_System_Threading__ThreadPoolTimer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Threading_ThreadPoolTimer__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.ThreadPoolTimer timer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl** unsafe_timer = default(global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_timer = (global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									timer, 
									typeof(global::Windows.System.Threading.IThreadPoolTimer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_timer
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_timer)));
				global::System.GC.KeepAlive(timer);
			}
		}

		// Signature, Windows.System.Threading.IThreadPoolTimerStatics.CreateTimer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_TimerElapsedHandler__Windows_System_Threading__TimerElapsedHandler *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Threading_ThreadPoolTimer__Windows_System_Threading__ThreadPoolTimer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.ThreadPoolTimer Func_Threading_TimerElapsedHandler__TimeSpan__Threading_ThreadPoolTimer__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.TimerElapsedHandler handler, 
					global::System.TimeSpan delay, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**);
			global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl** unsafe_timer__retval = default(global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**);
			global::Windows.System.Threading.ThreadPoolTimer timer__retval = default(global::Windows.System.Threading.ThreadPoolTimer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.System.Threading.TimerElapsedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget66>(global::Windows.System.Threading.TimerElapsedHandler__Impl.Invoke)
								);
				unsafe_timer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									delay, 
									&(unsafe_timer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				timer__retval = (global::Windows.System.Threading.ThreadPoolTimer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_timer__retval), 
									typeof(global::Windows.System.Threading.IThreadPoolTimer).TypeHandle, 
									typeof(global::Windows.System.Threading.ThreadPoolTimer).TypeHandle
								);
				// Return
				return timer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_timer__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceMap.GetValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceContext__Windows_ApplicationModel_Resources_Core__ResourceContext *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceCandidate__Windows_ApplicationModel_Resources_Core__ResourceCandidate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceCandidate Func_string__ApplicationModel_Resources_Core_ResourceContext__ApplicationModel_Resources_Core_ResourceCandidate__(
					global::System.__ComObject __this, 
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_resource = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl** unsafe_context = default(global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceCandidate value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceCandidate);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_resource = resource)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_resource;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_resource, resource, &(hstring_header_resource), &(unsafe_resource));
					unsafe_context = (global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										context, 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext).TypeHandle
									);
					unsafe_value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resource, 
										unsafe_context, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceCandidate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_value__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.ResourceCandidate).TypeHandle
									);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_context)));
				global::System.GC.KeepAlive(context);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceMap.GetSubtree, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceMap__Windows_ApplicationModel_Resources_Core__ResourceMap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceMap Func_string__ApplicationModel_Resources_Core_ResourceMap__(
					global::System.__ComObject __this, 
					string reference, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_reference = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl** unsafe_map__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceMap map__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceMap);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_reference = reference)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_reference;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_reference, reference, &(hstring_header_reference), &(unsafe_reference));
					unsafe_map__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_reference, 
										&(unsafe_map__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					map__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceMap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_map__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.ResourceMap).TypeHandle
									);
				}
				// Return
				return map__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_map__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.Lookup, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_NamedResource__Windows_ApplicationModel_Resources_Core__NamedResource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.NamedResource Func_string__ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					string key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_key = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.NamedResource __value__retval = default(global::Windows.ApplicationModel.Resources.Core.NamedResource);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_key = key)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_key;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_key, key, &(hstring_header_key), &(unsafe_key));
					unsafe___value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_key, 
										&(unsafe___value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					__value__retval = (global::Windows.ApplicationModel.Resources.Core.NamedResource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe___value__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.NamedResource).TypeHandle
									);
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.HasKey, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__bool__(
					global::System.__ComObject __this, 
					string key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_key = default(global::System.Runtime.InteropServices.HSTRING);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_key = key)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_key;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_key, key, &(hstring_header_key), &(unsafe_key));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.Split, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IMapView_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IMapView_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__IReadOnlyDictionary_2_string__ApplicationModel_Resources_Core_NamedResource___out__IReadOnlyDictionary_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					out global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> first, 
					out global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> second, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe_first = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe_second = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_first = null;
				unsafe_second = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_first), 
									&(unsafe_second)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				second = (global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_second), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								);
				first = (global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_first), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_first)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_second)));
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_NamedResource__Windows_ApplicationModel_Resources_Core__NamedResource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.NamedResource Func_ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.NamedResource __value__retval = default(global::Windows.ApplicationModel.Resources.Core.NamedResource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Resources.Core.NamedResource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.NamedResource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> Func__Collections_IIterator_1__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> Func__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContextStatics2.GetForViewIndependentUse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceContext__Windows_ApplicationModel_Resources_Core__ResourceContext *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceContext Func_ApplicationModel_Resources_Core_ResourceContext__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl** unsafe_loader__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceContext loader__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceContext);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_loader__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_loader__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				loader__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceContext)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_loader__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceContext).TypeHandle
								);
				// Return
				return loader__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_loader__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.get_QualifierValues, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__string___Windows_Foundation_Collections__IObservableMap_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IObservableMap<string, string> Func__Collections_IObservableMap_2_string__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IObservableMap<string, string> value__retval = default(global::Windows.Foundation.Collections.IObservableMap<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.Collections.IObservableMap<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, string>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.get_Languages, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_string___Windows_Foundation_Collections__IVectorView_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<string> Func__IReadOnlyList_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<string> value__retval = default(global::System.Collections.Generic.IReadOnlyList<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<string>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.put_Languages, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_string___Windows_Foundation_Collections__IVectorView_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IReadOnlyList_1_string___(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IReadOnlyList<string> languages, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl** unsafe_languages = default(global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_languages = (global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									languages, 
									typeof(global::System.Collections.Generic.IReadOnlyList<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_languages
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_languages)));
				global::System.GC.KeepAlive(languages);
			}
		}

		// Signature, System.EventHandler<Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs__Windows_Foundation_Diagnostics__TracingStatusChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object___Diagnostics_TracingStatusChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Imaging.IBitmapSource.SetSource, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStream__Windows_Storage_Streams__IRandomAccessStream *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Storage_Streams_IRandomAccessStream__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IRandomAccessStream streamSource, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl** unsafe_streamSource = default(global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_streamSource = (global::Windows.Storage.Streams.IRandomAccessStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									streamSource, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStream).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_streamSource
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_streamSource)));
				global::System.GC.KeepAlive(streamSource);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Imaging.IBitmapImageFactory.CreateInstanceWithUriSource, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Uri__IntPtr__(
					global::System.__ComObject __this, 
					global::System.Uri uriSource, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uriSource = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (uriSource != null)
					unsafe_uriSource = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uriSource);
				else
					unsafe_uriSource = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_uriSource, 
									&(unsafe_instance__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				instance__retval = unsafe_instance__retval;
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uriSource)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Imaging_DownloadProgressEventArgs__Windows_UI_Xaml_Media_Imaging__DownloadProgressEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Media_Imaging_DownloadProgressEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Media.Imaging.IDownloadProgressEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Media.Imaging.IDownloadProgressEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Media.Imaging.IDownloadProgressEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Media.Imaging.IDownloadProgressEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Imaging.IBitmapImage.add_DownloadProgress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Media_Imaging_DownloadProgressEventHandler__Windows_UI_Xaml_Media_Imaging__DownloadProgressEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Media_Imaging_DownloadProgressEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget67>(global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.IDisposable>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IDisposable Func_IDisposable__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IDisposable__Impl.Vtbl** unsafe___value__retval = default(global::System.IDisposable__Impl.Vtbl**);
			global::System.IDisposable __value__retval = default(global::System.IDisposable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.IDisposable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.IDisposable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.IDisposable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_IDisposable__Windows_Foundation__IClosable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_IDisposable__uint__(
					global::System.__ComObject __this, 
					global::System.IDisposable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.IDisposable__Impl.Vtbl*** unsafe_items = default(global::System.IDisposable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.IDisposable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.IDisposable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable * items
						items[mcgIdx] = (global::System.IDisposable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.IDisposable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Graphics.Display.IDisplayInformationStatics.get_AutoRotationPreferences, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_DisplayOrientations__Windows_Graphics_Display__DisplayOrientations, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Display.DisplayOrientations Func_Graphics_Display_DisplayOrientations__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Display.DisplayOrientations unsafe_value__retval;
			global::Windows.Graphics.Display.DisplayOrientations value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Graphics.Display.IDisplayInformationStatics.put_AutoRotationPreferences, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_DisplayOrientations__Windows_Graphics_Display__DisplayOrientations, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Graphics_Display_DisplayOrientations__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.Display.DisplayOrientations value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Graphics.Display.IDisplayInformation.get_ResolutionScale, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_ResolutionScale__Windows_Graphics_Display__ResolutionScale, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Display.ResolutionScale Func_Graphics_Display_ResolutionScale__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Display.ResolutionScale unsafe_value__retval;
			global::Windows.Graphics.Display.ResolutionScale value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Graphics.Display.IDisplayInformation.get_LogicalDpi, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float Func_float__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			float unsafe_value__retval;
			float value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Graphics.Display.IDisplayInformation3.get_DiagonalSizeInInches, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_double___Windows_Foundation__IReference_A_double_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Nullable<double> Func_Nullable_1_double___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_double_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Nullable_A_double_V___Impl.Vtbl**);
			global::System.Nullable<double> value__retval = default(global::System.Nullable<double>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = (double)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe_value__retval), 
															typeof(global::Windows.Foundation.IReference<double>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<Double>"
									);
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Media.Capture.ICameraCaptureUI.CaptureFileAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Media_Capture_CameraCaptureUIMode__Windows_Media_Capture__CameraCaptureUIMode, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Storage_StorageFile___Windows_Foundation__IAsyncOperation_A_Windows_Storage_StorageFile_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> Func_int_IAsyncOperation_1_Storage_StorageFile___(
					global::System.__ComObject __this, 
					int mode, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Storage_StorageFile_V___Impl.Vtbl** unsafe_asyncInfo__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Storage_StorageFile_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> asyncInfo__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									mode, 
									&(unsafe_asyncInfo__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				asyncInfo__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncInfo__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>).TypeHandle
								);
				// Return
				return asyncInfo__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo__retval)));
			}
		}

		// Signature, Windows.UI.Popups.IMessageDialog.ShowAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_UI_Popups_IUICommand___Windows_Foundation__IAsyncOperation_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand> Func__IAsyncOperation_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe_messageDialogAsyncOperation__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand> messageDialogAsyncOperation__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_messageDialogAsyncOperation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_messageDialogAsyncOperation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				messageDialogAsyncOperation__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_messageDialogAsyncOperation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand>).TypeHandle
								);
				// Return
				return messageDialogAsyncOperation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_messageDialogAsyncOperation__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.UI.Popups.IUICommand>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_UI_Popups_IUICommand___Windows_Foundation__IAsyncOperation_A_Windows_UI_Popups_IUICommand_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_UI_Popups_IUICommand___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.UI.Popups.IUICommand>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_UI_Popups_IUICommand___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget68>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.UI.Popups.IUICommand>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Popups.IUICommand Func_UI_Popups_IUICommand__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl**);
			global::Windows.UI.Popups.IUICommand __value__retval = default(global::Windows.UI.Popups.IUICommand);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Popups.IUICommand)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Popups.IUICommand).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.System.Threading.IThreadPoolStatics.RunAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_WorkItemHandler__Windows_System_Threading__WorkItemHandler *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemPriority__Windows_System_Threading__WorkItemPriority, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemOptions__Windows_System_Threading__WorkItemOptions, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Threading_WorkItemHandler__intThreading_WorkItemOptions___IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.WorkItemHandler handler, 
					int priority, 
					global::Windows.System.Threading.WorkItemOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction operation__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.System.Threading.WorkItemHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget69>(global::Windows.System.Threading.WorkItemHandler__Impl.Invoke)
								);
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									priority, 
									options, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceManagerStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceManager__Windows_ApplicationModel_Resources_Core__ResourceManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceManager Func_ApplicationModel_Resources_Core_ResourceManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceManager value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManager).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceManager).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceManager.get_MainResourceMap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceMap__Windows_ApplicationModel_Resources_Core__ResourceMap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceMap Func_ApplicationModel_Resources_Core_ResourceMap__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceMap value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceMap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceMap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceMap).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.CreateFromByteArray, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_rg_byte__Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value_mcgLength = 0;
			byte* unsafe_value;
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer buffer__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value != null)
					unsafe_value_mcgLength = (uint)value.Length;
				fixed (byte* pinned_value = global::McgInterop.McgCoreHelpers.GetArrayForCompat(value))
				{
					unsafe_value = (byte*)pinned_value;
					unsafe_buffer__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value_mcgLength, 
										unsafe_value, 
										&(unsafe_buffer__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					buffer__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_buffer__retval), 
										typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
									);
				}
				// Return
				return buffer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.CopyToByteArray, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Storage_Streams_IBuffer__out_rg_byte__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					out byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			byte* unsafe_value = default(byte*);
			uint unsafe_value_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_value_mcgLength), 
									&(unsafe_value)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value == null)
					value = null;
				else
				{
					value = new byte[unsafe_value_mcgLength];
					if (value != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_value_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char value
							value[mcgIdx] = unsafe_value[mcgIdx];
						}
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_value);
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.EncodeToBase64String, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_Storage_Streams_IBuffer__string__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.ConvertStringToBinary, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Security_Cryptography_BinaryStringEncoding__Windows_Security_Cryptography__BinaryStringEncoding, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_string__intStorage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					string value, 
					int encoding, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer buffer__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					unsafe_buffer__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										encoding, 
										&(unsafe_buffer__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					buffer__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_buffer__retval), 
										typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
									);
				}
				// Return
				return buffer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Core.IHashAlgorithmProviderStatics.OpenAlgorithm, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Core_HashAlgorithmProvider__Windows_Security_Cryptography_Core__HashAlgorithmProvider *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Core.HashAlgorithmProvider Func_string__Security_Cryptography_Core_HashAlgorithmProvider__(
					global::System.__ComObject __this, 
					string algorithm, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_algorithm = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider__Impl.Vtbl** unsafe_provider__retval = default(global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Core.HashAlgorithmProvider provider__retval = default(global::Windows.Security.Cryptography.Core.HashAlgorithmProvider);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_algorithm = algorithm)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_algorithm;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_algorithm, algorithm, &(hstring_header_algorithm), &(unsafe_algorithm));
					unsafe_provider__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_algorithm, 
										&(unsafe_provider__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					provider__retval = (global::Windows.Security.Cryptography.Core.HashAlgorithmProvider)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_provider__retval), 
										typeof(global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider).TypeHandle, 
										typeof(global::Windows.Security.Cryptography.Core.HashAlgorithmProvider).TypeHandle
									);
				}
				// Return
				return provider__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_provider__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Core.IHashAlgorithmProvider.HashData, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_Storage_Streams_IBuffer__Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer data, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_data = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer value__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_data = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									data, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_data, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_data)));
				global::System.GC.KeepAlive(data);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackageStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Package__Windows_ApplicationModel__Package *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Package Func_ApplicationModel_Package__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.IPackage__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.IPackage__Impl.Vtbl**);
			global::Windows.ApplicationModel.Package value__retval = default(global::Windows.ApplicationModel.Package);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Package)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.IPackage).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Package).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackage.get_Id, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_PackageId__Windows_ApplicationModel__PackageId *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.PackageId Func_ApplicationModel_PackageId__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.IPackageId__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.IPackageId__Impl.Vtbl**);
			global::Windows.ApplicationModel.PackageId value__retval = default(global::Windows.ApplicationModel.PackageId);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.PackageId)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.IPackageId).TypeHandle, 
									typeof(global::Windows.ApplicationModel.PackageId).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackage.get_InstalledLocation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_StorageFolder__Windows_Storage__StorageFolder *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.StorageFolder Func_Storage_StorageFolder__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IStorageFolder__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IStorageFolder__Impl.Vtbl**);
			global::Windows.Storage.StorageFolder value__retval = default(global::Windows.Storage.StorageFolder);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.StorageFolder)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IStorageFolder).TypeHandle, 
									typeof(global::Windows.Storage.StorageFolder).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackageId.get_Version, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_ApplicationModel_PackageVersion__Windows_ApplicationModel__PackageVersion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.PackageVersion Func_ApplicationModel_PackageVersion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.PackageVersion unsafe_value__retval;
			global::Windows.ApplicationModel.PackageVersion value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCreation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintGuid__ulong__string__ulong__(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_operationName = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_operationName = operationName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_operationName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_operationName, operationName, &(hstring_header_operationName), &(unsafe_operationName));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									traceLevel, 
									source, 
									platformId, 
									operationId, 
									unsafe_operationName, 
									relatedContext
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCompletion, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintGuid__ulong__int(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					int status, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceSynchronousWorkCompletion, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySynchronousWork__Windows_Foundation_Diagnostics__CausalitySynchronousWork, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintint(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					int work, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								traceLevel, 
								source, 
								work
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.add_TracingStatusChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs___Windows_Foundation__EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1__Diagnostics_TracingStatusChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_cookie__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget70>(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_cookie__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				cookie__retval = unsafe_cookie__retval;
				// Return
				return cookie__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IWindowStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Window__Windows_UI_Xaml__Window *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Window Func_UI_Xaml_Window__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IWindow__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IWindow__Impl.Vtbl**);
			global::Windows.UI.Xaml.Window value__retval = default(global::Windows.UI.Xaml.Window);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Window)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IWindow).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Window).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowActivatedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_WindowActivatedEventArgs__Windows_UI_Core__WindowActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_WindowActivatedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.WindowActivatedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IWindowActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_Activated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowActivatedEventHandler__Windows_UI_Xaml__WindowActivatedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowActivatedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowActivatedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowActivatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget71>(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowClosedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindowEventArgs__Windows_UI_Core__CoreWindowEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_CoreWindowEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.CoreWindowEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.ICoreWindowEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_Closed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowClosedEventHandler__Windows_UI_Xaml__WindowClosedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowClosedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowClosedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowClosedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget72>(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowSizeChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_WindowSizeChangedEventArgs__Windows_UI_Core__WindowSizeChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_WindowSizeChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.WindowSizeChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IWindowSizeChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_SizeChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowSizeChangedEventHandler__Windows_UI_Xaml__WindowSizeChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowSizeChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowSizeChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowSizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget73>(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowVisibilityChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_VisibilityChangedEventArgs__Windows_UI_Core__VisibilityChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_VisibilityChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.VisibilityChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IVisibilityChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_VisibilityChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowVisibilityChangedEventHandler__Windows_UI_Xaml__WindowVisibilityChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowVisibilityChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget74>(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlBindingHelperStatics.ConvertValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_Type__object__object__(
					global::System.__ComObject __this, 
					global::System.Type type, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_type;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				global::System.Runtime.InteropServices.HSTRING unsafe_type__HSTRING__Name;
				int unsafe_type__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									type, 
									out unsafe_type__HSTRING__Name, 
									out unsafe_type__int__Kind
								);
				unsafe_type.Name = unsafe_type__HSTRING__Name;
				unsafe_type.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_type__int__Kind;
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_type, 
									unsafe_value, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.Storage.IApplicationDataStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_ApplicationData__Windows_Storage__ApplicationData *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.ApplicationData Func_Storage_ApplicationData__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IApplicationData__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IApplicationData__Impl.Vtbl**);
			global::Windows.Storage.ApplicationData value__retval = default(global::Windows.Storage.ApplicationData);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.ApplicationData)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IApplicationData).TypeHandle, 
									typeof(global::Windows.Storage.ApplicationData).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Storage.IApplicationData.get_LocalSettings, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_ApplicationDataContainer__Windows_Storage__ApplicationDataContainer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.ApplicationDataContainer Func_Storage_ApplicationDataContainer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IApplicationDataContainer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IApplicationDataContainer__Impl.Vtbl**);
			global::Windows.Storage.ApplicationDataContainer value__retval = default(global::Windows.Storage.ApplicationDataContainer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.ApplicationDataContainer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IApplicationDataContainer).TypeHandle, 
									typeof(global::Windows.Storage.ApplicationDataContainer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.System.Profile.IHardwareToken.get_Id, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer value__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.System.Profile.IHardwareIdentificationStatics.GetPackageSpecificToken, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Profile_HardwareToken__Windows_System_Profile__HardwareToken *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Profile.HardwareToken Func_Storage_Streams_IBuffer__Profile_HardwareToken__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer nonce, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_nonce = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.System.Profile.IHardwareToken__Impl.Vtbl** unsafe_packageSpecificHardwareToken__retval = default(global::Windows.System.Profile.IHardwareToken__Impl.Vtbl**);
			global::Windows.System.Profile.HardwareToken packageSpecificHardwareToken__retval = default(global::Windows.System.Profile.HardwareToken);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_nonce = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									nonce, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_packageSpecificHardwareToken__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_nonce, 
									&(unsafe_packageSpecificHardwareToken__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				packageSpecificHardwareToken__retval = (global::Windows.System.Profile.HardwareToken)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_packageSpecificHardwareToken__retval), 
									typeof(global::Windows.System.Profile.IHardwareToken).TypeHandle, 
									typeof(global::Windows.System.Profile.HardwareToken).TypeHandle
								);
				// Return
				return packageSpecificHardwareToken__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_nonce)));
				global::System.GC.KeepAlive(nonce);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_packageSpecificHardwareToken__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IDataReaderStatics.FromBuffer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_Streams_DataReader__Windows_Storage_Streams__DataReader *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.DataReader Func_Storage_Streams_IBuffer__Storage_Streams_DataReader__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IDataReader__Impl.Vtbl** unsafe_dataReader__retval = default(global::Windows.Storage.Streams.IDataReader__Impl.Vtbl**);
			global::Windows.Storage.Streams.DataReader dataReader__retval = default(global::Windows.Storage.Streams.DataReader);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_dataReader__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_dataReader__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				dataReader__retval = (global::Windows.Storage.Streams.DataReader)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_dataReader__retval), 
									typeof(global::Windows.Storage.Streams.IDataReader).TypeHandle, 
									typeof(global::Windows.Storage.Streams.DataReader).TypeHandle
								);
				// Return
				return dataReader__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_dataReader__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IDataReader.ReadBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_rg_byte__(
					global::System.__ComObject __this, 
					byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value_mcgLength = 0;
			byte* unsafe_value;
			int unsafe___return__;
			// Marshalling
			if (value != null)
				unsafe_value_mcgLength = (uint)value.Length;
			fixed (byte* pinned_value = global::McgInterop.McgCoreHelpers.GetArrayForCompat(value))
			{
				unsafe_value = (byte*)pinned_value;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value_mcgLength, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Networking.Connectivity.IConnectionProfile.GetNetworkConnectivityLevel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Networking_Connectivity_NetworkConnectivityLevel__Windows_Networking_Connectivity__NetworkConnectivityLevel, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.NetworkConnectivityLevel Func_Networking_Connectivity_NetworkConnectivityLevel__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.NetworkConnectivityLevel unsafe_value__retval;
			global::Windows.Networking.Connectivity.NetworkConnectivityLevel value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Networking.Connectivity.IConnectionProfile.get_NetworkAdapter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Connectivity_NetworkAdapter__Windows_Networking_Connectivity__NetworkAdapter *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.NetworkAdapter Func_Networking_Connectivity_NetworkAdapter__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.INetworkAdapter__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Networking.Connectivity.INetworkAdapter__Impl.Vtbl**);
			global::Windows.Networking.Connectivity.NetworkAdapter value__retval = default(global::Windows.Networking.Connectivity.NetworkAdapter);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Networking.Connectivity.NetworkAdapter)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Networking.Connectivity.INetworkAdapter).TypeHandle, 
									typeof(global::Windows.Networking.Connectivity.NetworkAdapter).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.Connectivity.INetworkInformationStatics.GetInternetConnectionProfile, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Connectivity_ConnectionProfile__Windows_Networking_Connectivity__ConnectionProfile *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.ConnectionProfile Func_Networking_Connectivity_ConnectionProfile__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.IConnectionProfile__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Networking.Connectivity.IConnectionProfile__Impl.Vtbl**);
			global::Windows.Networking.Connectivity.ConnectionProfile value__retval = default(global::Windows.Networking.Connectivity.ConnectionProfile);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Networking.Connectivity.ConnectionProfile)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Networking.Connectivity.IConnectionProfile).TypeHandle, 
									typeof(global::Windows.Networking.Connectivity.ConnectionProfile).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.Connectivity.INetworkInformationStatics.GetHostNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Networking_HostName___Windows_Foundation_Collections__IVectorView_A_Windows_Networking_HostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> Func__IReadOnlyList_1_Networking_HostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Networking_HostName_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Networking_HostName_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.IHostName.get_Type, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Networking_HostNameType__Windows_Networking__HostNameType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostNameType Func_Networking_HostNameType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.HostNameType unsafe_value__retval;
			global::Windows.Networking.HostNameType value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostName Func_uint__Networking_HostName__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.HostName __value__retval = default(global::Windows.Networking.HostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle, 
									typeof(global::Windows.Networking.HostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Networking_HostName__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Networking.HostName value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe_value = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Networking.IHostName__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_HostName__Windows_Networking__HostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Networking_HostName__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Networking.HostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						items[mcgIdx] = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle, 
											typeof(global::Windows.Networking.HostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Networking.HostName>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Networking_HostName___Windows_Foundation_Collections__IIterator_A_Windows_Networking_HostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName> Func__Collections_IIterator_1_Networking_HostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_HostName_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_HostName_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.HostName>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostName Func_Networking_HostName__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.HostName __value__retval = default(global::Windows.Networking.HostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle, 
									typeof(global::Windows.Networking.HostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.HostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_HostName__Windows_Networking__HostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Networking_HostName__uint__(
					global::System.__ComObject __this, 
					global::Windows.Networking.HostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						items[mcgIdx] = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle, 
											typeof(global::Windows.Networking.HostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Media.IVisualTreeHelperStatics.GetChild, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_UI_Xaml_DependencyObject__int__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject reference, 
					int childIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_reference = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_child__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject child__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_reference = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									reference, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_child__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_reference, 
									childIndex, 
									&(unsafe_child__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				child__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_child__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return child__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_reference)));
				global::System.GC.KeepAlive(reference);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_child__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.IVisualTreeHelperStatics.GetChildrenCount, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_UI_Xaml_DependencyObject__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject reference, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_reference = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			int unsafe_count__retval;
			int count__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_reference = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									reference, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_reference, 
									&(unsafe_count__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				count__retval = unsafe_count__retval;
				// Return
				return count__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_reference)));
				global::System.GC.KeepAlive(reference);
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.ApplicationInitializationCallback>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ApplicationInitializationCallback__Windows_UI_Xaml__ApplicationInitializationCallback *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ApplicationInitializationCallback Func_UI_Xaml_ApplicationInitializationCallback__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**);
			global::Windows.UI.Xaml.ApplicationInitializationCallback __value__retval = default(global::Windows.UI.Xaml.ApplicationInitializationCallback);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ApplicationInitializationCallback)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ApplicationInitializationCallback).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget0>(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_WorkItemHandler__Windows_System_Threading__WorkItemHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemHandler Func_Threading_WorkItemHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**);
			global::Windows.System.Threading.WorkItemHandler __value__retval = default(global::Windows.System.Threading.WorkItemHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.System.Threading.WorkItemHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.System.Threading.WorkItemHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget69>(global::Windows.System.Threading.WorkItemHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.Collections.MapChangedEventHandler<string,string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_Collections_MapChangedEventHandler_2_string__string___Windows_Foundation_Collections__MapChangedEventHandler_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> Func__Collections_MapChangedEventHandler_2_string__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> __value__retval = default(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget65>(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.System.Threading.TimerElapsedHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_TimerElapsedHandler__Windows_System_Threading__TimerElapsedHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.TimerElapsedHandler Func_Threading_TimerElapsedHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**);
			global::Windows.System.Threading.TimerElapsedHandler __value__retval = default(global::Windows.System.Threading.TimerElapsedHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.System.Threading.TimerElapsedHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.System.Threading.TimerElapsedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget66>(global::Windows.System.Threading.TimerElapsedHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Core.DispatchedHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Core_DispatchedHandler__Windows_UI_Core__DispatchedHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.DispatchedHandler Func_UI_Core_DispatchedHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**);
			global::Windows.UI.Core.DispatchedHandler __value__retval = default(global::Windows.UI.Core.DispatchedHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Core.DispatchedHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Core.DispatchedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget62>(global::Windows.UI.Core.DispatchedHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs___Windows_Foundation__EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> Func_EventHandler_1__Diagnostics_TracingStatusChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget70>(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,double>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, double>[] Func_rg__KeyValuePair_2_string__double___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_double_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_double_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, double>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, double>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, double>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, double> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, double>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, double>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, double>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Core.CoreApplicationView,Windows.ApplicationModel.Activation.IActivatedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Activation_IActivatedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> Func__TypedEventHandler_2_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget61>(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.UI.Popups.IUICommand>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_UI_Popups_IUICommand___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand> Func__AsyncOperationCompletedHandler_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget68>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> Func__AsyncOperationCompletedHandler_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget64>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Automation.Peers.PatternInterface>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_PatternInterface__Windows_UI_Xaml_Automation_Peers__PatternInterface, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.PatternInterface Func_UI_Xaml_Automation_Peers_PatternInterface__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.PatternInterface unsafe___value__retval;
			global::Windows.UI.Xaml.Automation.Peers.PatternInterface __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationNavigationDirection__Windows_UI_Xaml_Automation_Peers__AutomationNavigationDirection, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection Func_UI_Xaml_Automation_Peers_AutomationNavigationDirection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection unsafe___value__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemPriority>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemPriority__Windows_System_Threading__WorkItemPriority, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemPriority Func_Threading_WorkItemPriority__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemPriority unsafe___value__retval;
			global::Windows.System.Threading.WorkItemPriority __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemOptions>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemOptions__Windows_System_Threading__WorkItemOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemOptions Func_Threading_WorkItemOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemOptions unsafe___value__retval;
			global::Windows.System.Threading.WorkItemOptions __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Core.CoreDispatcherPriority>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreDispatcherPriority__Windows_UI_Core__CoreDispatcherPriority, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreDispatcherPriority Func_UI_Core_CoreDispatcherPriority__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.CoreDispatcherPriority unsafe___value__retval;
			global::Windows.UI.Core.CoreDispatcherPriority __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalityTraceLevel>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalityTraceLevel Func__Diagnostics_CausalityTraceLevel__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalityTraceLevel unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalityTraceLevel __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalitySource>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalitySource Func__Diagnostics_CausalitySource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalitySource unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalitySource __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalityRelation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityRelation__Windows_Foundation_Diagnostics__CausalityRelation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalityRelation Func__Diagnostics_CausalityRelation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalityRelation unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalityRelation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalitySynchronousWork>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySynchronousWork__Windows_Foundation_Diagnostics__CausalitySynchronousWork, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalitySynchronousWork Func__Diagnostics_CausalitySynchronousWork__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalitySynchronousWork unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalitySynchronousWork __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Visibility>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Visibility__Windows_UI_Xaml__Visibility, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Visibility Func_UI_Xaml_Visibility__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Visibility unsafe___value__retval;
			global::Windows.UI.Xaml.Visibility __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Primitives_ComponentResourceLocation__Windows_UI_Xaml_Controls_Primitives__ComponentResourceLocation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation Func_UI_Xaml_Controls_Primitives_ComponentResourceLocation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation unsafe___value__retval;
			global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Security.Cryptography.BinaryStringEncoding>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Security_Cryptography_BinaryStringEncoding__Windows_Security_Cryptography__BinaryStringEncoding, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.BinaryStringEncoding Func_Security_Cryptography_BinaryStringEncoding__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.BinaryStringEncoding unsafe___value__retval;
			global::Windows.Security.Cryptography.BinaryStringEncoding __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Media.Capture.CameraCaptureUIMode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Media_Capture_CameraCaptureUIMode__Windows_Media_Capture__CameraCaptureUIMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Media.Capture.CameraCaptureUIMode Func_Media_Capture_CameraCaptureUIMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Media.Capture.CameraCaptureUIMode unsafe___value__retval;
			global::Windows.Media.Capture.CameraCaptureUIMode __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Devices.Enumeration.Pnp.PnpObjectType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectType__Windows_Devices_Enumeration_Pnp__PnpObjectType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObjectType Func_Devices_Enumeration_Pnp_PnpObjectType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.PnpObjectType unsafe___value__retval;
			global::Windows.Devices.Enumeration.Pnp.PnpObjectType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Media_Imaging_DownloadProgressEventHandler__Windows_UI_Xaml_Media_Imaging__DownloadProgressEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler Func_UI_Xaml_Media_Imaging_DownloadProgressEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler __value__retval = default(global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget67>(global::Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.System.Profile.ProfileHardwareTokenContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_System_Profile_ProfileHardwareTokenContract__Windows_System_Profile__ProfileHardwareTokenContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Profile.ProfileHardwareTokenContract Func_Profile_ProfileHardwareTokenContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Profile.ProfileHardwareTokenContract unsafe___value__retval;
			global::Windows.System.Profile.ProfileHardwareTokenContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowActivatedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowActivatedEventHandler__Windows_UI_Xaml__WindowActivatedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowActivatedEventHandler Func_UI_Xaml_WindowActivatedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowActivatedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowActivatedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowActivatedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowActivatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget71>(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowClosedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowClosedEventHandler__Windows_UI_Xaml__WindowClosedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowClosedEventHandler Func_UI_Xaml_WindowClosedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowClosedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowClosedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowClosedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowClosedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget72>(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowSizeChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowSizeChangedEventHandler__Windows_UI_Xaml__WindowSizeChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowSizeChangedEventHandler Func_UI_Xaml_WindowSizeChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowSizeChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowSizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget73>(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowVisibilityChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowVisibilityChangedEventHandler__Windows_UI_Xaml__WindowVisibilityChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler Func_UI_Xaml_WindowVisibilityChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget74>(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.UI.Xaml.Markup.IXamlType>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[] Func_rg__KeyValuePair_2_string__UI_Xaml_Markup_IXamlType___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Type,Windows.UI.Xaml.Markup.IXamlType>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[] Func_rg__KeyValuePair_2_Type__UI_Xaml_Markup_IXamlType___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Type_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Type_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.UI.Xaml.Markup.IXamlMember>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[] Func_rg__KeyValuePair_2_string__UI_Xaml_Markup_IXamlMember___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] Func_rg__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.get_CacheControl, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Filters_HttpCacheControl__Windows_Web_Http_Filters__HttpCacheControl *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Filters.HttpCacheControl Func_Web_Http_Filters_HttpCacheControl__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Vtbl**);
			global::Windows.Web.Http.Filters.HttpCacheControl value__retval = default(global::Windows.Web.Http.Filters.HttpCacheControl);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Filters.HttpCacheControl)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Filters.IHttpCacheControl).TypeHandle, 
									typeof(global::Windows.Web.Http.Filters.HttpCacheControl).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.put_ClientCertificate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.put_ProxyCredential, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Credentials_PasswordCredential__Windows_Security_Credentials__PasswordCredential *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Security_Credentials_PasswordCredential__(
					global::System.__ComObject __this, 
					global::Windows.Security.Credentials.PasswordCredential value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Credentials.IPasswordCredential).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpFilter.SendRequestAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpRequestMessage__Windows_Web_Http__HttpRequestMessage *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func_Web_Http_HttpRequestMessage___IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.HttpRequestMessage request, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl** unsafe_request = default(global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_request = (global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									request, 
									typeof(global::Windows.Web.Http.IHttpRequestMessage).TypeHandle
								);
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_request, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_request)));
				global::System.GC.KeepAlive(request);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessageFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpMethod__Windows_Web_Http__HttpMethod *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Web_Http_HttpMethod__Uri__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpMethod__Impl.Vtbl** unsafe_method = default(global::Windows.Web.Http.IHttpMethod__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::System.IntPtr unsafe_httpRequestMessage__retval;
			global::System.IntPtr httpRequestMessage__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_method = (global::Windows.Web.Http.IHttpMethod__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									method, 
									typeof(global::Windows.Web.Http.IHttpMethod).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_method, 
									unsafe_uri, 
									&(unsafe_httpRequestMessage__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				httpRequestMessage__retval = unsafe_httpRequestMessage__retval;
				// Return
				return httpRequestMessage__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_method)));
				global::System.GC.KeepAlive(method);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.put_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Web_Http_IHttpContent__Windows_Web_Http__IHttpContent *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Web_Http_IHttpContent__(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.IHttpContent value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpContent__Impl.Vtbl** unsafe_value = default(global::Windows.Web.Http.IHttpContent__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Web.Http.IHttpContent__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Web.Http.IHttpContent).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpRequestHeaderCollection__Windows_Web_Http_Headers__HttpRequestHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpRequestHeaderCollection Func_Web_Http_Headers_HttpRequestHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpRequestHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpRequestHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpRequestHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpRequestHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_string__object___Windows_Foundation_Collections__IMap_A_string_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IDictionary<string, object> Func__IDictionary_2_string__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IDictionary_A_string_j_System_Object_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IDictionary_A_string_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IDictionary<string, object> value__retval = default(global::System.Collections.Generic.IDictionary<string, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IDictionary<string, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IDictionary<string, object>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpContent.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpContentHeaderCollection__Windows_Web_Http_Headers__HttpContentHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpContentHeaderCollection Func_Web_Http_Headers_HttpContentHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpContentHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpContentHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpContentHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpContentHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpContentHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpContent.ReadAsInputStreamAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> Func__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.Web.Http.Headers.IHttpContentHeaderCollection.TryAppendWithoutValidation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__string__bool__(
					global::System.__ComObject __this, 
					string name, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			bool succeeded__retval;
			sbyte unsafe_succeeded__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_name = name)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_name, 
										unsafe_value, 
										&(unsafe_succeeded__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					succeeded__retval = unsafe_succeeded__retval != 0;
				}
			}
			// Return
			return succeeded__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,ulong>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___ulong__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> asyncInfo, 
					ulong progressInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.put_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationProgressHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget75>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> Func__AsyncOperationProgressHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget75>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,ulong>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationWithProgressCompletedHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget76>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IInputStream__Windows_Storage_Streams__IInputStream *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IInputStream Func_Storage_Streams_IInputStream__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IInputStream__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**);
			global::Windows.Storage.Streams.IInputStream __value__retval = default(global::Windows.Storage.Streams.IInputStream);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Storage.Streams.IInputStream)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Storage.Streams.IInputStream).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Web_Http_IHttpContent__Windows_Web_Http__IHttpContent *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.IHttpContent Func_Web_Http_IHttpContent__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpContent__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.IHttpContent__Impl.Vtbl**);
			global::Windows.Web.Http.IHttpContent value__retval = default(global::Windows.Web.Http.IHttpContent);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.IHttpContent)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.IHttpContent).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpResponseHeaderCollection__Windows_Web_Http_Headers__HttpResponseHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpResponseHeaderCollection Func_Web_Http_Headers_HttpResponseHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpResponseHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpResponseHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpResponseHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpResponseHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_StatusCode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpStatusCode__Windows_Web_Http__HttpStatusCode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpStatusCode Func_Web_Http_HttpStatusCode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpStatusCode unsafe_value__retval;
			global::Windows.Web.Http.HttpStatusCode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Version, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpVersion__Windows_Web_Http__HttpVersion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpVersion Func_Web_Http_HttpVersion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpVersion unsafe_value__retval;
			global::Windows.Web.Http.HttpVersion value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Windows_Web_Http_HttpProgress__Windows_Web_Http__HttpProgress, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___Web_Http_HttpProgress__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> asyncInfo, 
					global::Windows.Web.Http.HttpProgress progressInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Web.Http.HttpProgress__Impl.UnsafeType unsafe_progressInfo = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				global::Windows.Web.Http.HttpProgress__Impl.Marshal__SafeToUnsafe(
									ref progressInfo, 
									out unsafe_progressInfo
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									unsafe_progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
				global::Windows.Web.Http.HttpProgress__Impl.Cleanup__Unsafe(ref unsafe_progressInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.put_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationProgressHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget77>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func__AsyncOperationProgressHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget77>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationWithProgressCompletedHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget78>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpResponseMessage__Windows_Web_Http__HttpResponseMessage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpResponseMessage Func_Web_Http_HttpResponseMessage__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpResponseMessage__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Web.Http.IHttpResponseMessage__Impl.Vtbl**);
			global::Windows.Web.Http.HttpResponseMessage __value__retval = default(global::Windows.Web.Http.HttpResponseMessage);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Web.Http.HttpResponseMessage)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Web.Http.IHttpResponseMessage).TypeHandle, 
									typeof(global::Windows.Web.Http.HttpResponseMessage).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Web.Http.Filters.HttpCacheReadBehavior>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_Filters_HttpCacheReadBehavior__Windows_Web_Http_Filters__HttpCacheReadBehavior, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Filters.HttpCacheReadBehavior Func_Web_Http_Filters_HttpCacheReadBehavior__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Filters.HttpCacheReadBehavior unsafe___value__retval;
			global::Windows.Web.Http.Filters.HttpCacheReadBehavior __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_string___Windows_Foundation_Collections__IIterable_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<string> Func__IEnumerable_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<string> __value__retval = default(global::System.Collections.Generic.IEnumerable<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<string>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> Func__KeyValuePair_2_string___IEnumerable_1_string__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_string___IEnumerable_1_string__uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Networking.IHostName>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Networking_IHostName___Windows_Foundation_Collections__IIterator_A_Windows_Networking_IHostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName> Func__Collections_IIterator_1_Networking_IHostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_IHostName_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_IHostName_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.IHostName>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.IHostName Func_Networking_IHostName__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.IHostName __value__retval = default(global::Windows.Networking.IHostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.IHostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_IHostName__Windows_Networking__IHostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Networking_IHostName__uint__(
					global::System.__ComObject __this, 
					global::Windows.Networking.IHostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						items[mcgIdx] = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Foundation.IStringable>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Foundation_IStringable___Windows_Foundation_Collections__IIterator_A_Windows_Foundation_IStringable_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable> Func__Collections_IIterator_1__IStringable___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_IStringable_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_IStringable_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.IStringable>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IStringable Func__IStringable__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			global::Windows.Foundation.IStringable __value__retval = default(global::Windows.Foundation.IStringable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.IStringable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Foundation_IStringable__Windows_Foundation__IStringable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IStringable__uint__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IStringable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.IStringable__Impl.Vtbl*** unsafe_items = default(global::Windows.Foundation.IStringable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Foundation.IStringable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Foundation.IStringable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						items[mcgIdx] = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.IStringable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.IHostName Func_uint__Networking_IHostName__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.IHostName __value__retval = default(global::Windows.Networking.IHostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Networking_IHostName__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Networking.IHostName value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe_value = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Networking.IHostName__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_IHostName__Windows_Networking__IHostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Networking_IHostName__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Networking.IHostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						items[mcgIdx] = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IStringable Func_uint___IStringable__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			global::Windows.Foundation.IStringable __value__retval = default(global::Windows.Foundation.IStringable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__IStringable__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IStringable value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.IStringable__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Foundation_IStringable__Windows_Foundation__IStringable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__IStringable__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Foundation.IStringable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.IStringable__Impl.Vtbl*** unsafe_items = default(global::Windows.Foundation.IStringable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Foundation.IStringable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Foundation.IStringable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						items[mcgIdx] = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.IStringable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func__AsyncOperationWithProgressCompletedHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget78>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Web.Http.HttpProgress>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Windows_Web_Http_HttpProgress__Windows_Web_Http__HttpProgress, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpProgress Func_Web_Http_HttpProgress__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpProgress__Impl.UnsafeType unsafe___value__retval = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
			global::Windows.Web.Http.HttpProgress __value__retval = default(global::Windows.Web.Http.HttpProgress);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Web.Http.HttpProgress__Impl.Marshal__UnsafeToSafe(
									ref unsafe___value__retval, 
									out __value__retval
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::Windows.Web.Http.HttpProgress__Impl.Cleanup__Unsafe(ref unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,ulong>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> Func__AsyncOperationWithProgressCompletedHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget76>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Web.Http.HttpProgressStage>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpProgressStage__Windows_Web_Http__HttpProgressStage, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpProgressStage Func_Web_Http_HttpProgressStage__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpProgressStage unsafe___value__retval;
			global::Windows.Web.Http.HttpProgressStage __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Web.Http.IHttpStreamContentFactory.CreateFromInputStream, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IInputStream__Windows_Storage_Streams__IInputStream *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Storage_Streams_IInputStream__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IInputStream content, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IInputStream__Impl.Vtbl** unsafe_content = default(global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**);
			global::System.IntPtr unsafe_streamContent__retval;
			global::System.IntPtr streamContent__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_content = (global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									content, 
									typeof(global::Windows.Storage.Streams.IInputStream).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_content, 
									&(unsafe_streamContent__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				streamContent__retval = unsafe_streamContent__retval;
				// Return
				return streamContent__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_content)));
				global::System.GC.KeepAlive(content);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.Certificate Func_uint__Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.Certificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.Certificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
									typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_Certificate__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_Certificate__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.Certificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
											typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.Certificate>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_Certificate___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate> Func__Collections_IIterator_1_Security_Cryptography_Certificates_Certificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.Certificate>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.Certificate Func_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.Certificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.Certificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
									typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.Certificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_Certificate__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
											typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__IAsyncOperation_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget79>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.get_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> Func__AsyncOperationCompletedHandler_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget79>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate___Windows_Foundation_Collections__IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> Func__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Certificates.ICertificateStoresStatics.FindAllAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_CertificateQuery__Windows_Security_Cryptography_Certificates__CertificateQuery *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__IAsyncOperation_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> Func_Security_Cryptography_Certificates_CertificateQuery___IAsyncOperation_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.CertificateQuery query, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl** unsafe_query = default(global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_query = (global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									query, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificateQuery).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_query, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_query)));
				global::System.GC.KeepAlive(query);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.ICertificate>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_ICertificate___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate> Func__Collections_IIterator_1_Security_Cryptography_Certificates_ICertificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate Func_Security_Cryptography_Certificates_ICertificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_ICertificate__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.ICertificate2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_ICertificate2___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2> Func__Collections_IIterator_1_Security_Cryptography_Certificates_ICertificate2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate2 Func_Security_Cryptography_Certificates_ICertificate2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate2 __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_ICertificate2__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate Func_uint__Security_Cryptography_Certificates_ICertificate__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_ICertificate__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_ICertificate__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.ICertificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate2 Func_uint__Security_Cryptography_Certificates_ICertificate2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate2 __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_ICertificate2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_ICertificate2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeAttr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_IntPtr__(
					global::System.__ComObject __this, 
					out global::System.IntPtr ppTypeAttr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppTypeAttr;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_ppTypeAttr)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppTypeAttr = unsafe_ppTypeAttr;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeComp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__ComTypes_ITypeComp__Private_Interop__(
					global::System.__ComObject __this, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl** unsafe_ppTComp = default(global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTComp = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_ppTComp)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTComp = (global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTComp), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetFuncDesc, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_IntPtr__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.IntPtr ppFuncDesc, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppFuncDesc;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_ppFuncDesc)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppFuncDesc = unsafe_ppFuncDesc;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_string__wchar_t * *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_rg_string__int__out_int__(
					global::System.__ComObject __this, 
					int memid, 
					string[] rgBstrNames, 
					int cMaxNames, 
					out int pcNames, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort** unsafe_rgBstrNames = default(ushort**);
			int unsafe_pcNames;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (rgBstrNames != null)
					unsafe_rgBstrNames = (ushort**)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(rgBstrNames.Length * sizeof(ushort*))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									memid, 
									unsafe_rgBstrNames, 
									cMaxNames, 
									&(unsafe_pcNames)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pcNames = unsafe_pcNames;
				if (rgBstrNames != null)
					for (uint mcgIdx = 0; (mcgIdx < rgBstrNames.Length); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BstrMarshaller] string__wchar_t * rgBstrNames
						rgBstrNames[mcgIdx] = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_rgBstrNames[mcgIdx]);
					}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_rgBstrNames != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < rgBstrNames.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.BstrMarshaller] string__wchar_t * rgBstrNames
						global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_rgBstrNames[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgBstrNames);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeOfImplType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_int__(
					global::System.__ComObject __this, 
					int index, 
					out int href, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe_href;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_href)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			href = unsafe_href;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetImplTypeFlags, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_IMPLTYPEFLAGS__System_Private_Interop__IMPLTYPEFLAGS__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_IMPLTYPEFLAGS__Private_Interop__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS__System_Private_Interop pImplTypeFlags, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS__System_Private_Interop unsafe_pImplTypeFlags;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_pImplTypeFlags)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pImplTypeFlags = unsafe_pImplTypeFlags;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetIDsOfNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_string__wchar_t * *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_string__int__out_rg_int__(
					global::System.__ComObject __this, 
					string[] rgszNames, 
					int cNames, 
					int[] pMemId, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort** unsafe_rgszNames = default(ushort**);
			int* unsafe_pMemId;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (rgszNames == null)
					unsafe_rgszNames = null;
				else
				{
					if (rgszNames != null)
						unsafe_rgszNames = (ushort**)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(rgszNames.Length * sizeof(ushort*))));
					for (uint mcgIdx = 0; (mcgIdx < rgszNames.Length); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t * rgszNames
						unsafe_rgszNames[mcgIdx] = (ushort*)global::McgInterop.McgHelpers.AllocUnicodeBuffer(rgszNames[mcgIdx]);
						global::McgInterop.McgHelpers.CopyUnicodeString(
											rgszNames[mcgIdx], 
											unsafe_rgszNames[mcgIdx]
										);
					}
				}
				fixed (int* pinned_pMemId = global::McgInterop.McgCoreHelpers.GetArrayForCompat(pMemId))
				{
					unsafe_pMemId = (int*)pinned_pMemId;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_rgszNames, 
										cNames, 
										unsafe_pMemId
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_rgszNames != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < rgszNames.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t * rgszNames
						global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgszNames[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgszNames);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] short__short, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] System_Runtime_InteropServices_ComTypes_DISPPARAMS__System_Private_Interop__System_Runtime_InteropServices_ComTypes__DISPPARAMS__System_Private_Interop, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__int__short__out__ComTypes_DISPPARAMS__Private_Interop__IntPtr__IntPtr__out_int__(
					global::System.__ComObject __this, 
					object pvInstance, 
					int memid, 
					short wFlags, 
					ref global::System.Runtime.InteropServices.ComTypes.DISPPARAMS__System_Private_Interop pDispParams, 
					global::System.IntPtr pVarResult, 
					global::System.IntPtr pExcepInfo, 
					out int puArgErr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_pvInstance = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			global::System.Runtime.InteropServices.ComTypes.DISPPARAMS__System_Private_Interop unsafe_pDispParams;
			int unsafe_puArgErr;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pvInstance = (global::System.Runtime.InteropServices.__vtable_IUnknown**)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									pvInstance, 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				unsafe_pDispParams = pDispParams;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pvInstance, 
									memid, 
									wFlags, 
									&(unsafe_pDispParams), 
									pVarResult, 
									pExcepInfo, 
									&(unsafe_puArgErr)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				puArgErr = unsafe_puArgErr;
				pDispParams = unsafe_pDispParams;
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pvInstance)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetDocumentation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_string__out_string__out_int__out_string__(
					global::System.__ComObject __this, 
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_strName = default(ushort*);
			ushort* unsafe_strDocString = default(ushort*);
			int unsafe_dwHelpContext;
			ushort* unsafe_strHelpFile = default(ushort*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strName = null;
				unsafe_strDocString = null;
				unsafe_strHelpFile = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe_strName), 
									&(unsafe_strDocString), 
									&(unsafe_dwHelpContext), 
									&(unsafe_strHelpFile)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				strHelpFile = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strHelpFile);
				dwHelpContext = unsafe_dwHelpContext;
				strDocString = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strDocString);
				strName = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strName);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strName);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strDocString);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strHelpFile);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetDllEntry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_INVOKEKIND__System_Private_Interop__INVOKEKIND__System_Private_Interop, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int___ComTypes_INVOKEKIND__Private_Interop__IntPtr__IntPtr__IntPtr__(
					global::System.__ComObject __this, 
					int memid, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					global::System.IntPtr pBstrDllName, 
					global::System.IntPtr pBstrName, 
					global::System.IntPtr pwOrdinal, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								memid, 
								invKind, 
								pBstrDllName, 
								pBstrName, 
								pwOrdinal
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeInfo, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_ITypeInfo__Private_Interop__(
					global::System.__ComObject __this, 
					int hRef, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTI, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTI = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTI = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									hRef, 
									&(unsafe_ppTI)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTI = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTI), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTI)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.AddressOfMember, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_INVOKEKIND__System_Private_Interop__INVOKEKIND__System_Private_Interop, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int___ComTypes_INVOKEKIND__Private_Interop__out_IntPtr__(
					global::System.__ComObject __this, 
					int memid, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					out global::System.IntPtr ppv, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppv;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								memid, 
								invKind, 
								&(unsafe_ppv)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppv = unsafe_ppv;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, [fwd] [in] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Guid__out_object__(
					global::System.__ComObject __this, 
					object pUnkOuter, 
					ref global::System.Guid riid, 
					out object ppvObj, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_pUnkOuter = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			global::System.Guid unsafe_riid;
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_ppvObj = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pUnkOuter = (global::System.Runtime.InteropServices.__vtable_IUnknown**)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									pUnkOuter, 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				unsafe_riid = riid;
				unsafe_ppvObj = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pUnkOuter, 
									&(unsafe_riid), 
									&(unsafe_ppvObj)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppvObj = (object)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppvObj), 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pUnkOuter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppvObj)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetMops, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_string__(
					global::System.__ComObject __this, 
					int memid, 
					out string pBstrMops, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_pBstrMops = default(ushort*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pBstrMops = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									memid, 
									&(unsafe_pBstrMops)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pBstrMops = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_pBstrMops);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_pBstrMops);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetContainingTypeLib, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeLib__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeLib__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__ComTypes_ITypeLib__Private_Interop__out_int__(
					global::System.__ComObject __this, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop ppTLB, 
					out int pIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop__Impl.Vtbl** unsafe_ppTLB = default(global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop__Impl.Vtbl**);
			int unsafe_pIndex;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTLB = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_ppTLB), 
									&(unsafe_pIndex)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pIndex = unsafe_pIndex;
				ppTLB = (global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTLB), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeLib,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publi" +
											"cKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTLB)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.ReleaseTypeAttr, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_void__IntPtr__(
					global::System.__ComObject __this, 
					global::System.IntPtr pTypeAttr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.ComCallHelpers.ComCall__void__(
								__this, 
								__typeHnd, 
								__targetIndex, 
								pTypeAttr
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop.Bind, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] short__short, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_DESCKIND__System_Private_Interop__DESCKIND__System_Private_Interop, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] System_Runtime_InteropServices_ComTypes_BINDPTR__System_Private_Interop__System_Runtime_InteropServices_ComTypes__BINDPTR__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__short__out__ComTypes_ITypeInfo__Private_Interop__out__ComTypes_DESCKIND__Private_Interop__out__ComTypes_BINDPTR__Private_Interop__(
					global::System.__ComObject __this, 
					string szName, 
					int lHashVal, 
					short wFlags, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System.Runtime.InteropServices.ComTypes.DESCKIND__System_Private_Interop pDescKind, 
					out global::System.Runtime.InteropServices.ComTypes.BINDPTR__System_Private_Interop pBindPtr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szName = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			global::System.Runtime.InteropServices.ComTypes.DESCKIND__System_Private_Interop unsafe_pDescKind;
			global::System.Runtime.InteropServices.ComTypes.BINDPTR__System_Private_Interop unsafe_pBindPtr;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szName = szName)
				{
					unsafe_szName = (ushort*)pinned_szName;
					unsafe_ppTInfo = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_szName, 
										lHashVal, 
										wFlags, 
										&(unsafe_ppTInfo), 
										&(unsafe_pDescKind), 
										&(unsafe_pBindPtr)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					pBindPtr = unsafe_pBindPtr;
					pDescKind = unsafe_pDescKind;
					ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTInfo), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop.BindType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__out__ComTypes_ITypeInfo__Private_Interop__out__ComTypes_ITypeComp__Private_Interop__(
					global::System.__ComObject __this, 
					string szName, 
					int lHashVal, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szName = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl** unsafe_ppTComp = default(global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szName = szName)
				{
					unsafe_szName = (ushort*)pinned_szName;
					unsafe_ppTInfo = null;
					unsafe_ppTComp = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_szName, 
										lHashVal, 
										&(unsafe_ppTInfo), 
										&(unsafe_ppTComp)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					ppTComp = (global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTComp), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
					ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTInfo), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoCount, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_int___2(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.ComCallHelpers.ComCall__int__(
								__this, 
								__typeHnd, 
								__targetIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_TYPEKIND__System_Private_Interop__TYPEKIND__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_TYPEKIND__Private_Interop__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.TYPEKIND__System_Private_Interop pTKind, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.TYPEKIND__System_Private_Interop unsafe_pTKind;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_pTKind)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pTKind = unsafe_pTKind;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoOfGuid, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_Guid__out__ComTypes_ITypeInfo__Private_Interop__(
					global::System.__ComObject __this, 
					ref global::System.Guid guid, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Guid unsafe_guid;
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_guid = guid;
				unsafe_ppTInfo = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_guid), 
									&(unsafe_ppTInfo)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTInfo), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				guid = unsafe_guid;
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.IsName, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__int__bool__(
					global::System.__ComObject __this, 
					string szNameBuf, 
					int lHashVal, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szNameBuf = default(ushort*);
			int unsafe___value__retval;
			bool __value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pinned_szNameBuf = szNameBuf)
			{
				unsafe_szNameBuf = (ushort*)pinned_szNameBuf;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_szNameBuf, 
									lHashVal, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.FindName, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * *, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] short__short, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__out_rg__ComTypes_ITypeInfo__Private_Interop__out_rg_int__out_short__(
					global::System.__ComObject __this, 
					string szNameBuf, 
					int lHashVal, 
					global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop[] ppTInfo, 
					int[] rgMemId, 
					ref short pcFound, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szNameBuf = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl*** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl***);
			int* unsafe_rgMemId;
			short unsafe_pcFound;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szNameBuf = szNameBuf)
				{
					unsafe_szNameBuf = (ushort*)pinned_szNameBuf;
					if (ppTInfo != null)
						unsafe_ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(ppTInfo.Length * sizeof(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**))));
					fixed (int* pinned_rgMemId = global::McgInterop.McgCoreHelpers.GetArrayForCompat(rgMemId))
					{
						unsafe_rgMemId = (int*)pinned_rgMemId;
						unsafe_pcFound = pcFound;
						// Call to native method
						unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
											__this, 
											__typeHnd, 
											__targetIndex, 
											unsafe_szNameBuf, 
											lHashVal, 
											unsafe_ppTInfo, 
											unsafe_rgMemId, 
											&(unsafe_pcFound)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						pcFound = unsafe_pcFound;
					}
					if (ppTInfo != null)
						for (uint mcgIdx = 0; (mcgIdx < ppTInfo.Length); mcgIdx++)
						{
							// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * ppTInfo
							ppTInfo[mcgIdx] = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
												((global::System.IntPtr)unsafe_ppTInfo[mcgIdx]), 
												global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
														"icKeyToken=b03f5f7f11d50a3a")
											);
						}
				}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_ppTInfo != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < ppTInfo.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * ppTInfo
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_ppTInfo);
			}
		}
	}

	internal unsafe static partial class ComCallHelpers
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Type__Impl.UnsafeType arg1, 
					void* arg2, 
					global::System.Runtime.InteropServices.HSTRING arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					uint arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Thickness arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Size arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Text.FontWeight arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.GridLength arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					sbyte arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0, 
					double arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1, 
					double arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0, 
					double arg1, 
					sbyte arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					int arg2, 
					uint arg3, 
					int arg4, 
					int arg5, 
					int arg6, 
					global::System.DateTimeOffset__Impl.UnsafeType arg7, 
					sbyte arg8, 
					sbyte arg9, 
					void* arg10)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8, 
								arg9, 
								arg10
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.DateTimeOffset__Impl.UnsafeType arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.TimeSpan arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1, 
					global::System.TimeSpan arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1, 
					double arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1, 
					double arg2, 
					global::System.TimeSpan arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0, 
					global::System.TimeSpan arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0, 
					global::Windows.Foundation.Point arg1, 
					global::System.TimeSpan arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					sbyte arg1, 
					int arg2, 
					int arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					sbyte arg2, 
					uint arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					sbyte arg2, 
					uint arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Foundation.Point arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0, 
					sbyte arg1, 
					sbyte arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					global::System.Runtime.InteropServices.HSTRING arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.TimeSpan arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Graphics.Display.DisplayOrientations arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					global::Windows.System.Threading.WorkItemOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					global::System.Runtime.InteropServices.HSTRING arg4, 
					ulong arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					ulong arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Web.Http.HttpProgress__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					global::System.IntPtr arg4, 
					global::System.IntPtr arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					global::System.IntPtr arg2, 
					global::System.IntPtr arg3, 
					global::System.IntPtr arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void ComCall__void__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			global::McgInterop.Intrinsics.StdCall__void__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}
	}

	internal unsafe static partial class ReverseComSharedStubs
	{
		// Signature, Windows.Foundation.IStringable.ToString, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_string__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.HSTRING* unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.Foundation.IStringable>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).ToString();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = global::System.Runtime.InteropServices.McgMarshal.StringToHString(value__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.FreeHString((*(unsafe_value__retval)).handle);
					(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_object__Type__object__string__object__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value, 
					global::System.Type__Impl.UnsafeType unsafe_targetType, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter, 
					global::System.Runtime.InteropServices.HSTRING unsafe_language, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** unsafe_returnValue__retval)
		{
			// Setup
			object value = default(object);
			global::System.Type targetType;
			object parameter = default(object);
			string language = default(string);
			if (unsafe_returnValue__retval != null)
				(*(unsafe_returnValue__retval)) = null;
			object returnValue__retval = default(object);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				targetType = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
									unsafe_targetType.Name, 
									((int)unsafe_targetType.Kind)
								);
				parameter = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_parameter));
				language = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_language);
				// Call to managed method
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Data.IValueConverter>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Convert(
									value, 
									targetType, 
									parameter, 
									language
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_returnValue__retval != null)
					(*(unsafe_returnValue__retval)) = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(returnValue__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_returnValue__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_returnValue__retval)))));
					(*(unsafe_returnValue__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.SuspendingEventHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingEventArgs__Windows_ApplicationModel__SuspendingEventArgs *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__ApplicationModel_SuspendingEventArgs__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender, 
					global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl** unsafe_e)
		{
			// Setup
			object sender = default(object);
			global::Windows.ApplicationModel.SuspendingEventArgs e = default(global::Windows.ApplicationModel.SuspendingEventArgs);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				e = (global::Windows.ApplicationModel.SuspendingEventArgs)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(global::Windows.ApplicationModel.ISuspendingEventArgs).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingEventArgs).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.SuspendingEventHandler>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Invoke(
									sender, 
									e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.IDataTemplateExtension.ResetTemplate, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_(global::System.IntPtr pComThis)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.IDataTemplateExtension>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).ResetTemplate();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatedEventHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender, 
					global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e)
		{
			// Setup
			object sender = default(object);
			global::Windows.UI.Xaml.Navigation.NavigationEventArgs e = default(global::Windows.UI.Xaml.Navigation.NavigationEventArgs);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				e = (global::Windows.UI.Xaml.Navigation.NavigationEventArgs)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationEventArgs).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Navigation.NavigatedEventHandler>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Invoke(
									sender, 
									e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.IntPtr pComThis, 
					global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationEventArgs e = default(global::Windows.UI.Xaml.Navigation.NavigationEventArgs);
			try
			{
				// Marshalling
				e = (global::Windows.UI.Xaml.Navigation.NavigationEventArgs)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationEventArgs).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Controls.IPageOverrides>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).OnNavigatedFrom(e);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXmlnsDefinitions, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_rg_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.IntPtr pComThis, 
					uint* unsafe_definitions__retval_mcgLength, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType** unsafe_definitions__retval)
		{
			// Setup
			if (unsafe_definitions__retval != null)
				(*(unsafe_definitions__retval)) = null;
			global::Windows.UI.Xaml.Markup.XmlnsDefinition[] definitions__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition[]);
			try
			{
				// Marshalling
				// Call to managed method
				definitions__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).GetXmlnsDefinitions();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_definitions__retval != null)
					if (definitions__retval == null)
						(*(unsafe_definitions__retval)) = null;
					else
					{
						if (definitions__retval != null)
							(*(unsafe_definitions__retval_mcgLength)) = (uint)definitions__retval.Length;
						if (definitions__retval != null)
							(*(unsafe_definitions__retval)) = (global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked((*(unsafe_definitions__retval_mcgLength)) * sizeof(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType))));
						for (uint mcgIdx = 0; (mcgIdx < (*(unsafe_definitions__retval_mcgLength))); mcgIdx++)
						{
							// [rev] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition definitions__retval
							global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__SafeToUnsafe(
												ref definitions__retval[mcgIdx], 
												out (*(unsafe_definitions__retval))[mcgIdx]
											);
						}
					}
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_definitions__retval != null)
				{
					global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree((*(unsafe_definitions__retval)));
					(*(unsafe_definitions__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_BaseType, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlType__Windows_UI_Xaml_Markup__IXamlType *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_UI_Xaml_Markup_IXamlType__(
					global::System.IntPtr pComThis, 
					global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::Windows.UI.Xaml.Markup.IXamlType value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_BaseType();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::Windows.UI.Xaml.Markup.IXamlType).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_IsArray, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_bool__(
					global::System.IntPtr pComThis, 
					sbyte* unsafe_value__retval)
		{
			// Setup
			bool value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_IsArray();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (value__retval ? ((sbyte)1) : ((sbyte)0));
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToVector, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__object__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value)
		{
			// Setup
			object instance = default(object);
			object value = default(object);
			try
			{
				// Marshalling
				instance = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance));
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).AddToVector(
									instance, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}
	}
}

